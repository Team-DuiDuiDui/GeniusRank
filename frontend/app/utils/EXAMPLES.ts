/** 这个文件来放点示例用的 */

export const userEX = {
    login: 'Heuluck',
    id: 89375068,
    user_view_type: 'public',
    node_id: 'MDQ6VXNlcjg5Mzc1MDY4',
    avatar_url: 'https://avatars.githubusercontent.com/u/89375068?v=4',
    gravatar_id: '',
    url: 'https://api.github.com/users/Heuluck',
    html_url: 'https://github.com/Heuluck',
    followers_url: 'https://api.github.com/users/Heuluck/followers',
    following_url: 'https://api.github.com/users/Heuluck/following{/other_user}',
    gists_url: 'https://api.github.com/users/Heuluck/gists{/gist_id}',
    starred_url: 'https://api.github.com/users/Heuluck/starred{/owner}{/repo}',
    subscriptions_url: 'https://api.github.com/users/Heuluck/subscriptions',
    organizations_url: 'https://api.github.com/users/Heuluck/orgs',
    repos_url: 'https://api.github.com/users/Heuluck/repos',
    events_url: 'https://api.github.com/users/Heuluck/events{/privacy}',
    received_events_url: 'https://api.github.com/users/Heuluck/received_events',
    type: 'User',
    site_admin: false,
    name: 'Heuluck Lu',
    company: '@NCUHOME',
    blog: 'https://heuluck.top',
    location: null,
    email: null,
    hireable: null,
    bio: 'Furry / Frontend / Full-Stack Dev / NCUHOMER',
    twitter_username: null,
    public_repos: 11,
    public_gists: 0,
    followers: 12,
    following: 26,
    created_at: '2021-08-23T05:43:15Z',
    updated_at: '2024-10-25T04:56:56Z',
};

export const userPRsEX = {
    total_count: 4,
    incomplete_results: false,
    items: [
        {
            url: 'https://api.github.com/repos/Heuluck/luck-blog/issues/1',
            repository_url: 'https://api.github.com/repos/Heuluck/luck-blog',
            labels_url: 'https://api.github.com/repos/Heuluck/luck-blog/issues/1/labels{/name}',
            comments_url: 'https://api.github.com/repos/Heuluck/luck-blog/issues/1/comments',
            events_url: 'https://api.github.com/repos/Heuluck/luck-blog/issues/1/events',
            html_url: 'https://github.com/Heuluck/luck-blog/pull/1',
            id: 2333995902,
            node_id: 'PR_kwDOMEvMyc5xc8fM',
            number: 1,
            title: 'feat: 完成文章页面、后端api以及主页到文章的跳转',
            user: {
                login: 'Heuluck',
                id: 89375068,
                node_id: 'MDQ6VXNlcjg5Mzc1MDY4',
                avatar_url: 'https://avatars.githubusercontent.com/u/89375068?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/Heuluck',
                html_url: 'https://github.com/Heuluck',
                followers_url: 'https://api.github.com/users/Heuluck/followers',
                following_url: 'https://api.github.com/users/Heuluck/following{/other_user}',
                gists_url: 'https://api.github.com/users/Heuluck/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/Heuluck/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/Heuluck/subscriptions',
                organizations_url: 'https://api.github.com/users/Heuluck/orgs',
                repos_url: 'https://api.github.com/users/Heuluck/repos',
                events_url: 'https://api.github.com/users/Heuluck/events{/privacy}',
                received_events_url: 'https://api.github.com/users/Heuluck/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [],
            state: 'closed',
            locked: true,
            assignee: null,
            assignees: [],
            milestone: null,
            comments: 0,
            created_at: '2024-06-04T17:06:11Z',
            updated_at: '2024-06-04T17:07:22Z',
            closed_at: '2024-06-04T17:07:22Z',
            author_association: 'OWNER',
            active_lock_reason: null,
            draft: false,
            pull_request: {
                url: 'https://api.github.com/repos/Heuluck/luck-blog/pulls/1',
                html_url: 'https://github.com/Heuluck/luck-blog/pull/1',
                diff_url: 'https://github.com/Heuluck/luck-blog/pull/1.diff',
                patch_url: 'https://github.com/Heuluck/luck-blog/pull/1.patch',
                merged_at: '2024-06-04T17:07:22Z',
            },
            body: null,
            reactions: {
                url: 'https://api.github.com/repos/Heuluck/luck-blog/issues/1/reactions',
                total_count: 0,
                '+1': 0,
                '-1': 0,
                laugh: 0,
                hooray: 0,
                confused: 0,
                heart: 0,
                rocket: 0,
                eyes: 0,
            },
            timeline_url: 'https://api.github.com/repos/Heuluck/luck-blog/issues/1/timeline',
            performed_via_github_app: null,
            state_reason: null,
            score: 1,
        },
        {
            url: 'https://api.github.com/repos/Heuluck/Create-infoboxes-in-Mediawiki-Remake/issues/3',
            repository_url: 'https://api.github.com/repos/Heuluck/Create-infoboxes-in-Mediawiki-Remake',
            labels_url:
                'https://api.github.com/repos/Heuluck/Create-infoboxes-in-Mediawiki-Remake/issues/3/labels{/name}',
            comments_url: 'https://api.github.com/repos/Heuluck/Create-infoboxes-in-Mediawiki-Remake/issues/3/comments',
            events_url: 'https://api.github.com/repos/Heuluck/Create-infoboxes-in-Mediawiki-Remake/issues/3/events',
            html_url: 'https://github.com/Heuluck/Create-infoboxes-in-Mediawiki-Remake/pull/3',
            id: 2060726490,
            node_id: 'PR_kwDOK-Nxbc5i98XI',
            number: 3,
            title: 'feat:中英文切换和一键复制',
            user: {
                login: 'Heuluck',
                id: 89375068,
                node_id: 'MDQ6VXNlcjg5Mzc1MDY4',
                avatar_url: 'https://avatars.githubusercontent.com/u/89375068?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/Heuluck',
                html_url: 'https://github.com/Heuluck',
                followers_url: 'https://api.github.com/users/Heuluck/followers',
                following_url: 'https://api.github.com/users/Heuluck/following{/other_user}',
                gists_url: 'https://api.github.com/users/Heuluck/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/Heuluck/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/Heuluck/subscriptions',
                organizations_url: 'https://api.github.com/users/Heuluck/orgs',
                repos_url: 'https://api.github.com/users/Heuluck/repos',
                events_url: 'https://api.github.com/users/Heuluck/events{/privacy}',
                received_events_url: 'https://api.github.com/users/Heuluck/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [],
            state: 'closed',
            locked: false,
            assignee: null,
            assignees: [],
            milestone: null,
            comments: 0,
            created_at: '2023-12-30T11:58:07Z',
            updated_at: '2023-12-30T11:58:58Z',
            closed_at: '2023-12-30T11:58:58Z',
            author_association: 'OWNER',
            active_lock_reason: null,
            draft: false,
            pull_request: {
                url: 'https://api.github.com/repos/Heuluck/Create-infoboxes-in-Mediawiki-Remake/pulls/3',
                html_url: 'https://github.com/Heuluck/Create-infoboxes-in-Mediawiki-Remake/pull/3',
                diff_url: 'https://github.com/Heuluck/Create-infoboxes-in-Mediawiki-Remake/pull/3.diff',
                patch_url: 'https://github.com/Heuluck/Create-infoboxes-in-Mediawiki-Remake/pull/3.patch',
                merged_at: '2023-12-30T11:58:58Z',
            },
            body: null,
            reactions: {
                url: 'https://api.github.com/repos/Heuluck/Create-infoboxes-in-Mediawiki-Remake/issues/3/reactions',
                total_count: 0,
                '+1': 0,
                '-1': 0,
                laugh: 0,
                hooray: 0,
                confused: 0,
                heart: 0,
                rocket: 0,
                eyes: 0,
            },
            timeline_url: 'https://api.github.com/repos/Heuluck/Create-infoboxes-in-Mediawiki-Remake/issues/3/timeline',
            performed_via_github_app: null,
            state_reason: null,
            score: 1,
        },
        {
            url: 'https://api.github.com/repos/Heuluck/Create-infoboxes-in-Mediawiki-Remake/issues/2',
            repository_url: 'https://api.github.com/repos/Heuluck/Create-infoboxes-in-Mediawiki-Remake',
            labels_url:
                'https://api.github.com/repos/Heuluck/Create-infoboxes-in-Mediawiki-Remake/issues/2/labels{/name}',
            comments_url: 'https://api.github.com/repos/Heuluck/Create-infoboxes-in-Mediawiki-Remake/issues/2/comments',
            events_url: 'https://api.github.com/repos/Heuluck/Create-infoboxes-in-Mediawiki-Remake/issues/2/events',
            html_url: 'https://github.com/Heuluck/Create-infoboxes-in-Mediawiki-Remake/pull/2',
            id: 2060286365,
            node_id: 'PR_kwDOK-Nxbc5i8oPm',
            number: 2,
            title: 'feat:全新的修改已有项功能',
            user: {
                login: 'Heuluck',
                id: 89375068,
                node_id: 'MDQ6VXNlcjg5Mzc1MDY4',
                avatar_url: 'https://avatars.githubusercontent.com/u/89375068?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/Heuluck',
                html_url: 'https://github.com/Heuluck',
                followers_url: 'https://api.github.com/users/Heuluck/followers',
                following_url: 'https://api.github.com/users/Heuluck/following{/other_user}',
                gists_url: 'https://api.github.com/users/Heuluck/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/Heuluck/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/Heuluck/subscriptions',
                organizations_url: 'https://api.github.com/users/Heuluck/orgs',
                repos_url: 'https://api.github.com/users/Heuluck/repos',
                events_url: 'https://api.github.com/users/Heuluck/events{/privacy}',
                received_events_url: 'https://api.github.com/users/Heuluck/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [],
            state: 'closed',
            locked: false,
            assignee: null,
            assignees: [],
            milestone: null,
            comments: 0,
            created_at: '2023-12-29T17:42:33Z',
            updated_at: '2023-12-29T17:43:35Z',
            closed_at: '2023-12-29T17:43:35Z',
            author_association: 'OWNER',
            active_lock_reason: null,
            draft: false,
            pull_request: {
                url: 'https://api.github.com/repos/Heuluck/Create-infoboxes-in-Mediawiki-Remake/pulls/2',
                html_url: 'https://github.com/Heuluck/Create-infoboxes-in-Mediawiki-Remake/pull/2',
                diff_url: 'https://github.com/Heuluck/Create-infoboxes-in-Mediawiki-Remake/pull/2.diff',
                patch_url: 'https://github.com/Heuluck/Create-infoboxes-in-Mediawiki-Remake/pull/2.patch',
                merged_at: '2023-12-29T17:43:35Z',
            },
            body: null,
            reactions: {
                url: 'https://api.github.com/repos/Heuluck/Create-infoboxes-in-Mediawiki-Remake/issues/2/reactions',
                total_count: 0,
                '+1': 0,
                '-1': 0,
                laugh: 0,
                hooray: 0,
                confused: 0,
                heart: 0,
                rocket: 0,
                eyes: 0,
            },
            timeline_url: 'https://api.github.com/repos/Heuluck/Create-infoboxes-in-Mediawiki-Remake/issues/2/timeline',
            performed_via_github_app: null,
            state_reason: null,
            score: 1,
        },
        {
            url: 'https://api.github.com/repos/Heuluck/Create-infoboxes-in-Mediawiki-Remake/issues/1',
            repository_url: 'https://api.github.com/repos/Heuluck/Create-infoboxes-in-Mediawiki-Remake',
            labels_url:
                'https://api.github.com/repos/Heuluck/Create-infoboxes-in-Mediawiki-Remake/issues/1/labels{/name}',
            comments_url: 'https://api.github.com/repos/Heuluck/Create-infoboxes-in-Mediawiki-Remake/issues/1/comments',
            events_url: 'https://api.github.com/repos/Heuluck/Create-infoboxes-in-Mediawiki-Remake/issues/1/events',
            html_url: 'https://github.com/Heuluck/Create-infoboxes-in-Mediawiki-Remake/pull/1',
            id: 2059080346,
            node_id: 'PR_kwDOK-Nxbc5i6zFu',
            number: 1,
            title: 'feat: 完成列表以及删除功能',
            user: {
                login: 'Heuluck',
                id: 89375068,
                node_id: 'MDQ6VXNlcjg5Mzc1MDY4',
                avatar_url: 'https://avatars.githubusercontent.com/u/89375068?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/Heuluck',
                html_url: 'https://github.com/Heuluck',
                followers_url: 'https://api.github.com/users/Heuluck/followers',
                following_url: 'https://api.github.com/users/Heuluck/following{/other_user}',
                gists_url: 'https://api.github.com/users/Heuluck/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/Heuluck/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/Heuluck/subscriptions',
                organizations_url: 'https://api.github.com/users/Heuluck/orgs',
                repos_url: 'https://api.github.com/users/Heuluck/repos',
                events_url: 'https://api.github.com/users/Heuluck/events{/privacy}',
                received_events_url: 'https://api.github.com/users/Heuluck/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [],
            state: 'closed',
            locked: false,
            assignee: null,
            assignees: [],
            milestone: null,
            comments: 0,
            created_at: '2023-12-29T05:27:18Z',
            updated_at: '2023-12-29T07:50:17Z',
            closed_at: '2023-12-29T05:27:51Z',
            author_association: 'OWNER',
            active_lock_reason: null,
            draft: false,
            pull_request: {
                url: 'https://api.github.com/repos/Heuluck/Create-infoboxes-in-Mediawiki-Remake/pulls/1',
                html_url: 'https://github.com/Heuluck/Create-infoboxes-in-Mediawiki-Remake/pull/1',
                diff_url: 'https://github.com/Heuluck/Create-infoboxes-in-Mediawiki-Remake/pull/1.diff',
                patch_url: 'https://github.com/Heuluck/Create-infoboxes-in-Mediawiki-Remake/pull/1.patch',
                merged_at: '2023-12-29T05:27:51Z',
            },
            body: '一般来说没什么bug',
            reactions: {
                url: 'https://api.github.com/repos/Heuluck/Create-infoboxes-in-Mediawiki-Remake/issues/1/reactions',
                total_count: 0,
                '+1': 0,
                '-1': 0,
                laugh: 0,
                hooray: 0,
                confused: 0,
                heart: 0,
                rocket: 0,
                eyes: 0,
            },
            timeline_url: 'https://api.github.com/repos/Heuluck/Create-infoboxes-in-Mediawiki-Remake/issues/1/timeline',
            performed_via_github_app: null,
            state_reason: null,
            score: 1,
        },
    ],
};

export const userIssuesEX = {
    total_count: 466,
    incomplete_results: false,
    items: [
        {
            url: 'https://api.github.com/repos/rolldown/rolldown/issues/1548',
            repository_url: 'https://api.github.com/repos/rolldown/rolldown',
            labels_url: 'https://api.github.com/repos/rolldown/rolldown/issues/1548/labels{/name}',
            comments_url: 'https://api.github.com/repos/rolldown/rolldown/issues/1548/comments',
            events_url: 'https://api.github.com/repos/rolldown/rolldown/issues/1548/events',
            html_url: 'https://github.com/rolldown/rolldown/issues/1548',
            id: 2395687981,
            node_id: 'I_kwDOKVE1Gs6Oy0wt',
            number: 1548,
            title: 'Same named export imported by different files result in unnecessary as aliases',
            user: {
                login: 'yyx990803',
                id: 499550,
                node_id: 'MDQ6VXNlcjQ5OTU1MA==',
                avatar_url: 'https://avatars.githubusercontent.com/u/499550?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/yyx990803',
                html_url: 'https://github.com/yyx990803',
                followers_url: 'https://api.github.com/users/yyx990803/followers',
                following_url: 'https://api.github.com/users/yyx990803/following{/other_user}',
                gists_url: 'https://api.github.com/users/yyx990803/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/yyx990803/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/yyx990803/subscriptions',
                organizations_url: 'https://api.github.com/users/yyx990803/orgs',
                repos_url: 'https://api.github.com/users/yyx990803/repos',
                events_url: 'https://api.github.com/users/yyx990803/events{/privacy}',
                received_events_url: 'https://api.github.com/users/yyx990803/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [
                {
                    id: 7408027476,
                    node_id: 'LA_kwDOKVE1Gs8AAAABuY2HVA',
                    url: 'https://api.github.com/repos/rolldown/rolldown/labels/stale',
                    name: 'stale',
                    color: 'EEEEEE',
                    default: false,
                    description: '',
                },
            ],
            state: 'open',
            locked: false,
            assignee: {
                login: 'hyf0',
                id: 49502170,
                node_id: 'MDQ6VXNlcjQ5NTAyMTcw',
                avatar_url: 'https://avatars.githubusercontent.com/u/49502170?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/hyf0',
                html_url: 'https://github.com/hyf0',
                followers_url: 'https://api.github.com/users/hyf0/followers',
                following_url: 'https://api.github.com/users/hyf0/following{/other_user}',
                gists_url: 'https://api.github.com/users/hyf0/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/hyf0/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/hyf0/subscriptions',
                organizations_url: 'https://api.github.com/users/hyf0/orgs',
                repos_url: 'https://api.github.com/users/hyf0/repos',
                events_url: 'https://api.github.com/users/hyf0/events{/privacy}',
                received_events_url: 'https://api.github.com/users/hyf0/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            assignees: [
                {
                    login: 'hyf0',
                    id: 49502170,
                    node_id: 'MDQ6VXNlcjQ5NTAyMTcw',
                    avatar_url: 'https://avatars.githubusercontent.com/u/49502170?v=4',
                    gravatar_id: '',
                    url: 'https://api.github.com/users/hyf0',
                    html_url: 'https://github.com/hyf0',
                    followers_url: 'https://api.github.com/users/hyf0/followers',
                    following_url: 'https://api.github.com/users/hyf0/following{/other_user}',
                    gists_url: 'https://api.github.com/users/hyf0/gists{/gist_id}',
                    starred_url: 'https://api.github.com/users/hyf0/starred{/owner}{/repo}',
                    subscriptions_url: 'https://api.github.com/users/hyf0/subscriptions',
                    organizations_url: 'https://api.github.com/users/hyf0/orgs',
                    repos_url: 'https://api.github.com/users/hyf0/repos',
                    events_url: 'https://api.github.com/users/hyf0/events{/privacy}',
                    received_events_url: 'https://api.github.com/users/hyf0/received_events',
                    type: 'User',
                    user_view_type: 'public',
                    site_admin: false,
                },
            ],
            milestone: null,
            comments: 1,
            created_at: '2024-07-08T13:43:10Z',
            updated_at: '2024-10-07T02:01:33Z',
            closed_at: null,
            author_association: 'MEMBER',
            active_lock_reason: null,
            body: '### Reproduction link or steps\n\nTo reproduce, run `pnpm build vue -r` in https://github.com/vuejs/core/tree/rolldown (make sure to checkout `rolldown` branch)\r\n\r\nThen check `packages/vue/dist/vue.esm-browser.js` line 2\n\n### What is expected?\n\n```js\r\nimport { parse, parseExpression } from "@babel/parser";\r\n```\n\n### What is actually happening?\n\nThe same `parseExpression` import from `@babel/parser` is aliased two times:\r\n\r\n```js\r\nimport { parse, parseExpression, parseExpression as parseExpression$1, parseExpression as parseExpression$2 } from "@babel/parser";\r\n```\n\n### System Info\n\n```Shell\nNA\n```\n\n\n### Any additional comments?\n\n_No response_',
            reactions: {
                url: 'https://api.github.com/repos/rolldown/rolldown/issues/1548/reactions',
                total_count: 0,
                '+1': 0,
                '-1': 0,
                laugh: 0,
                hooray: 0,
                confused: 0,
                heart: 0,
                rocket: 0,
                eyes: 0,
            },
            timeline_url: 'https://api.github.com/repos/rolldown/rolldown/issues/1548/timeline',
            performed_via_github_app: null,
            state_reason: null,
            score: 1.0,
        },
        {
            url: 'https://api.github.com/repos/rolldown/rolldown/issues/1956',
            repository_url: 'https://api.github.com/repos/rolldown/rolldown',
            labels_url: 'https://api.github.com/repos/rolldown/rolldown/issues/1956/labels{/name}',
            comments_url: 'https://api.github.com/repos/rolldown/rolldown/issues/1956/comments',
            events_url: 'https://api.github.com/repos/rolldown/rolldown/issues/1956/events',
            html_url: 'https://github.com/rolldown/rolldown/issues/1956',
            id: 2460263305,
            node_id: 'I_kwDOKVE1Gs6SpKOJ',
            number: 1956,
            title: '[Feature Request]: expose error information on JS API error object',
            user: {
                login: 'yyx990803',
                id: 499550,
                node_id: 'MDQ6VXNlcjQ5OTU1MA==',
                avatar_url: 'https://avatars.githubusercontent.com/u/499550?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/yyx990803',
                html_url: 'https://github.com/yyx990803',
                followers_url: 'https://api.github.com/users/yyx990803/followers',
                following_url: 'https://api.github.com/users/yyx990803/following{/other_user}',
                gists_url: 'https://api.github.com/users/yyx990803/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/yyx990803/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/yyx990803/subscriptions',
                organizations_url: 'https://api.github.com/users/yyx990803/orgs',
                repos_url: 'https://api.github.com/users/yyx990803/repos',
                events_url: 'https://api.github.com/users/yyx990803/events{/privacy}',
                received_events_url: 'https://api.github.com/users/yyx990803/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [
                {
                    id: 6780322250,
                    node_id: 'LA_kwDOKVE1Gs8AAAABlCOByg',
                    url: 'https://api.github.com/repos/rolldown/rolldown/labels/needs-triage',
                    name: 'needs-triage',
                    color: 'ededed',
                    default: false,
                    description: null,
                },
            ],
            state: 'open',
            locked: false,
            assignee: {
                login: 'hyf0',
                id: 49502170,
                node_id: 'MDQ6VXNlcjQ5NTAyMTcw',
                avatar_url: 'https://avatars.githubusercontent.com/u/49502170?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/hyf0',
                html_url: 'https://github.com/hyf0',
                followers_url: 'https://api.github.com/users/hyf0/followers',
                following_url: 'https://api.github.com/users/hyf0/following{/other_user}',
                gists_url: 'https://api.github.com/users/hyf0/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/hyf0/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/hyf0/subscriptions',
                organizations_url: 'https://api.github.com/users/hyf0/orgs',
                repos_url: 'https://api.github.com/users/hyf0/repos',
                events_url: 'https://api.github.com/users/hyf0/events{/privacy}',
                received_events_url: 'https://api.github.com/users/hyf0/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            assignees: [
                {
                    login: 'hyf0',
                    id: 49502170,
                    node_id: 'MDQ6VXNlcjQ5NTAyMTcw',
                    avatar_url: 'https://avatars.githubusercontent.com/u/49502170?v=4',
                    gravatar_id: '',
                    url: 'https://api.github.com/users/hyf0',
                    html_url: 'https://github.com/hyf0',
                    followers_url: 'https://api.github.com/users/hyf0/followers',
                    following_url: 'https://api.github.com/users/hyf0/following{/other_user}',
                    gists_url: 'https://api.github.com/users/hyf0/gists{/gist_id}',
                    starred_url: 'https://api.github.com/users/hyf0/starred{/owner}{/repo}',
                    subscriptions_url: 'https://api.github.com/users/hyf0/subscriptions',
                    organizations_url: 'https://api.github.com/users/hyf0/orgs',
                    repos_url: 'https://api.github.com/users/hyf0/repos',
                    events_url: 'https://api.github.com/users/hyf0/events{/privacy}',
                    received_events_url: 'https://api.github.com/users/hyf0/received_events',
                    type: 'User',
                    user_view_type: 'public',
                    site_admin: false,
                },
            ],
            milestone: null,
            comments: 0,
            created_at: '2024-08-12T07:40:55Z',
            updated_at: '2024-09-26T07:48:27Z',
            closed_at: null,
            author_association: 'MEMBER',
            active_lock_reason: null,
            body: "### What problem does this feature solve?\n\nWhen there is an error from API-based usage, e.g. a missing export:\r\n\r\n```js\r\ntry {\r\n  const bundle = await rolldown({\r\n    input: '...'\r\n  })\r\n  const generated = await bundle.generate({ format: 'cjs' })\r\n} catch (e) {\r\n  console.log(e) // e doesn't expose anything useful\r\n}\r\n```\r\n\r\nThe error message is printed to the console, but the caught error object doesn't contain the same information. `e.message` is `\"Build failed\"` and `e.code` is `\"GenericFailure\"` - which are not really helpful.\n\n### What does the proposed API look like?\n\n`e.message` and `e.code` should contain more specific information.",
            reactions: {
                url: 'https://api.github.com/repos/rolldown/rolldown/issues/1956/reactions',
                total_count: 0,
                '+1': 0,
                '-1': 0,
                laugh: 0,
                hooray: 0,
                confused: 0,
                heart: 0,
                rocket: 0,
                eyes: 0,
            },
            timeline_url: 'https://api.github.com/repos/rolldown/rolldown/issues/1956/timeline',
            performed_via_github_app: null,
            state_reason: null,
            score: 1.0,
        },
        {
            url: 'https://api.github.com/repos/farm-fe/performance-compare/issues/14',
            repository_url: 'https://api.github.com/repos/farm-fe/performance-compare',
            labels_url: 'https://api.github.com/repos/farm-fe/performance-compare/issues/14/labels{/name}',
            comments_url: 'https://api.github.com/repos/farm-fe/performance-compare/issues/14/comments',
            events_url: 'https://api.github.com/repos/farm-fe/performance-compare/issues/14/events',
            html_url: 'https://github.com/farm-fe/performance-compare/issues/14',
            id: 2382718200,
            node_id: 'I_kwDOJFJcFc6OBWT4',
            number: 14,
            title: 'Update README and Farm docs with latest data',
            user: {
                login: 'yyx990803',
                id: 499550,
                node_id: 'MDQ6VXNlcjQ5OTU1MA==',
                avatar_url: 'https://avatars.githubusercontent.com/u/499550?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/yyx990803',
                html_url: 'https://github.com/yyx990803',
                followers_url: 'https://api.github.com/users/yyx990803/followers',
                following_url: 'https://api.github.com/users/yyx990803/following{/other_user}',
                gists_url: 'https://api.github.com/users/yyx990803/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/yyx990803/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/yyx990803/subscriptions',
                organizations_url: 'https://api.github.com/users/yyx990803/orgs',
                repos_url: 'https://api.github.com/users/yyx990803/repos',
                events_url: 'https://api.github.com/users/yyx990803/events{/privacy}',
                received_events_url: 'https://api.github.com/users/yyx990803/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [],
            state: 'closed',
            locked: false,
            assignee: null,
            assignees: [],
            milestone: null,
            comments: 4,
            created_at: '2024-07-01T03:27:44Z',
            updated_at: '2024-09-25T08:31:20Z',
            closed_at: '2024-09-25T08:30:49Z',
            author_association: 'CONTRIBUTOR',
            active_lock_reason: null,
            body: "#11 was merged 5 days ago but the README of this repo and Farm's official website https://www.farmfe.org/ still displays inaccurate data about Vite's performance. Please update the relevant places where the data from this benchmark is displayed to avoid misleading users.\r\n\r\nI didn't include the updates in #11 because I think it's best to use data from the same machine that generated the previous data.",
            reactions: {
                url: 'https://api.github.com/repos/farm-fe/performance-compare/issues/14/reactions',
                total_count: 0,
                '+1': 0,
                '-1': 0,
                laugh: 0,
                hooray: 0,
                confused: 0,
                heart: 0,
                rocket: 0,
                eyes: 0,
            },
            timeline_url: 'https://api.github.com/repos/farm-fe/performance-compare/issues/14/timeline',
            performed_via_github_app: null,
            state_reason: 'completed',
            score: 1.0,
        },
        {
            url: 'https://api.github.com/repos/rolldown/rolldown/issues/2306',
            repository_url: 'https://api.github.com/repos/rolldown/rolldown',
            labels_url: 'https://api.github.com/repos/rolldown/rolldown/issues/2306/labels{/name}',
            comments_url: 'https://api.github.com/repos/rolldown/rolldown/issues/2306/comments',
            events_url: 'https://api.github.com/repos/rolldown/rolldown/issues/2306/events',
            html_url: 'https://github.com/rolldown/rolldown/issues/2306',
            id: 2544767647,
            node_id: 'I_kwDOKVE1Gs6XrhKf',
            number: 2306,
            title: '[Bug]: define option regression - should have higher priority than imported binding',
            user: {
                login: 'yyx990803',
                id: 499550,
                node_id: 'MDQ6VXNlcjQ5OTU1MA==',
                avatar_url: 'https://avatars.githubusercontent.com/u/499550?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/yyx990803',
                html_url: 'https://github.com/yyx990803',
                followers_url: 'https://api.github.com/users/yyx990803/followers',
                following_url: 'https://api.github.com/users/yyx990803/following{/other_user}',
                gists_url: 'https://api.github.com/users/yyx990803/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/yyx990803/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/yyx990803/subscriptions',
                organizations_url: 'https://api.github.com/users/yyx990803/orgs',
                repos_url: 'https://api.github.com/users/yyx990803/repos',
                events_url: 'https://api.github.com/users/yyx990803/events{/privacy}',
                received_events_url: 'https://api.github.com/users/yyx990803/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [
                {
                    id: 5977290511,
                    node_id: 'LA_kwDOKVE1Gs8AAAABZEY3Dw',
                    url: 'https://api.github.com/repos/rolldown/rolldown/labels/bug',
                    name: 'bug',
                    color: 'B60205',
                    default: true,
                    description: "Something isn't working",
                },
                {
                    id: 6780322250,
                    node_id: 'LA_kwDOKVE1Gs8AAAABlCOByg',
                    url: 'https://api.github.com/repos/rolldown/rolldown/labels/needs-triage',
                    name: 'needs-triage',
                    color: 'ededed',
                    default: false,
                    description: null,
                },
            ],
            state: 'closed',
            locked: false,
            assignee: null,
            assignees: [],
            milestone: null,
            comments: 0,
            created_at: '2024-09-24T08:49:40Z',
            updated_at: '2024-09-24T09:19:35Z',
            closed_at: '2024-09-24T09:19:35Z',
            author_association: 'MEMBER',
            active_lock_reason: null,
            body: "### Reproduction link or steps\n\nmain.js\r\n```js\r\nimport { X } from './dep.js'\r\n\r\nconsole.log(X)\r\n```\r\n\r\ndep.js\r\n```js\r\nexport const X = 1\r\n```\r\n\r\nrolldown.config.mjs\r\n```js\r\nexport default {\r\n  input: './main.js',\r\n  define: {\r\n    X: '2'\r\n  }\r\n}\r\n```\n\n### What is expected?\n\n```js\r\nconsole.log(2);\r\n```\n\n### What is actually happening?\n\n```js\r\nconst X = 1;\r\n\r\nconsole.log(X);\r\n```\n\n### System Info\n\n```Shell\nThis is a regression after updating to `0.13.2-snapshot-351d2c7-20240924003425`\n```\n\n\n### Any additional comments?\n\n_No response_",
            reactions: {
                url: 'https://api.github.com/repos/rolldown/rolldown/issues/2306/reactions',
                total_count: 0,
                '+1': 0,
                '-1': 0,
                laugh: 0,
                hooray: 0,
                confused: 0,
                heart: 0,
                rocket: 0,
                eyes: 0,
            },
            timeline_url: 'https://api.github.com/repos/rolldown/rolldown/issues/2306/timeline',
            performed_via_github_app: null,
            state_reason: 'completed',
            score: 1.0,
        },
        {
            url: 'https://api.github.com/repos/oxc-project/oxc/issues/5687',
            repository_url: 'https://api.github.com/repos/oxc-project/oxc',
            labels_url: 'https://api.github.com/repos/oxc-project/oxc/issues/5687/labels{/name}',
            comments_url: 'https://api.github.com/repos/oxc-project/oxc/issues/5687/comments',
            events_url: 'https://api.github.com/repos/oxc-project/oxc/issues/5687/events',
            html_url: 'https://github.com/oxc-project/oxc/issues/5687',
            id: 2518221262,
            node_id: 'I_kwDOI7qa7s6WGQHO',
            number: 5687,
            title: 'isolatedDeclarations: should preserve jsdoc comments',
            user: {
                login: 'yyx990803',
                id: 499550,
                node_id: 'MDQ6VXNlcjQ5OTU1MA==',
                avatar_url: 'https://avatars.githubusercontent.com/u/499550?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/yyx990803',
                html_url: 'https://github.com/yyx990803',
                followers_url: 'https://api.github.com/users/yyx990803/followers',
                following_url: 'https://api.github.com/users/yyx990803/following{/other_user}',
                gists_url: 'https://api.github.com/users/yyx990803/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/yyx990803/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/yyx990803/subscriptions',
                organizations_url: 'https://api.github.com/users/yyx990803/orgs',
                repos_url: 'https://api.github.com/users/yyx990803/repos',
                events_url: 'https://api.github.com/users/yyx990803/events{/privacy}',
                received_events_url: 'https://api.github.com/users/yyx990803/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [
                {
                    id: 5133997498,
                    node_id: 'LA_kwDOI7qa7s8AAAABMgKVug',
                    url: 'https://api.github.com/repos/oxc-project/oxc/labels/C-bug',
                    name: 'C-bug',
                    color: 'd73a4a',
                    default: false,
                    description: 'Category - Bug',
                },
            ],
            state: 'closed',
            locked: false,
            assignee: {
                login: 'Boshen',
                id: 1430279,
                node_id: 'MDQ6VXNlcjE0MzAyNzk=',
                avatar_url: 'https://avatars.githubusercontent.com/u/1430279?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/Boshen',
                html_url: 'https://github.com/Boshen',
                followers_url: 'https://api.github.com/users/Boshen/followers',
                following_url: 'https://api.github.com/users/Boshen/following{/other_user}',
                gists_url: 'https://api.github.com/users/Boshen/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/Boshen/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/Boshen/subscriptions',
                organizations_url: 'https://api.github.com/users/Boshen/orgs',
                repos_url: 'https://api.github.com/users/Boshen/repos',
                events_url: 'https://api.github.com/users/Boshen/events{/privacy}',
                received_events_url: 'https://api.github.com/users/Boshen/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            assignees: [
                {
                    login: 'Boshen',
                    id: 1430279,
                    node_id: 'MDQ6VXNlcjE0MzAyNzk=',
                    avatar_url: 'https://avatars.githubusercontent.com/u/1430279?v=4',
                    gravatar_id: '',
                    url: 'https://api.github.com/users/Boshen',
                    html_url: 'https://github.com/Boshen',
                    followers_url: 'https://api.github.com/users/Boshen/followers',
                    following_url: 'https://api.github.com/users/Boshen/following{/other_user}',
                    gists_url: 'https://api.github.com/users/Boshen/gists{/gist_id}',
                    starred_url: 'https://api.github.com/users/Boshen/starred{/owner}{/repo}',
                    subscriptions_url: 'https://api.github.com/users/Boshen/subscriptions',
                    organizations_url: 'https://api.github.com/users/Boshen/orgs',
                    repos_url: 'https://api.github.com/users/Boshen/repos',
                    events_url: 'https://api.github.com/users/Boshen/events{/privacy}',
                    received_events_url: 'https://api.github.com/users/Boshen/received_events',
                    type: 'User',
                    user_view_type: 'public',
                    site_admin: false,
                },
            ],
            milestone: null,
            comments: 2,
            created_at: '2024-09-11T00:43:36Z',
            updated_at: '2024-09-23T11:09:36Z',
            closed_at: '2024-09-13T03:14:59Z',
            author_association: 'NONE',
            active_lock_reason: null,
            body: 'Currently, all comments are stripped during isolatedDeclaration transform. JSDoc comments are necessary for in-IDE documentation on hover, so JSDoc comments attached to types should be preserved in dts files.',
            reactions: {
                url: 'https://api.github.com/repos/oxc-project/oxc/issues/5687/reactions',
                total_count: 2,
                '+1': 0,
                '-1': 0,
                laugh: 0,
                hooray: 0,
                confused: 0,
                heart: 2,
                rocket: 0,
                eyes: 0,
            },
            timeline_url: 'https://api.github.com/repos/oxc-project/oxc/issues/5687/timeline',
            performed_via_github_app: null,
            state_reason: 'completed',
            score: 1.0,
        },
        {
            url: 'https://api.github.com/repos/webpack-contrib/thread-loader/issues/123',
            repository_url: 'https://api.github.com/repos/webpack-contrib/thread-loader',
            labels_url: 'https://api.github.com/repos/webpack-contrib/thread-loader/issues/123/labels{/name}',
            comments_url: 'https://api.github.com/repos/webpack-contrib/thread-loader/issues/123/comments',
            events_url: 'https://api.github.com/repos/webpack-contrib/thread-loader/issues/123/events',
            html_url: 'https://github.com/webpack-contrib/thread-loader/issues/123',
            id: 946580051,
            node_id: 'MDU6SXNzdWU5NDY1ODAwNTE=',
            number: 123,
            title: '`LoaderContext.mode` is missing when run by `thread-loader`',
            user: {
                login: 'yyx990803',
                id: 499550,
                node_id: 'MDQ6VXNlcjQ5OTU1MA==',
                avatar_url: 'https://avatars.githubusercontent.com/u/499550?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/yyx990803',
                html_url: 'https://github.com/yyx990803',
                followers_url: 'https://api.github.com/users/yyx990803/followers',
                following_url: 'https://api.github.com/users/yyx990803/following{/other_user}',
                gists_url: 'https://api.github.com/users/yyx990803/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/yyx990803/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/yyx990803/subscriptions',
                organizations_url: 'https://api.github.com/users/yyx990803/orgs',
                repos_url: 'https://api.github.com/users/yyx990803/repos',
                events_url: 'https://api.github.com/users/yyx990803/events{/privacy}',
                received_events_url: 'https://api.github.com/users/yyx990803/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [],
            state: 'closed',
            locked: false,
            assignee: null,
            assignees: [],
            milestone: null,
            comments: 1,
            created_at: '2021-07-16T20:33:05Z',
            updated_at: '2024-09-17T15:19:21Z',
            closed_at: '2024-09-17T15:19:21Z',
            author_association: 'NONE',
            active_lock_reason: null,
            body: "<!--\r\n  Issues are so 🔥\r\n\r\n  If you remove or skip this template, you'll make the 🐼 sad and the mighty god\r\n  of Github will appear and pile-drive the close button from a great height\r\n  while making animal noises.\r\n\r\n  👉🏽 Need support, advice, or help? Don't open an issue!\r\n  Head to StackOverflow or https://gitter.im/webpack/webpack.\r\n-->\r\n\r\n- Operating System: macOS 11.4\r\n- Node Version: v16.3.0\r\n- NPM Version: 7.15.1\r\n- webpack Version: 4.46.0 / 5.45.1\r\n- thread-loader Version: 3.0.4\r\n\r\n### Expected Behavior\r\n\r\n`this.mode` in a loader is consistent when running with or without `thread-loader`\r\n\r\n### Actual Behavior\r\n\r\n`this.mode` is always `undefined` when running inside `thread-loader`\r\n\r\n### How Do We Reproduce?\r\n\r\nhttps://github.com/yyx990803/thread-loader-bug",
            reactions: {
                url: 'https://api.github.com/repos/webpack-contrib/thread-loader/issues/123/reactions',
                total_count: 0,
                '+1': 0,
                '-1': 0,
                laugh: 0,
                hooray: 0,
                confused: 0,
                heart: 0,
                rocket: 0,
                eyes: 0,
            },
            timeline_url: 'https://api.github.com/repos/webpack-contrib/thread-loader/issues/123/timeline',
            performed_via_github_app: null,
            state_reason: 'completed',
            score: 1.0,
        },
        {
            url: 'https://api.github.com/repos/rolldown/rolldown/issues/1264',
            repository_url: 'https://api.github.com/repos/rolldown/rolldown',
            labels_url: 'https://api.github.com/repos/rolldown/rolldown/issues/1264/labels{/name}',
            comments_url: 'https://api.github.com/repos/rolldown/rolldown/issues/1264/comments',
            events_url: 'https://api.github.com/repos/rolldown/rolldown/issues/1264/events',
            html_url: 'https://github.com/rolldown/rolldown/issues/1264',
            id: 2322271611,
            node_id: 'I_kwDOKVE1Gs6Kaw17',
            number: 1264,
            title: 'Aggregated Feedback when bundling Vue with Rolldown',
            user: {
                login: 'yyx990803',
                id: 499550,
                node_id: 'MDQ6VXNlcjQ5OTU1MA==',
                avatar_url: 'https://avatars.githubusercontent.com/u/499550?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/yyx990803',
                html_url: 'https://github.com/yyx990803',
                followers_url: 'https://api.github.com/users/yyx990803/followers',
                following_url: 'https://api.github.com/users/yyx990803/following{/other_user}',
                gists_url: 'https://api.github.com/users/yyx990803/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/yyx990803/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/yyx990803/subscriptions',
                organizations_url: 'https://api.github.com/users/yyx990803/orgs',
                repos_url: 'https://api.github.com/users/yyx990803/repos',
                events_url: 'https://api.github.com/users/yyx990803/events{/privacy}',
                received_events_url: 'https://api.github.com/users/yyx990803/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [],
            state: 'closed',
            locked: false,
            assignee: null,
            assignees: [],
            milestone: null,
            comments: 4,
            created_at: '2024-05-29T03:21:59Z',
            updated_at: '2024-09-13T02:03:56Z',
            closed_at: '2024-08-23T03:20:17Z',
            author_association: 'MEMBER',
            active_lock_reason: null,
            body: "I successfully bundled Vue (currently only the main `vue` package) with Rolldown (0.10.2 published on npm): https://github.com/vuejs/core/compare/rolldown\r\n\r\n### Highlights\r\n\r\n- I was able to remove `commonjs`, `node-resolve` and `alias` plugins due to built-in support, and the rest of the plugins just worked!\r\n- Bundled file mostly works as expected, very similar to existing Rollup output\r\n\r\n### Small Issues / Improvements to be made\r\n\r\n- [x] #1274\r\n- [x] #1266\r\n- [x] #1267\r\n- [x] #1268\r\n- [x] #1269\r\n- [ ] #1270\r\n- [x] If `output.banner` is specified, it throws the following error:\r\n   \r\n  ```\r\n  [10:49:23 AM]  ERROR  Rolldown internal error: InvalidArg, Unknown return value. Cannot convert to \r\n  core::option::Option<alloc::string::String>.\r\n  ```\r\n\r\n  The error isn't telling where the problem is so I had to comment off the options one by one to find out.\r\n\r\n- [x] #1271\r\n- [x] #1272\r\n- [x] #1273",
            reactions: {
                url: 'https://api.github.com/repos/rolldown/rolldown/issues/1264/reactions',
                total_count: 0,
                '+1': 0,
                '-1': 0,
                laugh: 0,
                hooray: 0,
                confused: 0,
                heart: 0,
                rocket: 0,
                eyes: 0,
            },
            timeline_url: 'https://api.github.com/repos/rolldown/rolldown/issues/1264/timeline',
            performed_via_github_app: null,
            state_reason: 'completed',
            score: 1.0,
        },
        {
            url: 'https://api.github.com/repos/oxc-project/oxc/issues/5668',
            repository_url: 'https://api.github.com/repos/oxc-project/oxc',
            labels_url: 'https://api.github.com/repos/oxc-project/oxc/issues/5668/labels{/name}',
            comments_url: 'https://api.github.com/repos/oxc-project/oxc/issues/5668/comments',
            events_url: 'https://api.github.com/repos/oxc-project/oxc/issues/5668/events',
            html_url: 'https://github.com/oxc-project/oxc/issues/5668',
            id: 2515396158,
            node_id: 'I_kwDOI7qa7s6V7eY-',
            number: 5668,
            title: 'isolatedDeclarations: error on setters',
            user: {
                login: 'yyx990803',
                id: 499550,
                node_id: 'MDQ6VXNlcjQ5OTU1MA==',
                avatar_url: 'https://avatars.githubusercontent.com/u/499550?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/yyx990803',
                html_url: 'https://github.com/yyx990803',
                followers_url: 'https://api.github.com/users/yyx990803/followers',
                following_url: 'https://api.github.com/users/yyx990803/following{/other_user}',
                gists_url: 'https://api.github.com/users/yyx990803/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/yyx990803/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/yyx990803/subscriptions',
                organizations_url: 'https://api.github.com/users/yyx990803/orgs',
                repos_url: 'https://api.github.com/users/yyx990803/repos',
                events_url: 'https://api.github.com/users/yyx990803/events{/privacy}',
                received_events_url: 'https://api.github.com/users/yyx990803/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [
                {
                    id: 5133997498,
                    node_id: 'LA_kwDOI7qa7s8AAAABMgKVug',
                    url: 'https://api.github.com/repos/oxc-project/oxc/labels/C-bug',
                    name: 'C-bug',
                    color: 'd73a4a',
                    default: false,
                    description: 'Category - Bug',
                },
            ],
            state: 'closed',
            locked: false,
            assignee: {
                login: 'Dunqing',
                id: 29533304,
                node_id: 'MDQ6VXNlcjI5NTMzMzA0',
                avatar_url: 'https://avatars.githubusercontent.com/u/29533304?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/Dunqing',
                html_url: 'https://github.com/Dunqing',
                followers_url: 'https://api.github.com/users/Dunqing/followers',
                following_url: 'https://api.github.com/users/Dunqing/following{/other_user}',
                gists_url: 'https://api.github.com/users/Dunqing/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/Dunqing/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/Dunqing/subscriptions',
                organizations_url: 'https://api.github.com/users/Dunqing/orgs',
                repos_url: 'https://api.github.com/users/Dunqing/repos',
                events_url: 'https://api.github.com/users/Dunqing/events{/privacy}',
                received_events_url: 'https://api.github.com/users/Dunqing/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            assignees: [
                {
                    login: 'Dunqing',
                    id: 29533304,
                    node_id: 'MDQ6VXNlcjI5NTMzMzA0',
                    avatar_url: 'https://avatars.githubusercontent.com/u/29533304?v=4',
                    gravatar_id: '',
                    url: 'https://api.github.com/users/Dunqing',
                    html_url: 'https://github.com/Dunqing',
                    followers_url: 'https://api.github.com/users/Dunqing/followers',
                    following_url: 'https://api.github.com/users/Dunqing/following{/other_user}',
                    gists_url: 'https://api.github.com/users/Dunqing/gists{/gist_id}',
                    starred_url: 'https://api.github.com/users/Dunqing/starred{/owner}{/repo}',
                    subscriptions_url: 'https://api.github.com/users/Dunqing/subscriptions',
                    organizations_url: 'https://api.github.com/users/Dunqing/orgs',
                    repos_url: 'https://api.github.com/users/Dunqing/repos',
                    events_url: 'https://api.github.com/users/Dunqing/events{/privacy}',
                    received_events_url: 'https://api.github.com/users/Dunqing/received_events',
                    type: 'User',
                    user_view_type: 'public',
                    site_admin: false,
                },
            ],
            milestone: null,
            comments: 0,
            created_at: '2024-09-10T04:54:09Z',
            updated_at: '2024-09-11T05:37:43Z',
            closed_at: '2024-09-11T05:37:43Z',
            author_association: 'NONE',
            active_lock_reason: null,
            body: "In:\r\n\r\n```ts\r\nexport interface X {\r\n  set value(_: string)\r\n}\r\n```\r\n\r\nError:\r\n\r\n```\r\n  x TS9013: Expression type can't be inferred with --isolatedDeclarations.\r\n   ,-[src.ts:2:3]\r\n 1 | export interface X {\r\n 2 |   set value(_: string)\r\n   :   ^^^^^^^^^^^^^^^^^^^^\r\n 3 | }\r\n   `----\r\n```\r\n\r\nThe transform can output desired code, but the error exists and seems incorrect.",
            reactions: {
                url: 'https://api.github.com/repos/oxc-project/oxc/issues/5668/reactions',
                total_count: 0,
                '+1': 0,
                '-1': 0,
                laugh: 0,
                hooray: 0,
                confused: 0,
                heart: 0,
                rocket: 0,
                eyes: 0,
            },
            timeline_url: 'https://api.github.com/repos/oxc-project/oxc/issues/5668/timeline',
            performed_via_github_app: null,
            state_reason: 'completed',
            score: 1.0,
        },
        {
            url: 'https://api.github.com/repos/oxc-project/oxc/issues/5667',
            repository_url: 'https://api.github.com/repos/oxc-project/oxc',
            labels_url: 'https://api.github.com/repos/oxc-project/oxc/issues/5667/labels{/name}',
            comments_url: 'https://api.github.com/repos/oxc-project/oxc/issues/5667/comments',
            events_url: 'https://api.github.com/repos/oxc-project/oxc/issues/5667/events',
            html_url: 'https://github.com/oxc-project/oxc/issues/5667',
            id: 2515382716,
            node_id: 'I_kwDOI7qa7s6V7bG8',
            number: 5667,
            title: 'isolatedDeclaration: dropping types used in declare module blocks',
            user: {
                login: 'yyx990803',
                id: 499550,
                node_id: 'MDQ6VXNlcjQ5OTU1MA==',
                avatar_url: 'https://avatars.githubusercontent.com/u/499550?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/yyx990803',
                html_url: 'https://github.com/yyx990803',
                followers_url: 'https://api.github.com/users/yyx990803/followers',
                following_url: 'https://api.github.com/users/yyx990803/following{/other_user}',
                gists_url: 'https://api.github.com/users/yyx990803/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/yyx990803/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/yyx990803/subscriptions',
                organizations_url: 'https://api.github.com/users/yyx990803/orgs',
                repos_url: 'https://api.github.com/users/yyx990803/repos',
                events_url: 'https://api.github.com/users/yyx990803/events{/privacy}',
                received_events_url: 'https://api.github.com/users/yyx990803/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [
                {
                    id: 5133997498,
                    node_id: 'LA_kwDOI7qa7s8AAAABMgKVug',
                    url: 'https://api.github.com/repos/oxc-project/oxc/labels/C-bug',
                    name: 'C-bug',
                    color: 'd73a4a',
                    default: false,
                    description: 'Category - Bug',
                },
            ],
            state: 'closed',
            locked: false,
            assignee: {
                login: 'Dunqing',
                id: 29533304,
                node_id: 'MDQ6VXNlcjI5NTMzMzA0',
                avatar_url: 'https://avatars.githubusercontent.com/u/29533304?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/Dunqing',
                html_url: 'https://github.com/Dunqing',
                followers_url: 'https://api.github.com/users/Dunqing/followers',
                following_url: 'https://api.github.com/users/Dunqing/following{/other_user}',
                gists_url: 'https://api.github.com/users/Dunqing/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/Dunqing/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/Dunqing/subscriptions',
                organizations_url: 'https://api.github.com/users/Dunqing/orgs',
                repos_url: 'https://api.github.com/users/Dunqing/repos',
                events_url: 'https://api.github.com/users/Dunqing/events{/privacy}',
                received_events_url: 'https://api.github.com/users/Dunqing/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            assignees: [
                {
                    login: 'Dunqing',
                    id: 29533304,
                    node_id: 'MDQ6VXNlcjI5NTMzMzA0',
                    avatar_url: 'https://avatars.githubusercontent.com/u/29533304?v=4',
                    gravatar_id: '',
                    url: 'https://api.github.com/users/Dunqing',
                    html_url: 'https://github.com/Dunqing',
                    followers_url: 'https://api.github.com/users/Dunqing/followers',
                    following_url: 'https://api.github.com/users/Dunqing/following{/other_user}',
                    gists_url: 'https://api.github.com/users/Dunqing/gists{/gist_id}',
                    starred_url: 'https://api.github.com/users/Dunqing/starred{/owner}{/repo}',
                    subscriptions_url: 'https://api.github.com/users/Dunqing/subscriptions',
                    organizations_url: 'https://api.github.com/users/Dunqing/orgs',
                    repos_url: 'https://api.github.com/users/Dunqing/repos',
                    events_url: 'https://api.github.com/users/Dunqing/events{/privacy}',
                    received_events_url: 'https://api.github.com/users/Dunqing/received_events',
                    type: 'User',
                    user_view_type: 'public',
                    site_admin: false,
                },
            ],
            milestone: null,
            comments: 0,
            created_at: '2024-09-10T04:41:29Z',
            updated_at: '2024-09-11T05:37:33Z',
            closed_at: '2024-09-11T05:37:33Z',
            author_association: 'NONE',
            active_lock_reason: null,
            body: 'When using `isolatedDeclaration` transform:\r\n\r\nIn:\r\n\r\n```ts\r\nimport { type X } from \'./x\'\r\n\r\ntype Y = 1\r\n\r\ndeclare module "foo" {\r\n  interface Foo {\r\n    x: X\r\n    y: Y\r\n  }\r\n}\r\n```\r\n\r\nOut (see that import of `X` and declaration of `Y` are both incorrectly removed):\r\n\r\n```ts\r\ndeclare module "foo" {\r\n\tinterface Foo {\r\n\t\tx: X;\r\n\t\ty: Y;\r\n\t}\r\n}\r\nexport {};\r\n```',
            reactions: {
                url: 'https://api.github.com/repos/oxc-project/oxc/issues/5667/reactions',
                total_count: 0,
                '+1': 0,
                '-1': 0,
                laugh: 0,
                hooray: 0,
                confused: 0,
                heart: 0,
                rocket: 0,
                eyes: 0,
            },
            timeline_url: 'https://api.github.com/repos/oxc-project/oxc/issues/5667/timeline',
            performed_via_github_app: null,
            state_reason: 'completed',
            score: 1.0,
        },
        {
            url: 'https://api.github.com/repos/bvaughn/react-virtualized/issues/1632',
            repository_url: 'https://api.github.com/repos/bvaughn/react-virtualized',
            labels_url: 'https://api.github.com/repos/bvaughn/react-virtualized/issues/1632/labels{/name}',
            comments_url: 'https://api.github.com/repos/bvaughn/react-virtualized/issues/1632/comments',
            events_url: 'https://api.github.com/repos/bvaughn/react-virtualized/issues/1632/events',
            html_url: 'https://github.com/bvaughn/react-virtualized/issues/1632',
            id: 792373718,
            node_id: 'MDU6SXNzdWU3OTIzNzM3MTg=',
            number: 1632,
            title: 'Bogus import in generated dist ESM file',
            user: {
                login: 'yyx990803',
                id: 499550,
                node_id: 'MDQ6VXNlcjQ5OTU1MA==',
                avatar_url: 'https://avatars.githubusercontent.com/u/499550?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/yyx990803',
                html_url: 'https://github.com/yyx990803',
                followers_url: 'https://api.github.com/users/yyx990803/followers',
                following_url: 'https://api.github.com/users/yyx990803/following{/other_user}',
                gists_url: 'https://api.github.com/users/yyx990803/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/yyx990803/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/yyx990803/subscriptions',
                organizations_url: 'https://api.github.com/users/yyx990803/orgs',
                repos_url: 'https://api.github.com/users/yyx990803/repos',
                events_url: 'https://api.github.com/users/yyx990803/events{/privacy}',
                received_events_url: 'https://api.github.com/users/yyx990803/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [
                {
                    id: 7328402950,
                    node_id: 'LA_kwDOArU8Ws8AAAABtM6OBg',
                    url: 'https://api.github.com/repos/bvaughn/react-virtualized/labels/Stale',
                    name: 'Stale',
                    color: 'ededed',
                    default: false,
                    description: null,
                },
            ],
            state: 'closed',
            locked: false,
            assignee: null,
            assignees: [],
            milestone: null,
            comments: 34,
            created_at: '2021-01-22T23:37:05Z',
            updated_at: '2024-09-02T19:34:20Z',
            closed_at: '2024-09-02T08:02:49Z',
            author_association: 'NONE',
            active_lock_reason: null,
            body: '## Bug Report\r\n\r\nhttps://unpkg.com/browse/react-virtualized@9.22.3/dist/es/WindowScroller/utils/onScroll.js\r\n\r\n### What is the current behavior?\r\n\r\nLast line of the linked file has the following bogus import pointing to a non-existent export:\r\n\r\n```js\r\nimport { bpfrpt_proptype_WindowScroller } from "../WindowScroller.js";\r\n```\r\n\r\n### What is the expected behavior?\r\n\r\nThis import shouldn\'t exist.\r\n\r\n### Which versions of React and react-virtualized, and which browser / OS are affected by this issue? Did this work in previous versions of react-virtualized?\r\n\r\nNot sure which version this started shipping - but this import breaks when imported in native browser ESM and also breaks in strict bundlers like esbuild / rollup.',
            reactions: {
                url: 'https://api.github.com/repos/bvaughn/react-virtualized/issues/1632/reactions',
                total_count: 126,
                '+1': 120,
                '-1': 0,
                laugh: 0,
                hooray: 0,
                confused: 0,
                heart: 0,
                rocket: 0,
                eyes: 6,
            },
            timeline_url: 'https://api.github.com/repos/bvaughn/react-virtualized/issues/1632/timeline',
            performed_via_github_app: null,
            state_reason: 'not_planned',
            score: 1.0,
        },
        {
            url: 'https://api.github.com/repos/vitejs/vite/issues/6555',
            repository_url: 'https://api.github.com/repos/vitejs/vite',
            labels_url: 'https://api.github.com/repos/vitejs/vite/issues/6555/labels{/name}',
            comments_url: 'https://api.github.com/repos/vitejs/vite/issues/6555/comments',
            events_url: 'https://api.github.com/repos/vitejs/vite/issues/6555/events',
            html_url: 'https://github.com/vitejs/vite/issues/6555',
            id: 1106970046,
            node_id: 'I_kwDOD1jqbs5B-wW-',
            number: 6555,
            title: 'Lib mode format: es.min',
            user: {
                login: 'yyx990803',
                id: 499550,
                node_id: 'MDQ6VXNlcjQ5OTU1MA==',
                avatar_url: 'https://avatars.githubusercontent.com/u/499550?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/yyx990803',
                html_url: 'https://github.com/yyx990803',
                followers_url: 'https://api.github.com/users/yyx990803/followers',
                following_url: 'https://api.github.com/users/yyx990803/following{/other_user}',
                gists_url: 'https://api.github.com/users/yyx990803/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/yyx990803/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/yyx990803/subscriptions',
                organizations_url: 'https://api.github.com/users/yyx990803/orgs',
                repos_url: 'https://api.github.com/users/yyx990803/repos',
                events_url: 'https://api.github.com/users/yyx990803/events{/privacy}',
                received_events_url: 'https://api.github.com/users/yyx990803/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [
                {
                    id: 2002170924,
                    node_id: 'MDU6TGFiZWwyMDAyMTcwOTI0',
                    url: 'https://api.github.com/repos/vitejs/vite/labels/enhancement',
                    name: 'enhancement',
                    color: 'a2eeef',
                    default: true,
                    description: 'New feature or request',
                },
                {
                    id: 3769886111,
                    node_id: 'LA_kwDOD1jqbs7gs-Wf',
                    url: 'https://api.github.com/repos/vitejs/vite/labels/feat:%20library%20mode',
                    name: 'feat: library mode',
                    color: '380563',
                    default: false,
                    description: '',
                },
            ],
            state: 'open',
            locked: false,
            assignee: null,
            assignees: [],
            milestone: null,
            comments: 21,
            created_at: '2022-01-18T14:23:55Z',
            updated_at: '2024-08-21T11:51:31Z',
            closed_at: null,
            author_association: 'MEMBER',
            active_lock_reason: null,
            body: "### Clear and concise description of the problem\r\n\r\nCurrently when building in lib mode we do not minify the ES build because that would remove pure annotations and break treeshaking. However, this is assuming that the ES build is only used with bundlers. In the future, more users could be using ES builds over CDNs with native ES imports, so a minified ES build could be necessary for those cases.\r\n\r\n### Suggested solution\r\n\r\n```\r\n// vite config\r\nbuild: {\r\n  lib: {\r\n    formats: ['es', 'es.min']\r\n  }\r\n}\r\n```\r\n\r\n### Alternative\r\n\r\n`lib: { minifyES: true }`\r\n\r\n### Additional context\r\n\r\nhttps://github.com/vuejs/petite-vue/pull/112\r\n\r\n### Validations\r\n\r\n- [X] Follow our [Code of Conduct](https://github.com/vitejs/vite/blob/main/CODE_OF_CONDUCT.md)\r\n- [X] Read the [Contributing Guidelines](https://github.com/vitejs/vite/blob/main/CONTRIBUTING.md).\r\n- [X] Read the [docs](https://vitejs.dev/guide).\r\n- [X] Check that there isn't already an issue that request the same feature to avoid creating a duplicate.",
            reactions: {
                url: 'https://api.github.com/repos/vitejs/vite/issues/6555/reactions',
                total_count: 47,
                '+1': 45,
                '-1': 0,
                laugh: 0,
                hooray: 0,
                confused: 0,
                heart: 0,
                rocket: 0,
                eyes: 2,
            },
            timeline_url: 'https://api.github.com/repos/vitejs/vite/issues/6555/timeline',
            performed_via_github_app: null,
            state_reason: null,
            score: 1.0,
        },
        {
            url: 'https://api.github.com/repos/rolldown/rolldown/issues/1940',
            repository_url: 'https://api.github.com/repos/rolldown/rolldown',
            labels_url: 'https://api.github.com/repos/rolldown/rolldown/issues/1940/labels{/name}',
            comments_url: 'https://api.github.com/repos/rolldown/rolldown/issues/1940/comments',
            events_url: 'https://api.github.com/repos/rolldown/rolldown/issues/1940/events',
            html_url: 'https://github.com/rolldown/rolldown/issues/1940',
            id: 2459611776,
            node_id: 'I_kwDOKVE1Gs6SmrKA',
            number: 1940,
            title: "[Bug]: esm `export * from 'externalized-dep'` still generating unnecessary code",
            user: {
                login: 'yyx990803',
                id: 499550,
                node_id: 'MDQ6VXNlcjQ5OTU1MA==',
                avatar_url: 'https://avatars.githubusercontent.com/u/499550?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/yyx990803',
                html_url: 'https://github.com/yyx990803',
                followers_url: 'https://api.github.com/users/yyx990803/followers',
                following_url: 'https://api.github.com/users/yyx990803/following{/other_user}',
                gists_url: 'https://api.github.com/users/yyx990803/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/yyx990803/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/yyx990803/subscriptions',
                organizations_url: 'https://api.github.com/users/yyx990803/orgs',
                repos_url: 'https://api.github.com/users/yyx990803/repos',
                events_url: 'https://api.github.com/users/yyx990803/events{/privacy}',
                received_events_url: 'https://api.github.com/users/yyx990803/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [
                {
                    id: 5977290511,
                    node_id: 'LA_kwDOKVE1Gs8AAAABZEY3Dw',
                    url: 'https://api.github.com/repos/rolldown/rolldown/labels/bug',
                    name: 'bug',
                    color: 'B60205',
                    default: true,
                    description: "Something isn't working",
                },
            ],
            state: 'closed',
            locked: false,
            assignee: {
                login: 'IWANABETHATGUY',
                id: 17974631,
                node_id: 'MDQ6VXNlcjE3OTc0NjMx',
                avatar_url: 'https://avatars.githubusercontent.com/u/17974631?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/IWANABETHATGUY',
                html_url: 'https://github.com/IWANABETHATGUY',
                followers_url: 'https://api.github.com/users/IWANABETHATGUY/followers',
                following_url: 'https://api.github.com/users/IWANABETHATGUY/following{/other_user}',
                gists_url: 'https://api.github.com/users/IWANABETHATGUY/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/IWANABETHATGUY/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/IWANABETHATGUY/subscriptions',
                organizations_url: 'https://api.github.com/users/IWANABETHATGUY/orgs',
                repos_url: 'https://api.github.com/users/IWANABETHATGUY/repos',
                events_url: 'https://api.github.com/users/IWANABETHATGUY/events{/privacy}',
                received_events_url: 'https://api.github.com/users/IWANABETHATGUY/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            assignees: [
                {
                    login: 'IWANABETHATGUY',
                    id: 17974631,
                    node_id: 'MDQ6VXNlcjE3OTc0NjMx',
                    avatar_url: 'https://avatars.githubusercontent.com/u/17974631?v=4',
                    gravatar_id: '',
                    url: 'https://api.github.com/users/IWANABETHATGUY',
                    html_url: 'https://github.com/IWANABETHATGUY',
                    followers_url: 'https://api.github.com/users/IWANABETHATGUY/followers',
                    following_url: 'https://api.github.com/users/IWANABETHATGUY/following{/other_user}',
                    gists_url: 'https://api.github.com/users/IWANABETHATGUY/gists{/gist_id}',
                    starred_url: 'https://api.github.com/users/IWANABETHATGUY/starred{/owner}{/repo}',
                    subscriptions_url: 'https://api.github.com/users/IWANABETHATGUY/subscriptions',
                    organizations_url: 'https://api.github.com/users/IWANABETHATGUY/orgs',
                    repos_url: 'https://api.github.com/users/IWANABETHATGUY/repos',
                    events_url: 'https://api.github.com/users/IWANABETHATGUY/events{/privacy}',
                    received_events_url: 'https://api.github.com/users/IWANABETHATGUY/received_events',
                    type: 'User',
                    user_view_type: 'public',
                    site_admin: false,
                },
            ],
            milestone: null,
            comments: 1,
            created_at: '2024-08-11T14:13:00Z',
            updated_at: '2024-08-14T09:09:23Z',
            closed_at: '2024-08-14T09:09:23Z',
            author_association: 'MEMBER',
            active_lock_reason: null,
            body: '### Reproduction link or steps\r\n\r\nhttps://github.com/rolldown/repros/tree/esm-re-export\r\n\r\n```js\r\n// main.js\r\nexport * from "x"\r\n```\r\n```js\r\n// rolldown.config.mjs\r\nexport default {\r\n  input: \'./main.js\',\r\n  external: [\'x\']\r\n}\r\n```\r\n\r\n### What is expected?\r\n\r\nOutput should just be\r\n\r\n```js\r\nexport * from "x"\r\n```\r\n\r\n### What is actually happening?\r\n\r\nOutput includes tons of unnecessary code:\r\n\r\n```js\r\nimport "x";\r\n\r\nexport * from "x"\r\n\r\n//#region rolldown:runtime\r\nvar __defProp = Object.defineProperty;\r\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\r\nvar __getOwnPropNames = Object.getOwnPropertyNames;\r\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\r\nvar __copyProps = (to, from, except, desc) => {\r\n\tif (from && typeof from === "object" || typeof from === "function") for (var keys = __getOwnPropNames(from), i = 0, n = keys.length, key; i < n; i++) {\r\n\t\tkey = keys[i];\r\n\t\tif (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\r\n\t\t\tget: ((k) => from[k]).bind(null, key),\r\n\t\t\tenumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\r\n\t\t});\r\n\t}\r\n\treturn to;\r\n};\r\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, "default"), secondTarget && __copyProps(secondTarget, mod, "default"));\r\n\r\n//#endregion\r\n//#region main.js\r\nvar main_ns = {};\r\nimport * as import_x from "x";\r\n__reExport(main_ns, import_x);\r\n\r\n//#endregion\r\n```\r\n\r\nMost importantly, the line `import * as import_x from "x";` completely breaks treeshaking for any module that imports this one.\r\n\r\n### System Info\r\n\r\n```Shell\r\nrolldown@nightly (0.12.2-snapshot-a2bb2ca-20240811003152)\r\n```\r\n\r\n\r\n### Any additional comments?\r\n\r\n_No response_',
            reactions: {
                url: 'https://api.github.com/repos/rolldown/rolldown/issues/1940/reactions',
                total_count: 0,
                '+1': 0,
                '-1': 0,
                laugh: 0,
                hooray: 0,
                confused: 0,
                heart: 0,
                rocket: 0,
                eyes: 0,
            },
            timeline_url: 'https://api.github.com/repos/rolldown/rolldown/issues/1940/timeline',
            performed_via_github_app: null,
            state_reason: 'completed',
            score: 1.0,
        },
        {
            url: 'https://api.github.com/repos/oxc-project/oxc/issues/4789',
            repository_url: 'https://api.github.com/repos/oxc-project/oxc',
            labels_url: 'https://api.github.com/repos/oxc-project/oxc/issues/4789/labels{/name}',
            comments_url: 'https://api.github.com/repos/oxc-project/oxc/issues/4789/comments',
            events_url: 'https://api.github.com/repos/oxc-project/oxc/issues/4789/events',
            html_url: 'https://github.com/oxc-project/oxc/issues/4789',
            id: 2457969650,
            node_id: 'I_kwDOI7qa7s6SgaPy',
            number: 4789,
            title: 'transformer: class constructor argument access modifier special behavior',
            user: {
                login: 'yyx990803',
                id: 499550,
                node_id: 'MDQ6VXNlcjQ5OTU1MA==',
                avatar_url: 'https://avatars.githubusercontent.com/u/499550?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/yyx990803',
                html_url: 'https://github.com/yyx990803',
                followers_url: 'https://api.github.com/users/yyx990803/followers',
                following_url: 'https://api.github.com/users/yyx990803/following{/other_user}',
                gists_url: 'https://api.github.com/users/yyx990803/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/yyx990803/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/yyx990803/subscriptions',
                organizations_url: 'https://api.github.com/users/yyx990803/orgs',
                repos_url: 'https://api.github.com/users/yyx990803/repos',
                events_url: 'https://api.github.com/users/yyx990803/events{/privacy}',
                received_events_url: 'https://api.github.com/users/yyx990803/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [
                {
                    id: 5133997498,
                    node_id: 'LA_kwDOI7qa7s8AAAABMgKVug',
                    url: 'https://api.github.com/repos/oxc-project/oxc/labels/C-bug',
                    name: 'C-bug',
                    color: 'd73a4a',
                    default: false,
                    description: 'Category - Bug',
                },
                {
                    id: 6066433332,
                    node_id: 'LA_kwDOI7qa7s8AAAABaZZtNA',
                    url: 'https://api.github.com/repos/oxc-project/oxc/labels/A-transformer',
                    name: 'A-transformer',
                    color: 'bfdadc',
                    default: false,
                    description: 'Area - Transformer / Transpiler',
                },
            ],
            state: 'closed',
            locked: false,
            assignee: {
                login: 'Dunqing',
                id: 29533304,
                node_id: 'MDQ6VXNlcjI5NTMzMzA0',
                avatar_url: 'https://avatars.githubusercontent.com/u/29533304?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/Dunqing',
                html_url: 'https://github.com/Dunqing',
                followers_url: 'https://api.github.com/users/Dunqing/followers',
                following_url: 'https://api.github.com/users/Dunqing/following{/other_user}',
                gists_url: 'https://api.github.com/users/Dunqing/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/Dunqing/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/Dunqing/subscriptions',
                organizations_url: 'https://api.github.com/users/Dunqing/orgs',
                repos_url: 'https://api.github.com/users/Dunqing/repos',
                events_url: 'https://api.github.com/users/Dunqing/events{/privacy}',
                received_events_url: 'https://api.github.com/users/Dunqing/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            assignees: [
                {
                    login: 'Dunqing',
                    id: 29533304,
                    node_id: 'MDQ6VXNlcjI5NTMzMzA0',
                    avatar_url: 'https://avatars.githubusercontent.com/u/29533304?v=4',
                    gravatar_id: '',
                    url: 'https://api.github.com/users/Dunqing',
                    html_url: 'https://github.com/Dunqing',
                    followers_url: 'https://api.github.com/users/Dunqing/followers',
                    following_url: 'https://api.github.com/users/Dunqing/following{/other_user}',
                    gists_url: 'https://api.github.com/users/Dunqing/gists{/gist_id}',
                    starred_url: 'https://api.github.com/users/Dunqing/starred{/owner}{/repo}',
                    subscriptions_url: 'https://api.github.com/users/Dunqing/subscriptions',
                    organizations_url: 'https://api.github.com/users/Dunqing/orgs',
                    repos_url: 'https://api.github.com/users/Dunqing/repos',
                    events_url: 'https://api.github.com/users/Dunqing/events{/privacy}',
                    received_events_url: 'https://api.github.com/users/Dunqing/received_events',
                    type: 'User',
                    user_view_type: 'public',
                    site_admin: false,
                },
            ],
            milestone: null,
            comments: 8,
            created_at: '2024-08-09T13:49:24Z',
            updated_at: '2024-08-12T02:54:51Z',
            closed_at: '2024-08-12T02:54:50Z',
            author_association: 'NONE',
            active_lock_reason: null,
            body: "In TypeScript, the following class (case 1) reports a type error:\r\n\r\n```ts\r\nclass Foo {\r\n  x = this.foo // error: Property 'foo' is used before its initialization\r\n  foo: any\r\n  constructor(foo: any) {\r\n    this.foo = foo\r\n  }\r\n}\r\n```\r\n\r\nBecause it will be transformed to:\r\n\r\n```js\r\nclass Foo {\r\n    constructor(foo) {\r\n        this.x = this.foo; // <-- this.foo not assigned yet!\r\n        this.foo = foo;\r\n    }\r\n}\r\n```\r\n\r\n[TS Playground](https://www.typescriptlang.org/play/?target=99#code/MYGwhgzhAEBiD29oG8CwAoa0Ae0C80ALgBYCWEAdAGaLQD0d0ApgE4vwsBc0ACuwA6tCAT2gByGvDHRy0AK4QmAE2gAjJjRZMZhGKQB2pQqTAhSALzDH4+jFkncw+4XejAbEQiznBCHABQO0E7CAJQorlgk5NS0BJKuAL4YiUA)\r\n\r\nHowever, if it uses access modifier on the constructor argument (case 2):\r\n\r\n```ts\r\nclass Foo {\r\n  x = this.foo\r\n  constructor(public foo: any) {\r\n    console.log(this.foo)\r\n  }\r\n}\r\n```\r\n\r\nIt will work both in types and at runtime, because it will be transformed to:\r\n\r\n```js\r\nclass Foo {\r\n    constructor(foo) {\r\n        this.foo = foo; // <-- injected from argument\r\n        this.x = this.foo; // <-- moved from field initializers\r\n        console.log(this.foo);\r\n    }\r\n}\r\n```\r\n\r\n[TS Playground](https://www.typescriptlang.org/play/?target=99#code/MYGwhgzhAEBiD29oG8CwAoa0Ae0C80ALgBYCWEAdAGaIZbDwB2EhATgK7CHysAUADuwBGIUsGg14ALmhhGATwCUKOlmgNm8EAFMKIeAHNeJctUSKA3KoC+Ga0A)\r\n\r\nNotice how `x = this.foo` is moved into the constructor to be **after** the `this.foo` assignment.\r\n\r\n## Oxc's current behavior\r\n\r\nOxc currently transforms case 2 to:\r\n\r\n```js\r\nclass Foo {\r\n  x = this.foo\r\n  constructor(foo) {\r\n    console.log(this.foo)\r\n    this.foo = foo // <-- injected from argument\r\n  }\r\n}\r\n```\r\n\r\nNotice that both `x = this.foo` and `console.log(this.foo)` are executed before the `this.foo` assignment, both leading to runtime errors.\r\n\r\n## What needs to be fixed\r\n\r\n1. The generated assignment for constructor arguments with access modifiers should be injected to the **top** of the constructor, not the bottom.\r\n2. When constructor argument access modifiers are used, **all** class field initializers need to be moved into the constructor (so their initialization order is preserved), **after** the argument assignments, and **before** existing constructor code.\r\n\r\n## Related: Behavior with `useDefineForClassFields: true`\r\n\r\nWhen `useDefineForClassFields` is set to true, case 2 will also throw a type error. And TS's transform out will become:\r\n\r\n```js\r\nclass Foo {\r\n    foo;\r\n    x = this.foo;\r\n    constructor(foo) {\r\n        this.foo = foo;\r\n        console.log(this.foo);\r\n    }\r\n}\r\n```\r\n[TS Playground](https://www.typescriptlang.org/play/?useDefineForClassFields=true&target=99#code/MYGwhgzhAEBiD29oG8CwAoa0Ae0C80ALgBYCWEAdAGaIZbDwB2EhATgK7CHysAUADuwBGIUsGg14ALmhhGATwCUKOlmgNm8EAFMKIeAHNeJctUSKA3KoC+Ga0A)\r\n\r\nI'm not sure if oxc's TS transform currently takes this into account, but this is something we will need to consider.",
            reactions: {
                url: 'https://api.github.com/repos/oxc-project/oxc/issues/4789/reactions',
                total_count: 18,
                '+1': 0,
                '-1': 0,
                laugh: 0,
                hooray: 0,
                confused: 0,
                heart: 0,
                rocket: 18,
                eyes: 0,
            },
            timeline_url: 'https://api.github.com/repos/oxc-project/oxc/issues/4789/timeline',
            performed_via_github_app: null,
            state_reason: 'completed',
            score: 1.0,
        },
        {
            url: 'https://api.github.com/repos/rolldown/rolldown/issues/1917',
            repository_url: 'https://api.github.com/repos/rolldown/rolldown',
            labels_url: 'https://api.github.com/repos/rolldown/rolldown/issues/1917/labels{/name}',
            comments_url: 'https://api.github.com/repos/rolldown/rolldown/issues/1917/comments',
            events_url: 'https://api.github.com/repos/rolldown/rolldown/issues/1917/events',
            html_url: 'https://github.com/rolldown/rolldown/issues/1917',
            id: 2457472637,
            node_id: 'I_kwDOKVE1Gs6Seg59',
            number: 1917,
            title: '[Bug]: cjs dependency ends up empty when `treeshake.moduleSideEffects: false` is set',
            user: {
                login: 'yyx990803',
                id: 499550,
                node_id: 'MDQ6VXNlcjQ5OTU1MA==',
                avatar_url: 'https://avatars.githubusercontent.com/u/499550?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/yyx990803',
                html_url: 'https://github.com/yyx990803',
                followers_url: 'https://api.github.com/users/yyx990803/followers',
                following_url: 'https://api.github.com/users/yyx990803/following{/other_user}',
                gists_url: 'https://api.github.com/users/yyx990803/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/yyx990803/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/yyx990803/subscriptions',
                organizations_url: 'https://api.github.com/users/yyx990803/orgs',
                repos_url: 'https://api.github.com/users/yyx990803/repos',
                events_url: 'https://api.github.com/users/yyx990803/events{/privacy}',
                received_events_url: 'https://api.github.com/users/yyx990803/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [
                {
                    id: 5977290511,
                    node_id: 'LA_kwDOKVE1Gs8AAAABZEY3Dw',
                    url: 'https://api.github.com/repos/rolldown/rolldown/labels/bug',
                    name: 'bug',
                    color: 'B60205',
                    default: true,
                    description: "Something isn't working",
                },
            ],
            state: 'closed',
            locked: false,
            assignee: {
                login: 'hyf0',
                id: 49502170,
                node_id: 'MDQ6VXNlcjQ5NTAyMTcw',
                avatar_url: 'https://avatars.githubusercontent.com/u/49502170?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/hyf0',
                html_url: 'https://github.com/hyf0',
                followers_url: 'https://api.github.com/users/hyf0/followers',
                following_url: 'https://api.github.com/users/hyf0/following{/other_user}',
                gists_url: 'https://api.github.com/users/hyf0/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/hyf0/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/hyf0/subscriptions',
                organizations_url: 'https://api.github.com/users/hyf0/orgs',
                repos_url: 'https://api.github.com/users/hyf0/repos',
                events_url: 'https://api.github.com/users/hyf0/events{/privacy}',
                received_events_url: 'https://api.github.com/users/hyf0/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            assignees: [
                {
                    login: 'hyf0',
                    id: 49502170,
                    node_id: 'MDQ6VXNlcjQ5NTAyMTcw',
                    avatar_url: 'https://avatars.githubusercontent.com/u/49502170?v=4',
                    gravatar_id: '',
                    url: 'https://api.github.com/users/hyf0',
                    html_url: 'https://github.com/hyf0',
                    followers_url: 'https://api.github.com/users/hyf0/followers',
                    following_url: 'https://api.github.com/users/hyf0/following{/other_user}',
                    gists_url: 'https://api.github.com/users/hyf0/gists{/gist_id}',
                    starred_url: 'https://api.github.com/users/hyf0/starred{/owner}{/repo}',
                    subscriptions_url: 'https://api.github.com/users/hyf0/subscriptions',
                    organizations_url: 'https://api.github.com/users/hyf0/orgs',
                    repos_url: 'https://api.github.com/users/hyf0/repos',
                    events_url: 'https://api.github.com/users/hyf0/events{/privacy}',
                    received_events_url: 'https://api.github.com/users/hyf0/received_events',
                    type: 'User',
                    user_view_type: 'public',
                    site_admin: false,
                },
            ],
            milestone: null,
            comments: 1,
            created_at: '2024-08-09T09:09:13Z',
            updated_at: '2024-08-11T18:29:51Z',
            closed_at: '2024-08-11T18:29:51Z',
            author_association: 'MEMBER',
            active_lock_reason: null,
            body: "### Reproduction link or steps\n\nTo reproduce:\r\n\r\n* clone `vuejs/core` 's latest `rolldown-main` branch\r\n* Run `pnpm build compiler-sfc -f cjs`\r\n* Check `packages/compiler-sfc/dist/compiler-sfc.cjs.js` - line 3604\r\n\r\n```js\r\n//#region node_modules/.pnpm/util-deprecate@1.0.2/node_modules/util-deprecate/node.js\r\nvar require_node = __commonJSMin((exports, module) => {}); // line 3604\r\n// ...\r\nvar deprecate = require_node(); // line 3647\r\n```\r\n\r\n* Somehow the dep results in an empty module, but the export is called on line 3649, so that breaks everything\r\n\r\nThe offending dependency is `postcss-selector-parser` -> `util-deprecate`, however I tried bundling this dep alone and cannot reproduce this issue. It only happens when bundling Vue.\n\n### What is expected?\n\nModule not empty\n\n### What is actually happening?\n\nModule is empty\n\n### System Info\n\n```Shell\nrolldown 0.12.2-snapshot-29d29ba-20240809002935\n```\n\n\n### Any additional comments?\n\n_No response_",
            reactions: {
                url: 'https://api.github.com/repos/rolldown/rolldown/issues/1917/reactions',
                total_count: 0,
                '+1': 0,
                '-1': 0,
                laugh: 0,
                hooray: 0,
                confused: 0,
                heart: 0,
                rocket: 0,
                eyes: 0,
            },
            timeline_url: 'https://api.github.com/repos/rolldown/rolldown/issues/1917/timeline',
            performed_via_github_app: null,
            state_reason: 'completed',
            score: 1.0,
        },
        {
            url: 'https://api.github.com/repos/tinylibs/tinyexec/issues/17',
            repository_url: 'https://api.github.com/repos/tinylibs/tinyexec',
            labels_url: 'https://api.github.com/repos/tinylibs/tinyexec/issues/17/labels{/name}',
            comments_url: 'https://api.github.com/repos/tinylibs/tinyexec/issues/17/comments',
            events_url: 'https://api.github.com/repos/tinylibs/tinyexec/issues/17/events',
            html_url: 'https://github.com/tinylibs/tinyexec/issues/17',
            id: 2391669596,
            node_id: 'I_kwDOLxPz4c6Ojftc',
            number: 17,
            title: 'Dynamic require of "child_process" is not supported when importing from esm',
            user: {
                login: 'yyx990803',
                id: 499550,
                node_id: 'MDQ6VXNlcjQ5OTU1MA==',
                avatar_url: 'https://avatars.githubusercontent.com/u/499550?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/yyx990803',
                html_url: 'https://github.com/yyx990803',
                followers_url: 'https://api.github.com/users/yyx990803/followers',
                following_url: 'https://api.github.com/users/yyx990803/following{/other_user}',
                gists_url: 'https://api.github.com/users/yyx990803/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/yyx990803/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/yyx990803/subscriptions',
                organizations_url: 'https://api.github.com/users/yyx990803/orgs',
                repos_url: 'https://api.github.com/users/yyx990803/repos',
                events_url: 'https://api.github.com/users/yyx990803/events{/privacy}',
                received_events_url: 'https://api.github.com/users/yyx990803/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [],
            state: 'closed',
            locked: false,
            assignee: null,
            assignees: [],
            milestone: null,
            comments: 3,
            created_at: '2024-07-05T02:46:23Z',
            updated_at: '2024-08-07T18:57:49Z',
            closed_at: '2024-08-07T18:57:49Z',
            author_association: 'NONE',
            active_lock_reason: null,
            body: 'In a project with `type: "module"` and:\r\n\r\n```ts\r\nimport { x } from \'tinyexec\'\r\n```\r\n\r\nthrows:\r\n\r\n```\r\nfile:///XXX/node_modules/.pnpm/tinyexec@0.1.2/node_modules/tinyexec/dist/main.js:11\r\n  throw Error(\'Dynamic require of "\' + e + \'" is not supported\');\r\n        ^\r\n\r\nError: Dynamic require of "child_process" is not supported\r\n    at file:///XXX/node_modules/.pnpm/tinyexec@0.1.2/node_modules/tinyexec/dist/main.js:11:9\r\n    at file:///XXX/node_modules/.pnpm/tinyexec@0.1.2/node_modules/tinyexec/dist/main.js:347:12\r\n    at file:///XXX/node_modules/.pnpm/tinyexec@0.1.2/node_modules/tinyexec/dist/main.js:13:31\r\n    at file:///XXX/node_modules/.pnpm/tinyexec@0.1.2/node_modules/tinyexec/dist/main.js:411:13\r\n    at ModuleJob.run (node:internal/modules/esm/module_job:222:25)\r\n    at async ModuleLoader.import (node:internal/modules/esm/loader:316:24)\r\n    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:123:5)\r\n```',
            reactions: {
                url: 'https://api.github.com/repos/tinylibs/tinyexec/issues/17/reactions',
                total_count: 2,
                '+1': 2,
                '-1': 0,
                laugh: 0,
                hooray: 0,
                confused: 0,
                heart: 0,
                rocket: 0,
                eyes: 0,
            },
            timeline_url: 'https://api.github.com/repos/tinylibs/tinyexec/issues/17/timeline',
            performed_via_github_app: null,
            state_reason: 'completed',
            score: 1.0,
        },
        {
            url: 'https://api.github.com/repos/vuejs/test-utils/issues/2483',
            repository_url: 'https://api.github.com/repos/vuejs/test-utils',
            labels_url: 'https://api.github.com/repos/vuejs/test-utils/issues/2483/labels{/name}',
            comments_url: 'https://api.github.com/repos/vuejs/test-utils/issues/2483/comments',
            events_url: 'https://api.github.com/repos/vuejs/test-utils/issues/2483/events',
            html_url: 'https://github.com/vuejs/test-utils/issues/2483',
            id: 2441852393,
            node_id: 'I_kwDODmrGHs6Ri7Xp',
            number: 2483,
            title: 'Bug: 3.5 alpha type issue',
            user: {
                login: 'yyx990803',
                id: 499550,
                node_id: 'MDQ6VXNlcjQ5OTU1MA==',
                avatar_url: 'https://avatars.githubusercontent.com/u/499550?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/yyx990803',
                html_url: 'https://github.com/yyx990803',
                followers_url: 'https://api.github.com/users/yyx990803/followers',
                following_url: 'https://api.github.com/users/yyx990803/following{/other_user}',
                gists_url: 'https://api.github.com/users/yyx990803/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/yyx990803/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/yyx990803/subscriptions',
                organizations_url: 'https://api.github.com/users/yyx990803/orgs',
                repos_url: 'https://api.github.com/users/yyx990803/repos',
                events_url: 'https://api.github.com/users/yyx990803/events{/privacy}',
                received_events_url: 'https://api.github.com/users/yyx990803/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [
                {
                    id: 1859859867,
                    node_id: 'MDU6TGFiZWwxODU5ODU5ODY3',
                    url: 'https://api.github.com/repos/vuejs/test-utils/labels/bug',
                    name: 'bug',
                    color: 'd73a4a',
                    default: true,
                    description: "Something isn't working",
                },
            ],
            state: 'closed',
            locked: false,
            assignee: null,
            assignees: [],
            milestone: null,
            comments: 0,
            created_at: '2024-08-01T08:44:52Z',
            updated_at: '2024-08-01T09:33:59Z',
            closed_at: '2024-08-01T09:33:59Z',
            author_association: 'MEMBER',
            active_lock_reason: null,
            body: "Discovered when running latest ecosystem-ci on `minor` branch in Vue core: https://github.com/vuejs/ecosystem-ci/actions/runs/10194241059/job/28200426892\r\n\r\nThe relevant line here: https://github.com/vuejs/test-utils/blob/main/src/createInstance.ts#L263\r\n\r\nThe type error appeared after we added `app.config.idPrefix` in 3.5.0-alpha.3, due to an interesting constraint in TypeScript:\r\n\r\n```ts\r\ndeclare const x: {\r\n  a: boolean // required primitive type\r\n  b?: string // optional, different primitive type\r\n}\r\n\r\ndeclare var k: keyof typeof x\r\n\r\nx[k] = true as any\r\n// ^ type error!\r\n```\r\n\r\nHowever, this works:\r\n\r\n```ts\r\ndeclare const x: {\r\n  a: {} // required non-primitive type\r\n  b?: string // optional, different primitive type\r\n}\r\n\r\ndeclare var k: keyof typeof x\r\n\r\nx[k] = true as any // somehow works\r\n```\r\n\r\nThe code in `test-utils` was previously working because it was case 2. After `app.config.idPrefix` was added it became case 1.\r\n\r\nI don't think Vue core needs to change anything as it's mostly a usage issue in `test-utils`. Not sure if there's even a good workaround for this. Maybe this case should just be `// @ts-expect-error`...",
            reactions: {
                url: 'https://api.github.com/repos/vuejs/test-utils/issues/2483/reactions',
                total_count: 0,
                '+1': 0,
                '-1': 0,
                laugh: 0,
                hooray: 0,
                confused: 0,
                heart: 0,
                rocket: 0,
                eyes: 0,
            },
            timeline_url: 'https://api.github.com/repos/vuejs/test-utils/issues/2483/timeline',
            performed_via_github_app: null,
            state_reason: 'completed',
            score: 1.0,
        },
        {
            url: 'https://api.github.com/repos/oxc-project/oxc/issues/3992',
            repository_url: 'https://api.github.com/repos/oxc-project/oxc',
            labels_url: 'https://api.github.com/repos/oxc-project/oxc/issues/3992/labels{/name}',
            comments_url: 'https://api.github.com/repos/oxc-project/oxc/issues/3992/comments',
            events_url: 'https://api.github.com/repos/oxc-project/oxc/issues/3992/events',
            html_url: 'https://github.com/oxc-project/oxc/issues/3992',
            id: 2383320040,
            node_id: 'I_kwDOI7qa7s6ODpPo',
            number: 3992,
            title: 'transformer: missing initializer for TypeScript class constructor arguments with `private` modifier',
            user: {
                login: 'yyx990803',
                id: 499550,
                node_id: 'MDQ6VXNlcjQ5OTU1MA==',
                avatar_url: 'https://avatars.githubusercontent.com/u/499550?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/yyx990803',
                html_url: 'https://github.com/yyx990803',
                followers_url: 'https://api.github.com/users/yyx990803/followers',
                following_url: 'https://api.github.com/users/yyx990803/following{/other_user}',
                gists_url: 'https://api.github.com/users/yyx990803/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/yyx990803/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/yyx990803/subscriptions',
                organizations_url: 'https://api.github.com/users/yyx990803/orgs',
                repos_url: 'https://api.github.com/users/yyx990803/repos',
                events_url: 'https://api.github.com/users/yyx990803/events{/privacy}',
                received_events_url: 'https://api.github.com/users/yyx990803/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [
                {
                    id: 5133997498,
                    node_id: 'LA_kwDOI7qa7s8AAAABMgKVug',
                    url: 'https://api.github.com/repos/oxc-project/oxc/labels/C-bug',
                    name: 'C-bug',
                    color: 'd73a4a',
                    default: false,
                    description: 'Category - Bug',
                },
                {
                    id: 6066433332,
                    node_id: 'LA_kwDOI7qa7s8AAAABaZZtNA',
                    url: 'https://api.github.com/repos/oxc-project/oxc/labels/A-transformer',
                    name: 'A-transformer',
                    color: 'bfdadc',
                    default: false,
                    description: 'Area - Transformer / Transpiler',
                },
            ],
            state: 'closed',
            locked: false,
            assignee: {
                login: 'Dunqing',
                id: 29533304,
                node_id: 'MDQ6VXNlcjI5NTMzMzA0',
                avatar_url: 'https://avatars.githubusercontent.com/u/29533304?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/Dunqing',
                html_url: 'https://github.com/Dunqing',
                followers_url: 'https://api.github.com/users/Dunqing/followers',
                following_url: 'https://api.github.com/users/Dunqing/following{/other_user}',
                gists_url: 'https://api.github.com/users/Dunqing/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/Dunqing/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/Dunqing/subscriptions',
                organizations_url: 'https://api.github.com/users/Dunqing/orgs',
                repos_url: 'https://api.github.com/users/Dunqing/repos',
                events_url: 'https://api.github.com/users/Dunqing/events{/privacy}',
                received_events_url: 'https://api.github.com/users/Dunqing/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            assignees: [
                {
                    login: 'Dunqing',
                    id: 29533304,
                    node_id: 'MDQ6VXNlcjI5NTMzMzA0',
                    avatar_url: 'https://avatars.githubusercontent.com/u/29533304?v=4',
                    gravatar_id: '',
                    url: 'https://api.github.com/users/Dunqing',
                    html_url: 'https://github.com/Dunqing',
                    followers_url: 'https://api.github.com/users/Dunqing/followers',
                    following_url: 'https://api.github.com/users/Dunqing/following{/other_user}',
                    gists_url: 'https://api.github.com/users/Dunqing/gists{/gist_id}',
                    starred_url: 'https://api.github.com/users/Dunqing/starred{/owner}{/repo}',
                    subscriptions_url: 'https://api.github.com/users/Dunqing/subscriptions',
                    organizations_url: 'https://api.github.com/users/Dunqing/orgs',
                    repos_url: 'https://api.github.com/users/Dunqing/repos',
                    events_url: 'https://api.github.com/users/Dunqing/events{/privacy}',
                    received_events_url: 'https://api.github.com/users/Dunqing/received_events',
                    type: 'User',
                    user_view_type: 'public',
                    site_admin: false,
                },
            ],
            milestone: null,
            comments: 0,
            created_at: '2024-07-01T09:26:20Z',
            updated_at: '2024-07-01T16:10:02Z',
            closed_at: '2024-07-01T16:10:02Z',
            author_association: 'NONE',
            active_lock_reason: null,
            body: 'Discovered this when bundling Vue via Rolldown:\r\n\r\nIn\r\n```ts\r\nclass Foo {\r\n  constructor(public foo, private bar) {}\r\n}\r\n```\r\n\r\nOut\r\n```js\r\nclass Foo {\r\n  constructor(foo, bar) {\r\n    this.foo = foo\r\n    // !!! `this.bar = bar` is missing\r\n  }\r\n}\r\n```\r\n\r\nExpected\r\n```js\r\nclass Foo {\r\n  constructor(foo, bar) {\r\n    this.foo = foo\r\n    this.bar = bar\r\n  }\r\n}\r\n```',
            reactions: {
                url: 'https://api.github.com/repos/oxc-project/oxc/issues/3992/reactions',
                total_count: 0,
                '+1': 0,
                '-1': 0,
                laugh: 0,
                hooray: 0,
                confused: 0,
                heart: 0,
                rocket: 0,
                eyes: 0,
            },
            timeline_url: 'https://api.github.com/repos/oxc-project/oxc/issues/3992/timeline',
            performed_via_github_app: null,
            state_reason: 'completed',
            score: 1.0,
        },
        {
            url: 'https://api.github.com/repos/oxc-project/oxc/issues/3993',
            repository_url: 'https://api.github.com/repos/oxc-project/oxc',
            labels_url: 'https://api.github.com/repos/oxc-project/oxc/issues/3993/labels{/name}',
            comments_url: 'https://api.github.com/repos/oxc-project/oxc/issues/3993/comments',
            events_url: 'https://api.github.com/repos/oxc-project/oxc/issues/3993/events',
            html_url: 'https://github.com/oxc-project/oxc/issues/3993',
            id: 2383325368,
            node_id: 'I_kwDOI7qa7s6ODqi4',
            number: 3993,
            title: 'transformer: `declare class` incorrectly preserved as runtime class',
            user: {
                login: 'yyx990803',
                id: 499550,
                node_id: 'MDQ6VXNlcjQ5OTU1MA==',
                avatar_url: 'https://avatars.githubusercontent.com/u/499550?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/yyx990803',
                html_url: 'https://github.com/yyx990803',
                followers_url: 'https://api.github.com/users/yyx990803/followers',
                following_url: 'https://api.github.com/users/yyx990803/following{/other_user}',
                gists_url: 'https://api.github.com/users/yyx990803/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/yyx990803/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/yyx990803/subscriptions',
                organizations_url: 'https://api.github.com/users/yyx990803/orgs',
                repos_url: 'https://api.github.com/users/yyx990803/repos',
                events_url: 'https://api.github.com/users/yyx990803/events{/privacy}',
                received_events_url: 'https://api.github.com/users/yyx990803/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [
                {
                    id: 5133997498,
                    node_id: 'LA_kwDOI7qa7s8AAAABMgKVug',
                    url: 'https://api.github.com/repos/oxc-project/oxc/labels/C-bug',
                    name: 'C-bug',
                    color: 'd73a4a',
                    default: false,
                    description: 'Category - Bug',
                },
                {
                    id: 6066433332,
                    node_id: 'LA_kwDOI7qa7s8AAAABaZZtNA',
                    url: 'https://api.github.com/repos/oxc-project/oxc/labels/A-transformer',
                    name: 'A-transformer',
                    color: 'bfdadc',
                    default: false,
                    description: 'Area - Transformer / Transpiler',
                },
            ],
            state: 'closed',
            locked: false,
            assignee: {
                login: 'Dunqing',
                id: 29533304,
                node_id: 'MDQ6VXNlcjI5NTMzMzA0',
                avatar_url: 'https://avatars.githubusercontent.com/u/29533304?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/Dunqing',
                html_url: 'https://github.com/Dunqing',
                followers_url: 'https://api.github.com/users/Dunqing/followers',
                following_url: 'https://api.github.com/users/Dunqing/following{/other_user}',
                gists_url: 'https://api.github.com/users/Dunqing/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/Dunqing/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/Dunqing/subscriptions',
                organizations_url: 'https://api.github.com/users/Dunqing/orgs',
                repos_url: 'https://api.github.com/users/Dunqing/repos',
                events_url: 'https://api.github.com/users/Dunqing/events{/privacy}',
                received_events_url: 'https://api.github.com/users/Dunqing/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            assignees: [
                {
                    login: 'Dunqing',
                    id: 29533304,
                    node_id: 'MDQ6VXNlcjI5NTMzMzA0',
                    avatar_url: 'https://avatars.githubusercontent.com/u/29533304?v=4',
                    gravatar_id: '',
                    url: 'https://api.github.com/users/Dunqing',
                    html_url: 'https://github.com/Dunqing',
                    followers_url: 'https://api.github.com/users/Dunqing/followers',
                    following_url: 'https://api.github.com/users/Dunqing/following{/other_user}',
                    gists_url: 'https://api.github.com/users/Dunqing/gists{/gist_id}',
                    starred_url: 'https://api.github.com/users/Dunqing/starred{/owner}{/repo}',
                    subscriptions_url: 'https://api.github.com/users/Dunqing/subscriptions',
                    organizations_url: 'https://api.github.com/users/Dunqing/orgs',
                    repos_url: 'https://api.github.com/users/Dunqing/repos',
                    events_url: 'https://api.github.com/users/Dunqing/events{/privacy}',
                    received_events_url: 'https://api.github.com/users/Dunqing/received_events',
                    type: 'User',
                    user_view_type: 'public',
                    site_admin: false,
                },
            ],
            milestone: null,
            comments: 0,
            created_at: '2024-07-01T09:28:44Z',
            updated_at: '2024-07-01T16:09:54Z',
            closed_at: '2024-07-01T16:09:54Z',
            author_association: 'NONE',
            active_lock_reason: null,
            body: 'Encountered this when bundling Vue via Rolldown.\r\n\r\nIn\r\n```ts\r\ndeclare const ReactiveMarkerSymbol: unique symbol\r\n\r\nexport declare class ReactiveMarker {\r\n  private [ReactiveMarkerSymbol]?: void\r\n}\r\n```\r\n\r\nOut\r\n```js\r\nclass ReactiveMarker {\r\n  [ReactiveMarkerSymbol];\r\n}\r\n```\r\n\r\nExpected\r\n```js\r\n// should be removed entirely\r\n```',
            reactions: {
                url: 'https://api.github.com/repos/oxc-project/oxc/issues/3993/reactions',
                total_count: 0,
                '+1': 0,
                '-1': 0,
                laugh: 0,
                hooray: 0,
                confused: 0,
                heart: 0,
                rocket: 0,
                eyes: 0,
            },
            timeline_url: 'https://api.github.com/repos/oxc-project/oxc/issues/3993/timeline',
            performed_via_github_app: null,
            state_reason: 'completed',
            score: 1.0,
        },
        {
            url: 'https://api.github.com/repos/rolldown/rolldown/issues/544',
            repository_url: 'https://api.github.com/repos/rolldown/rolldown',
            labels_url: 'https://api.github.com/repos/rolldown/rolldown/issues/544/labels{/name}',
            comments_url: 'https://api.github.com/repos/rolldown/rolldown/issues/544/comments',
            events_url: 'https://api.github.com/repos/rolldown/rolldown/issues/544/events',
            html_url: 'https://github.com/rolldown/rolldown/issues/544',
            id: 2178204735,
            node_id: 'I_kwDOKVE1Gs6B1MQ_',
            number: 544,
            title: 'Workflow / CI improvements',
            user: {
                login: 'yyx990803',
                id: 499550,
                node_id: 'MDQ6VXNlcjQ5OTU1MA==',
                avatar_url: 'https://avatars.githubusercontent.com/u/499550?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/yyx990803',
                html_url: 'https://github.com/yyx990803',
                followers_url: 'https://api.github.com/users/yyx990803/followers',
                following_url: 'https://api.github.com/users/yyx990803/following{/other_user}',
                gists_url: 'https://api.github.com/users/yyx990803/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/yyx990803/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/yyx990803/subscriptions',
                organizations_url: 'https://api.github.com/users/yyx990803/orgs',
                repos_url: 'https://api.github.com/users/yyx990803/repos',
                events_url: 'https://api.github.com/users/yyx990803/events{/privacy}',
                received_events_url: 'https://api.github.com/users/yyx990803/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [
                {
                    id: 6674160991,
                    node_id: 'LA_kwDOKVE1Gs8AAAABjc-dXw',
                    url: 'https://api.github.com/repos/rolldown/rolldown/labels/scope:%20workflow',
                    name: 'scope: workflow',
                    color: 'EEEEEE',
                    default: false,
                    description: '',
                },
            ],
            state: 'closed',
            locked: false,
            assignee: {
                login: 'Dunqing',
                id: 29533304,
                node_id: 'MDQ6VXNlcjI5NTMzMzA0',
                avatar_url: 'https://avatars.githubusercontent.com/u/29533304?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/Dunqing',
                html_url: 'https://github.com/Dunqing',
                followers_url: 'https://api.github.com/users/Dunqing/followers',
                following_url: 'https://api.github.com/users/Dunqing/following{/other_user}',
                gists_url: 'https://api.github.com/users/Dunqing/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/Dunqing/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/Dunqing/subscriptions',
                organizations_url: 'https://api.github.com/users/Dunqing/orgs',
                repos_url: 'https://api.github.com/users/Dunqing/repos',
                events_url: 'https://api.github.com/users/Dunqing/events{/privacy}',
                received_events_url: 'https://api.github.com/users/Dunqing/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            assignees: [
                {
                    login: 'Dunqing',
                    id: 29533304,
                    node_id: 'MDQ6VXNlcjI5NTMzMzA0',
                    avatar_url: 'https://avatars.githubusercontent.com/u/29533304?v=4',
                    gravatar_id: '',
                    url: 'https://api.github.com/users/Dunqing',
                    html_url: 'https://github.com/Dunqing',
                    followers_url: 'https://api.github.com/users/Dunqing/followers',
                    following_url: 'https://api.github.com/users/Dunqing/following{/other_user}',
                    gists_url: 'https://api.github.com/users/Dunqing/gists{/gist_id}',
                    starred_url: 'https://api.github.com/users/Dunqing/starred{/owner}{/repo}',
                    subscriptions_url: 'https://api.github.com/users/Dunqing/subscriptions',
                    organizations_url: 'https://api.github.com/users/Dunqing/orgs',
                    repos_url: 'https://api.github.com/users/Dunqing/repos',
                    events_url: 'https://api.github.com/users/Dunqing/events{/privacy}',
                    received_events_url: 'https://api.github.com/users/Dunqing/received_events',
                    type: 'User',
                    user_view_type: 'public',
                    site_admin: false,
                },
            ],
            milestone: null,
            comments: 1,
            created_at: '2024-03-11T04:29:14Z',
            updated_at: '2024-06-30T06:13:33Z',
            closed_at: '2024-06-30T06:13:32Z',
            author_association: 'MEMBER',
            active_lock_reason: null,
            body: "Reference oxc's workflows: https://github.com/oxc-project/oxc/tree/main/.github/workflows",
            reactions: {
                url: 'https://api.github.com/repos/rolldown/rolldown/issues/544/reactions',
                total_count: 0,
                '+1': 0,
                '-1': 0,
                laugh: 0,
                hooray: 0,
                confused: 0,
                heart: 0,
                rocket: 0,
                eyes: 0,
            },
            timeline_url: 'https://api.github.com/repos/rolldown/rolldown/issues/544/timeline',
            performed_via_github_app: null,
            state_reason: 'completed',
            score: 1.0,
        },
        {
            url: 'https://api.github.com/repos/youzan/vant/issues/12925',
            repository_url: 'https://api.github.com/repos/youzan/vant',
            labels_url: 'https://api.github.com/repos/youzan/vant/issues/12925/labels{/name}',
            comments_url: 'https://api.github.com/repos/youzan/vant/issues/12925/comments',
            events_url: 'https://api.github.com/repos/youzan/vant/issues/12925/events',
            html_url: 'https://github.com/youzan/vant/issues/12925',
            id: 2343480819,
            node_id: 'I_kwDOBUm3n86Lrq3z',
            number: 12925,
            title: '[Bug Report] Vue ecosystem snapshot update needed',
            user: {
                login: 'yyx990803',
                id: 499550,
                node_id: 'MDQ6VXNlcjQ5OTU1MA==',
                avatar_url: 'https://avatars.githubusercontent.com/u/499550?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/yyx990803',
                html_url: 'https://github.com/yyx990803',
                followers_url: 'https://api.github.com/users/yyx990803/followers',
                following_url: 'https://api.github.com/users/yyx990803/following{/other_user}',
                gists_url: 'https://api.github.com/users/yyx990803/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/yyx990803/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/yyx990803/subscriptions',
                organizations_url: 'https://api.github.com/users/yyx990803/orgs',
                repos_url: 'https://api.github.com/users/yyx990803/repos',
                events_url: 'https://api.github.com/users/yyx990803/events{/privacy}',
                received_events_url: 'https://api.github.com/users/yyx990803/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [
                {
                    id: 3545506243,
                    node_id: 'LA_kwDOBUm3n87TVCHD',
                    url: 'https://api.github.com/repos/youzan/vant/labels/bug:%20need%20confirm',
                    name: 'bug: need confirm',
                    color: 'f9d0c4',
                    default: false,
                    description: '',
                },
            ],
            state: 'closed',
            locked: false,
            assignee: null,
            assignees: [],
            milestone: null,
            comments: 0,
            created_at: '2024-06-10T10:01:35Z',
            updated_at: '2024-06-11T02:47:02Z',
            closed_at: '2024-06-11T02:47:02Z',
            author_association: 'NONE',
            active_lock_reason: null,
            body: '### Reproduction Link\r\n\r\nhttps://github.com/vuejs/ecosystem-ci/actions/runs/9445520695/job/26013308000\r\n\r\n### Vant Version\r\n\r\nlatest main\r\n\r\n### Describe the Bug\r\n\r\nIn Vue core commit https://github.com/vuejs/core/commit/537a571f8cf09dfe0a020e9e8891ecdd351fc3e4 we now always render attributes for form input `value` / `checked` / `selected` (in addition to setting DOM properties)\r\n\r\nThis leads a few snapshot failures in ecosystem-ci for Vant.\r\n\r\n### Reproduce Steps\r\n\r\nSee ecosystem-ci repro link\r\n\r\n### Device / Browser\r\n\r\n_No response_',
            reactions: {
                url: 'https://api.github.com/repos/youzan/vant/issues/12925/reactions',
                total_count: 0,
                '+1': 0,
                '-1': 0,
                laugh: 0,
                hooray: 0,
                confused: 0,
                heart: 0,
                rocket: 0,
                eyes: 0,
            },
            timeline_url: 'https://api.github.com/repos/youzan/vant/issues/12925/timeline',
            performed_via_github_app: null,
            state_reason: 'completed',
            score: 1.0,
        },
        {
            url: 'https://api.github.com/repos/vuetifyjs/vuetify/issues/19979',
            repository_url: 'https://api.github.com/repos/vuetifyjs/vuetify',
            labels_url: 'https://api.github.com/repos/vuetifyjs/vuetify/issues/19979/labels{/name}',
            comments_url: 'https://api.github.com/repos/vuetifyjs/vuetify/issues/19979/comments',
            events_url: 'https://api.github.com/repos/vuetifyjs/vuetify/issues/19979/events',
            html_url: 'https://github.com/vuetifyjs/vuetify/issues/19979',
            id: 2343467369,
            node_id: 'I_kwDOBA0HGM6Lrnlp',
            number: 19979,
            title: '[Bug Report][3.6.8] Type errors revealed by stricter app.provide() type in Vue core',
            user: {
                login: 'yyx990803',
                id: 499550,
                node_id: 'MDQ6VXNlcjQ5OTU1MA==',
                avatar_url: 'https://avatars.githubusercontent.com/u/499550?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/yyx990803',
                html_url: 'https://github.com/yyx990803',
                followers_url: 'https://api.github.com/users/yyx990803/followers',
                following_url: 'https://api.github.com/users/yyx990803/following{/other_user}',
                gists_url: 'https://api.github.com/users/yyx990803/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/yyx990803/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/yyx990803/subscriptions',
                organizations_url: 'https://api.github.com/users/yyx990803/orgs',
                repos_url: 'https://api.github.com/users/yyx990803/repos',
                events_url: 'https://api.github.com/users/yyx990803/events{/privacy}',
                received_events_url: 'https://api.github.com/users/yyx990803/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [
                {
                    id: 440781591,
                    node_id: 'MDU6TGFiZWw0NDA3ODE1OTE=',
                    url: 'https://api.github.com/repos/vuetifyjs/vuetify/labels/T:%20bug',
                    name: 'T: bug',
                    color: 'ee0701',
                    default: false,
                    description: 'Functionality that does not work as intended/expected',
                },
                {
                    id: 1309516847,
                    node_id: 'MDU6TGFiZWwxMzA5NTE2ODQ3',
                    url: 'https://api.github.com/repos/vuetifyjs/vuetify/labels/framework',
                    name: 'framework',
                    color: '26afa2',
                    default: false,
                    description: 'Issues and Feature Requests that have needs framework-wide.',
                },
            ],
            state: 'closed',
            locked: false,
            assignee: {
                login: 'KaelWD',
                id: 16421948,
                node_id: 'MDQ6VXNlcjE2NDIxOTQ4',
                avatar_url: 'https://avatars.githubusercontent.com/u/16421948?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/KaelWD',
                html_url: 'https://github.com/KaelWD',
                followers_url: 'https://api.github.com/users/KaelWD/followers',
                following_url: 'https://api.github.com/users/KaelWD/following{/other_user}',
                gists_url: 'https://api.github.com/users/KaelWD/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/KaelWD/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/KaelWD/subscriptions',
                organizations_url: 'https://api.github.com/users/KaelWD/orgs',
                repos_url: 'https://api.github.com/users/KaelWD/repos',
                events_url: 'https://api.github.com/users/KaelWD/events{/privacy}',
                received_events_url: 'https://api.github.com/users/KaelWD/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            assignees: [
                {
                    login: 'KaelWD',
                    id: 16421948,
                    node_id: 'MDQ6VXNlcjE2NDIxOTQ4',
                    avatar_url: 'https://avatars.githubusercontent.com/u/16421948?v=4',
                    gravatar_id: '',
                    url: 'https://api.github.com/users/KaelWD',
                    html_url: 'https://github.com/KaelWD',
                    followers_url: 'https://api.github.com/users/KaelWD/followers',
                    following_url: 'https://api.github.com/users/KaelWD/following{/other_user}',
                    gists_url: 'https://api.github.com/users/KaelWD/gists{/gist_id}',
                    starred_url: 'https://api.github.com/users/KaelWD/starred{/owner}{/repo}',
                    subscriptions_url: 'https://api.github.com/users/KaelWD/subscriptions',
                    organizations_url: 'https://api.github.com/users/KaelWD/orgs',
                    repos_url: 'https://api.github.com/users/KaelWD/repos',
                    events_url: 'https://api.github.com/users/KaelWD/events{/privacy}',
                    received_events_url: 'https://api.github.com/users/KaelWD/received_events',
                    type: 'User',
                    user_view_type: 'public',
                    site_admin: false,
                },
            ],
            milestone: {
                url: 'https://api.github.com/repos/vuetifyjs/vuetify/milestones/75',
                html_url: 'https://github.com/vuetifyjs/vuetify/milestone/75',
                labels_url: 'https://api.github.com/repos/vuetifyjs/vuetify/milestones/75/labels',
                id: 10994721,
                node_id: 'MI_kwDOBA0HGM4Ap8Qh',
                number: 75,
                title: 'v3.6.x',
                description: '',
                creator: {
                    login: 'johnleider',
                    id: 9064066,
                    node_id: 'MDQ6VXNlcjkwNjQwNjY=',
                    avatar_url: 'https://avatars.githubusercontent.com/u/9064066?v=4',
                    gravatar_id: '',
                    url: 'https://api.github.com/users/johnleider',
                    html_url: 'https://github.com/johnleider',
                    followers_url: 'https://api.github.com/users/johnleider/followers',
                    following_url: 'https://api.github.com/users/johnleider/following{/other_user}',
                    gists_url: 'https://api.github.com/users/johnleider/gists{/gist_id}',
                    starred_url: 'https://api.github.com/users/johnleider/starred{/owner}{/repo}',
                    subscriptions_url: 'https://api.github.com/users/johnleider/subscriptions',
                    organizations_url: 'https://api.github.com/users/johnleider/orgs',
                    repos_url: 'https://api.github.com/users/johnleider/repos',
                    events_url: 'https://api.github.com/users/johnleider/events{/privacy}',
                    received_events_url: 'https://api.github.com/users/johnleider/received_events',
                    type: 'User',
                    user_view_type: 'public',
                    site_admin: false,
                },
                open_issues: 0,
                closed_issues: 155,
                state: 'closed',
                created_at: '2024-04-30T17:34:43Z',
                updated_at: '2024-08-16T10:05:02Z',
                due_on: null,
                closed_at: '2024-08-15T12:38:19Z',
            },
            comments: 0,
            created_at: '2024-06-10T09:55:17Z',
            updated_at: '2024-06-10T12:57:59Z',
            closed_at: '2024-06-10T12:57:58Z',
            author_association: 'CONTRIBUTOR',
            active_lock_reason: null,
            body: '### Environment\r\n**Vuetify Version:** `master`\r\n**Vue Version:** `main` (to be released in 3.4.28)\r\n\r\n### Steps to reproduce\r\nVue core PR https://github.com/vuejs/core/pull/10603 made `app.provide` type-safe and enforce type match on `InjectionKey` and provided value. This reveals two type mismatches in Vuetify src which seem to be legit errors.\r\n\r\n### Expected Behavior\r\nTypes match\r\n\r\n### Actual Behavior\r\nTypes are not matching\r\n\r\n### Reproduction Link\r\n[https://github.com/vuejs/ecosystem-ci/actions/runs/9445520695/job/26013310766](https://github.com/vuejs/ecosystem-ci/actions/runs/9445520695/job/26013310766)\r\n\r\n\r\n<!-- generated by vuetify-issue-helper. DO NOT REMOVE -->',
            reactions: {
                url: 'https://api.github.com/repos/vuetifyjs/vuetify/issues/19979/reactions',
                total_count: 0,
                '+1': 0,
                '-1': 0,
                laugh: 0,
                hooray: 0,
                confused: 0,
                heart: 0,
                rocket: 0,
                eyes: 0,
            },
            timeline_url: 'https://api.github.com/repos/vuetifyjs/vuetify/issues/19979/timeline',
            performed_via_github_app: null,
            state_reason: 'completed',
            score: 1.0,
        },
        {
            url: 'https://api.github.com/repos/vuejs/devtools-v6/issues/2170',
            repository_url: 'https://api.github.com/repos/vuejs/devtools-v6',
            labels_url: 'https://api.github.com/repos/vuejs/devtools-v6/issues/2170/labels{/name}',
            comments_url: 'https://api.github.com/repos/vuejs/devtools-v6/issues/2170/comments',
            events_url: 'https://api.github.com/repos/vuejs/devtools-v6/issues/2170/events',
            html_url: 'https://github.com/vuejs/devtools-v6/issues/2170',
            id: 2327555962,
            node_id: 'I_kwDOAXcMps6Ku696',
            number: 2170,
            title: '[PSA] Devtools Next for Vue 3 + Vite users',
            user: {
                login: 'yyx990803',
                id: 499550,
                node_id: 'MDQ6VXNlcjQ5OTU1MA==',
                avatar_url: 'https://avatars.githubusercontent.com/u/499550?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/yyx990803',
                html_url: 'https://github.com/yyx990803',
                followers_url: 'https://api.github.com/users/yyx990803/followers',
                following_url: 'https://api.github.com/users/yyx990803/following{/other_user}',
                gists_url: 'https://api.github.com/users/yyx990803/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/yyx990803/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/yyx990803/subscriptions',
                organizations_url: 'https://api.github.com/users/yyx990803/orgs',
                repos_url: 'https://api.github.com/users/yyx990803/repos',
                events_url: 'https://api.github.com/users/yyx990803/events{/privacy}',
                received_events_url: 'https://api.github.com/users/yyx990803/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [],
            state: 'open',
            locked: false,
            assignee: null,
            assignees: [],
            milestone: null,
            comments: 1,
            created_at: '2024-05-31T10:59:20Z',
            updated_at: '2024-06-08T03:42:19Z',
            closed_at: null,
            author_association: 'MEMBER',
            active_lock_reason: null,
            body: 'We are aware that the latest 6.6 version has a number of issues and are looking into it.\r\n\r\nIn the meanwhile, if you are using Vue 3 + Vite, consider using [devtools-next](https://devtools-next.vuejs.org/) instead. It is being more actively developed. For now it is only available as a Vite plugin or an Electron app, but will eventually replace the current extension in the future.',
            reactions: {
                url: 'https://api.github.com/repos/vuejs/devtools-v6/issues/2170/reactions',
                total_count: 1,
                '+1': 1,
                '-1': 0,
                laugh: 0,
                hooray: 0,
                confused: 0,
                heart: 0,
                rocket: 0,
                eyes: 0,
            },
            timeline_url: 'https://api.github.com/repos/vuejs/devtools-v6/issues/2170/timeline',
            performed_via_github_app: null,
            state_reason: null,
            score: 1.0,
        },
        {
            url: 'https://api.github.com/repos/vuetifyjs/vuetify/issues/19617',
            repository_url: 'https://api.github.com/repos/vuetifyjs/vuetify',
            labels_url: 'https://api.github.com/repos/vuetifyjs/vuetify/issues/19617/labels{/name}',
            comments_url: 'https://api.github.com/repos/vuetifyjs/vuetify/issues/19617/comments',
            events_url: 'https://api.github.com/repos/vuetifyjs/vuetify/issues/19617/events',
            html_url: 'https://github.com/vuetifyjs/vuetify/issues/19617',
            id: 2244047548,
            node_id: 'I_kwDOBA0HGM6FwXK8',
            number: 19617,
            title: '[Bug Report][master branch] Possible bug where string values are passed as transition hooks',
            user: {
                login: 'yyx990803',
                id: 499550,
                node_id: 'MDQ6VXNlcjQ5OTU1MA==',
                avatar_url: 'https://avatars.githubusercontent.com/u/499550?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/yyx990803',
                html_url: 'https://github.com/yyx990803',
                followers_url: 'https://api.github.com/users/yyx990803/followers',
                following_url: 'https://api.github.com/users/yyx990803/following{/other_user}',
                gists_url: 'https://api.github.com/users/yyx990803/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/yyx990803/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/yyx990803/subscriptions',
                organizations_url: 'https://api.github.com/users/yyx990803/orgs',
                repos_url: 'https://api.github.com/users/yyx990803/repos',
                events_url: 'https://api.github.com/users/yyx990803/events{/privacy}',
                received_events_url: 'https://api.github.com/users/yyx990803/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [
                {
                    id: 1035625446,
                    node_id: 'MDU6TGFiZWwxMDM1NjI1NDQ2',
                    url: 'https://api.github.com/repos/vuetifyjs/vuetify/labels/upstream',
                    name: 'upstream',
                    color: 'ce6355',
                    default: false,
                    description: 'Problem with a third party library that we may have to work around',
                },
                {
                    id: 1318950451,
                    node_id: 'MDU6TGFiZWwxMzE4OTUwNDUx',
                    url: 'https://api.github.com/repos/vuetifyjs/vuetify/labels/S:%20triage',
                    name: 'S: triage',
                    color: 'eeeeee',
                    default: false,
                    description: '',
                },
            ],
            state: 'closed',
            locked: false,
            assignee: {
                login: 'KaelWD',
                id: 16421948,
                node_id: 'MDQ6VXNlcjE2NDIxOTQ4',
                avatar_url: 'https://avatars.githubusercontent.com/u/16421948?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/KaelWD',
                html_url: 'https://github.com/KaelWD',
                followers_url: 'https://api.github.com/users/KaelWD/followers',
                following_url: 'https://api.github.com/users/KaelWD/following{/other_user}',
                gists_url: 'https://api.github.com/users/KaelWD/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/KaelWD/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/KaelWD/subscriptions',
                organizations_url: 'https://api.github.com/users/KaelWD/orgs',
                repos_url: 'https://api.github.com/users/KaelWD/repos',
                events_url: 'https://api.github.com/users/KaelWD/events{/privacy}',
                received_events_url: 'https://api.github.com/users/KaelWD/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            assignees: [
                {
                    login: 'KaelWD',
                    id: 16421948,
                    node_id: 'MDQ6VXNlcjE2NDIxOTQ4',
                    avatar_url: 'https://avatars.githubusercontent.com/u/16421948?v=4',
                    gravatar_id: '',
                    url: 'https://api.github.com/users/KaelWD',
                    html_url: 'https://github.com/KaelWD',
                    followers_url: 'https://api.github.com/users/KaelWD/followers',
                    following_url: 'https://api.github.com/users/KaelWD/following{/other_user}',
                    gists_url: 'https://api.github.com/users/KaelWD/gists{/gist_id}',
                    starred_url: 'https://api.github.com/users/KaelWD/starred{/owner}{/repo}',
                    subscriptions_url: 'https://api.github.com/users/KaelWD/subscriptions',
                    organizations_url: 'https://api.github.com/users/KaelWD/orgs',
                    repos_url: 'https://api.github.com/users/KaelWD/repos',
                    events_url: 'https://api.github.com/users/KaelWD/events{/privacy}',
                    received_events_url: 'https://api.github.com/users/KaelWD/received_events',
                    type: 'User',
                    user_view_type: 'public',
                    site_admin: false,
                },
            ],
            milestone: null,
            comments: 2,
            created_at: '2024-04-15T15:58:04Z',
            updated_at: '2024-04-16T08:29:27Z',
            closed_at: '2024-04-16T08:29:08Z',
            author_association: 'CONTRIBUTOR',
            active_lock_reason: null,
            body: '### Environment\r\n**Vuetify Version:** latest master\r\n**Vue Version:** latest main (soon to be released 3.4.22)\r\n**Browsers:** Chrome 123.0.0.0\r\n**OS:** Mac OS 10.15.7\r\n\r\n### Steps to reproduce\r\nThis is discovered in Vue core ecosystem-ci after merging https://github.com/vuejs/core/pull/8953\r\n\r\nSee linked ecosystem-ci log for the test cases affected.\r\n\r\n### Expected Behavior\r\nNo string values passed to onBeforeEnter hook\r\n\r\n### Actual Behavior\r\nString values are passed to onBeforeEnter hook\r\n\r\n### Reproduction Link\r\n[https://github.com/vuejs/ecosystem-ci/actions/runs/8692149431/job/23836077334](https://github.com/vuejs/ecosystem-ci/actions/runs/8692149431/job/23836077334)\r\n\r\n\r\n<!-- generated by vuetify-issue-helper. DO NOT REMOVE -->',
            reactions: {
                url: 'https://api.github.com/repos/vuetifyjs/vuetify/issues/19617/reactions',
                total_count: 0,
                '+1': 0,
                '-1': 0,
                laugh: 0,
                hooray: 0,
                confused: 0,
                heart: 0,
                rocket: 0,
                eyes: 0,
            },
            timeline_url: 'https://api.github.com/repos/vuetifyjs/vuetify/issues/19617/timeline',
            performed_via_github_app: null,
            state_reason: 'not_planned',
            score: 1.0,
        },
        {
            url: 'https://api.github.com/repos/sapphi-red/parallel-js-plugin-experiment/issues/5',
            repository_url: 'https://api.github.com/repos/sapphi-red/parallel-js-plugin-experiment',
            labels_url: 'https://api.github.com/repos/sapphi-red/parallel-js-plugin-experiment/issues/5/labels{/name}',
            comments_url: 'https://api.github.com/repos/sapphi-red/parallel-js-plugin-experiment/issues/5/comments',
            events_url: 'https://api.github.com/repos/sapphi-red/parallel-js-plugin-experiment/issues/5/events',
            html_url: 'https://github.com/sapphi-red/parallel-js-plugin-experiment/issues/5',
            id: 2217972341,
            node_id: 'I_kwDOLfNmcs6EM5J1',
            number: 5,
            title: 'Thoughts on thread-unsafe plugin usage patterns',
            user: {
                login: 'yyx990803',
                id: 499550,
                node_id: 'MDQ6VXNlcjQ5OTU1MA==',
                avatar_url: 'https://avatars.githubusercontent.com/u/499550?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/yyx990803',
                html_url: 'https://github.com/yyx990803',
                followers_url: 'https://api.github.com/users/yyx990803/followers',
                following_url: 'https://api.github.com/users/yyx990803/following{/other_user}',
                gists_url: 'https://api.github.com/users/yyx990803/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/yyx990803/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/yyx990803/subscriptions',
                organizations_url: 'https://api.github.com/users/yyx990803/orgs',
                repos_url: 'https://api.github.com/users/yyx990803/repos',
                events_url: 'https://api.github.com/users/yyx990803/events{/privacy}',
                received_events_url: 'https://api.github.com/users/yyx990803/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [],
            state: 'open',
            locked: false,
            assignee: null,
            assignees: [],
            milestone: null,
            comments: 9,
            created_at: '2024-04-01T10:13:47Z',
            updated_at: '2024-04-09T10:59:36Z',
            closed_at: null,
            author_association: 'NONE',
            active_lock_reason: null,
            body: "Context: https://github.com/sapphi-red/parallel-js-plugin-experiment/blob/main/research-for-design.md\r\n\r\n- It's great that many common caes can be solved with `module.meta`!\r\n\r\n- Agree that we should make `chunk.meta` work like `module.meta` and maybe also need something like `currentBuild.meta` (exposed via plugin `this` context maybe?), essentially officially supported mechanisms for storing thread-safe data.\r\n\r\n- Regarding `plugin-vue` - we do have the option to re-design plugin-vue to be more threading-friendly. But for now, cache-miss is not the end of the world.\r\n\r\n- We don't need to worry about `@rollup/plugin-node-resolve` or `@rollup/plugin-commonjs` - these are built-in features of Rolldown so they are not going to be needed anyway. Similar for `@rollup/plugin-replace`, `vite:esbuild`, `vite:esbuild-transpile` etc.\r\n\r\n---\r\n\r\n> How can we handle (A7) pattern in parallel plugins? Also for builtin rust plugins.\r\n\r\nThis seems to be the biggest blocker. I think we may need to identify cases of:\r\n\r\n1. Using `api` for exposing / mutating serializable options\r\n2. Using `api` for injecting functions (e.g. `sveltePreprocess`)\r\n\r\n(1) Seems to be straightforward, but (2) is going to be problematic. Can you link to some examples of how Qwik uses this pattern?\r\n\r\n> How can we handle (A8) pattern?\r\n\r\nI think we'll have to enforce serializable config formats (I believe both PostCSS and Babel supports that, i.e. specifying plugins via package names so the loading of the plugin is deferred to be controlled by the tools) - luckily should be less of an issue when users move towards Lightning CSS and Oxc for the transforms?\r\n\r\nRe simple functions in configs - we might be able to serialize that? But maybe this will just be a hard limitation.\r\n\r\n> How can we handle (A9) pattern?\r\n\r\n`vite-plugin-inspect` may have to be implemented as a built-in. This should not be common.\r\n\r\n> How can Vite use Rolldown? ((A10) pattern)\r\n\r\nNot sure if I understand the issue with (A10a) - couldn't Rolldown just ignore those hooks like Rollup does? For example, `configResolved` is called by Vite during config resolution and don't really need to be parallelized.\r\n\r\nMy general thought on Vite internal plugins is that Rolldown will expose a \"plugin container\" API - initially this can be a Node.js API where Vite core use to replace the current `PluginContainer` implementation, but at a later stage we introduce a small Rust core in Vite which uses Rolldown as a dependency - the `PluginContainer` will then be used via Rust APIs and have as many internal plugins Rustified as possible.\r\n\r\n> How well does https://github.com/vitejs/vite/pull/16089 work with parallel plugins?\r\n\r\nWe will need input from @patak-dev and @sheremet-va on this.",
            reactions: {
                url: 'https://api.github.com/repos/sapphi-red/parallel-js-plugin-experiment/issues/5/reactions',
                total_count: 0,
                '+1': 0,
                '-1': 0,
                laugh: 0,
                hooray: 0,
                confused: 0,
                heart: 0,
                rocket: 0,
                eyes: 0,
            },
            timeline_url: 'https://api.github.com/repos/sapphi-red/parallel-js-plugin-experiment/issues/5/timeline',
            performed_via_github_app: null,
            state_reason: null,
            score: 1.0,
        },
        {
            url: 'https://api.github.com/repos/rolldown/rolldown/issues/543',
            repository_url: 'https://api.github.com/repos/rolldown/rolldown',
            labels_url: 'https://api.github.com/repos/rolldown/rolldown/issues/543/labels{/name}',
            comments_url: 'https://api.github.com/repos/rolldown/rolldown/issues/543/comments',
            events_url: 'https://api.github.com/repos/rolldown/rolldown/issues/543/events',
            html_url: 'https://github.com/rolldown/rolldown/issues/543',
            id: 2178202005,
            node_id: 'I_kwDOKVE1Gs6B1LmV',
            number: 543,
            title: 'Migrate from Yarn / Lerna to pnpm',
            user: {
                login: 'yyx990803',
                id: 499550,
                node_id: 'MDQ6VXNlcjQ5OTU1MA==',
                avatar_url: 'https://avatars.githubusercontent.com/u/499550?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/yyx990803',
                html_url: 'https://github.com/yyx990803',
                followers_url: 'https://api.github.com/users/yyx990803/followers',
                following_url: 'https://api.github.com/users/yyx990803/following{/other_user}',
                gists_url: 'https://api.github.com/users/yyx990803/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/yyx990803/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/yyx990803/subscriptions',
                organizations_url: 'https://api.github.com/users/yyx990803/orgs',
                repos_url: 'https://api.github.com/users/yyx990803/repos',
                events_url: 'https://api.github.com/users/yyx990803/events{/privacy}',
                received_events_url: 'https://api.github.com/users/yyx990803/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [
                {
                    id: 6674160991,
                    node_id: 'LA_kwDOKVE1Gs8AAAABjc-dXw',
                    url: 'https://api.github.com/repos/rolldown/rolldown/labels/scope:%20workflow',
                    name: 'scope: workflow',
                    color: 'EEEEEE',
                    default: false,
                    description: '',
                },
            ],
            state: 'closed',
            locked: false,
            assignee: {
                login: 'underfin',
                id: 14008915,
                node_id: 'MDQ6VXNlcjE0MDA4OTE1',
                avatar_url: 'https://avatars.githubusercontent.com/u/14008915?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/underfin',
                html_url: 'https://github.com/underfin',
                followers_url: 'https://api.github.com/users/underfin/followers',
                following_url: 'https://api.github.com/users/underfin/following{/other_user}',
                gists_url: 'https://api.github.com/users/underfin/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/underfin/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/underfin/subscriptions',
                organizations_url: 'https://api.github.com/users/underfin/orgs',
                repos_url: 'https://api.github.com/users/underfin/repos',
                events_url: 'https://api.github.com/users/underfin/events{/privacy}',
                received_events_url: 'https://api.github.com/users/underfin/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            assignees: [
                {
                    login: 'underfin',
                    id: 14008915,
                    node_id: 'MDQ6VXNlcjE0MDA4OTE1',
                    avatar_url: 'https://avatars.githubusercontent.com/u/14008915?v=4',
                    gravatar_id: '',
                    url: 'https://api.github.com/users/underfin',
                    html_url: 'https://github.com/underfin',
                    followers_url: 'https://api.github.com/users/underfin/followers',
                    following_url: 'https://api.github.com/users/underfin/following{/other_user}',
                    gists_url: 'https://api.github.com/users/underfin/gists{/gist_id}',
                    starred_url: 'https://api.github.com/users/underfin/starred{/owner}{/repo}',
                    subscriptions_url: 'https://api.github.com/users/underfin/subscriptions',
                    organizations_url: 'https://api.github.com/users/underfin/orgs',
                    repos_url: 'https://api.github.com/users/underfin/repos',
                    events_url: 'https://api.github.com/users/underfin/events{/privacy}',
                    received_events_url: 'https://api.github.com/users/underfin/received_events',
                    type: 'User',
                    user_view_type: 'public',
                    site_admin: false,
                },
            ],
            milestone: null,
            comments: 9,
            created_at: '2024-03-11T04:26:55Z',
            updated_at: '2024-03-19T19:49:39Z',
            closed_at: '2024-03-14T17:53:04Z',
            author_association: 'MEMBER',
            active_lock_reason: null,
            body: 'Lerna was used for legacy reasons but is actually no longer necessary.\r\n\r\nYarn was also used for legacy reasons - old versions of pnpm had issues in Docker, but should no longer be an issue according to @Brooooooklyn. We should investigate whether moving to pnpm would improve CI time.',
            reactions: {
                url: 'https://api.github.com/repos/rolldown/rolldown/issues/543/reactions',
                total_count: 5,
                '+1': 5,
                '-1': 0,
                laugh: 0,
                hooray: 0,
                confused: 0,
                heart: 0,
                rocket: 0,
                eyes: 0,
            },
            timeline_url: 'https://api.github.com/repos/rolldown/rolldown/issues/543/timeline',
            performed_via_github_app: null,
            state_reason: 'completed',
            score: 1.0,
        },
        {
            url: 'https://api.github.com/repos/rolldown/rolldown/issues/545',
            repository_url: 'https://api.github.com/repos/rolldown/rolldown',
            labels_url: 'https://api.github.com/repos/rolldown/rolldown/issues/545/labels{/name}',
            comments_url: 'https://api.github.com/repos/rolldown/rolldown/issues/545/comments',
            events_url: 'https://api.github.com/repos/rolldown/rolldown/issues/545/events',
            html_url: 'https://github.com/rolldown/rolldown/issues/545',
            id: 2178213174,
            node_id: 'I_kwDOKVE1Gs6B1OU2',
            number: 545,
            title: 'Improve Node package / binding structure',
            user: {
                login: 'yyx990803',
                id: 499550,
                node_id: 'MDQ6VXNlcjQ5OTU1MA==',
                avatar_url: 'https://avatars.githubusercontent.com/u/499550?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/yyx990803',
                html_url: 'https://github.com/yyx990803',
                followers_url: 'https://api.github.com/users/yyx990803/followers',
                following_url: 'https://api.github.com/users/yyx990803/following{/other_user}',
                gists_url: 'https://api.github.com/users/yyx990803/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/yyx990803/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/yyx990803/subscriptions',
                organizations_url: 'https://api.github.com/users/yyx990803/orgs',
                repos_url: 'https://api.github.com/users/yyx990803/repos',
                events_url: 'https://api.github.com/users/yyx990803/events{/privacy}',
                received_events_url: 'https://api.github.com/users/yyx990803/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [
                {
                    id: 6655200606,
                    node_id: 'LA_kwDOKVE1Gs8AAAABjK5NXg',
                    url: 'https://api.github.com/repos/rolldown/rolldown/labels/scope:%20npm%20package',
                    name: 'scope: npm package',
                    color: 'EEEEEE',
                    default: false,
                    description: '',
                },
            ],
            state: 'closed',
            locked: false,
            assignee: {
                login: 'Brooooooklyn',
                id: 3468483,
                node_id: 'MDQ6VXNlcjM0Njg0ODM=',
                avatar_url: 'https://avatars.githubusercontent.com/u/3468483?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/Brooooooklyn',
                html_url: 'https://github.com/Brooooooklyn',
                followers_url: 'https://api.github.com/users/Brooooooklyn/followers',
                following_url: 'https://api.github.com/users/Brooooooklyn/following{/other_user}',
                gists_url: 'https://api.github.com/users/Brooooooklyn/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/Brooooooklyn/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/Brooooooklyn/subscriptions',
                organizations_url: 'https://api.github.com/users/Brooooooklyn/orgs',
                repos_url: 'https://api.github.com/users/Brooooooklyn/repos',
                events_url: 'https://api.github.com/users/Brooooooklyn/events{/privacy}',
                received_events_url: 'https://api.github.com/users/Brooooooklyn/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            assignees: [
                {
                    login: 'Brooooooklyn',
                    id: 3468483,
                    node_id: 'MDQ6VXNlcjM0Njg0ODM=',
                    avatar_url: 'https://avatars.githubusercontent.com/u/3468483?v=4',
                    gravatar_id: '',
                    url: 'https://api.github.com/users/Brooooooklyn',
                    html_url: 'https://github.com/Brooooooklyn',
                    followers_url: 'https://api.github.com/users/Brooooooklyn/followers',
                    following_url: 'https://api.github.com/users/Brooooooklyn/following{/other_user}',
                    gists_url: 'https://api.github.com/users/Brooooooklyn/gists{/gist_id}',
                    starred_url: 'https://api.github.com/users/Brooooooklyn/starred{/owner}{/repo}',
                    subscriptions_url: 'https://api.github.com/users/Brooooooklyn/subscriptions',
                    organizations_url: 'https://api.github.com/users/Brooooooklyn/orgs',
                    repos_url: 'https://api.github.com/users/Brooooooklyn/repos',
                    events_url: 'https://api.github.com/users/Brooooooklyn/events{/privacy}',
                    received_events_url: 'https://api.github.com/users/Brooooooklyn/received_events',
                    type: 'User',
                    user_view_type: 'public',
                    site_admin: false,
                },
                {
                    login: 'hyf0',
                    id: 49502170,
                    node_id: 'MDQ6VXNlcjQ5NTAyMTcw',
                    avatar_url: 'https://avatars.githubusercontent.com/u/49502170?v=4',
                    gravatar_id: '',
                    url: 'https://api.github.com/users/hyf0',
                    html_url: 'https://github.com/hyf0',
                    followers_url: 'https://api.github.com/users/hyf0/followers',
                    following_url: 'https://api.github.com/users/hyf0/following{/other_user}',
                    gists_url: 'https://api.github.com/users/hyf0/gists{/gist_id}',
                    starred_url: 'https://api.github.com/users/hyf0/starred{/owner}{/repo}',
                    subscriptions_url: 'https://api.github.com/users/hyf0/subscriptions',
                    organizations_url: 'https://api.github.com/users/hyf0/orgs',
                    repos_url: 'https://api.github.com/users/hyf0/repos',
                    events_url: 'https://api.github.com/users/hyf0/events{/privacy}',
                    received_events_url: 'https://api.github.com/users/hyf0/received_events',
                    type: 'User',
                    user_view_type: 'public',
                    site_admin: false,
                },
            ],
            milestone: null,
            comments: 0,
            created_at: '2024-03-11T04:38:38Z',
            updated_at: '2024-03-11T16:12:36Z',
            closed_at: '2024-03-11T16:12:36Z',
            author_association: 'MEMBER',
            active_lock_reason: null,
            body: 'Currently `@rolldown/node` and `@rolldown/node-binding` are two separate packages with src in two different locations (`packges/node` and `crates/rolldown_binding`).\r\n\r\nNow that we have acquired the `rolldown` npm package, the plan is to merge both into a single npm package.\r\n\r\n- This package will contain both the CLI and directly depends on platform-specific bindings as optional dependencies (including the wasm binding)\r\n- src for this package will be in `packages/rolldown`\r\n- `crates/rolldown_binding` needs to adjust napi-rs build to target `packages/rolldown`\r\n- `@rolldown/node` and `@rolldown/node-binding` packages will be deprecated as they are no longer needed',
            reactions: {
                url: 'https://api.github.com/repos/rolldown/rolldown/issues/545/reactions',
                total_count: 0,
                '+1': 0,
                '-1': 0,
                laugh: 0,
                hooray: 0,
                confused: 0,
                heart: 0,
                rocket: 0,
                eyes: 0,
            },
            timeline_url: 'https://api.github.com/repos/rolldown/rolldown/issues/545/timeline',
            performed_via_github_app: null,
            state_reason: 'completed',
            score: 1.0,
        },
        {
            url: 'https://api.github.com/repos/rolldown/rolldown/issues/439',
            repository_url: 'https://api.github.com/repos/rolldown/rolldown',
            labels_url: 'https://api.github.com/repos/rolldown/rolldown/issues/439/labels{/name}',
            comments_url: 'https://api.github.com/repos/rolldown/rolldown/issues/439/comments',
            events_url: 'https://api.github.com/repos/rolldown/rolldown/issues/439/events',
            html_url: 'https://github.com/rolldown/rolldown/issues/439',
            id: 2171430667,
            node_id: 'I_kwDOKVE1Gs6BbWcL',
            number: 439,
            title: 'Node binding typing relies on rollup types',
            user: {
                login: 'yyx990803',
                id: 499550,
                node_id: 'MDQ6VXNlcjQ5OTU1MA==',
                avatar_url: 'https://avatars.githubusercontent.com/u/499550?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/yyx990803',
                html_url: 'https://github.com/yyx990803',
                followers_url: 'https://api.github.com/users/yyx990803/followers',
                following_url: 'https://api.github.com/users/yyx990803/following{/other_user}',
                gists_url: 'https://api.github.com/users/yyx990803/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/yyx990803/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/yyx990803/subscriptions',
                organizations_url: 'https://api.github.com/users/yyx990803/orgs',
                repos_url: 'https://api.github.com/users/yyx990803/repos',
                events_url: 'https://api.github.com/users/yyx990803/events{/privacy}',
                received_events_url: 'https://api.github.com/users/yyx990803/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [
                {
                    id: 6655200606,
                    node_id: 'LA_kwDOKVE1Gs8AAAABjK5NXg',
                    url: 'https://api.github.com/repos/rolldown/rolldown/labels/scope:%20npm%20package',
                    name: 'scope: npm package',
                    color: 'EEEEEE',
                    default: false,
                    description: '',
                },
            ],
            state: 'closed',
            locked: false,
            assignee: null,
            assignees: [],
            milestone: null,
            comments: 1,
            created_at: '2024-03-06T12:49:05Z',
            updated_at: '2024-03-06T20:12:47Z',
            closed_at: '2024-03-06T20:12:47Z',
            author_association: 'MEMBER',
            active_lock_reason: null,
            body: "But `rollup` isn't installed as a dependency, so we lose type inference in most places.\r\n\r\nSince we don't really want `rollup` as a dependency (only its types), we either need a way to bundle rollup types or have to copy the relevant types over. (The latter probably necessary as that also allows us to provide more accurate types in cases where there are properties / APIs that we do not yet support)",
            reactions: {
                url: 'https://api.github.com/repos/rolldown/rolldown/issues/439/reactions',
                total_count: 0,
                '+1': 0,
                '-1': 0,
                laugh: 0,
                hooray: 0,
                confused: 0,
                heart: 0,
                rocket: 0,
                eyes: 0,
            },
            timeline_url: 'https://api.github.com/repos/rolldown/rolldown/issues/439/timeline',
            performed_via_github_app: null,
            state_reason: 'completed',
            score: 1.0,
        },
        {
            url: 'https://api.github.com/repos/vercel/turborepo/issues/2562',
            repository_url: 'https://api.github.com/repos/vercel/turborepo',
            labels_url: 'https://api.github.com/repos/vercel/turborepo/issues/2562/labels{/name}',
            comments_url: 'https://api.github.com/repos/vercel/turborepo/issues/2562/comments',
            events_url: 'https://api.github.com/repos/vercel/turborepo/issues/2562/events',
            html_url: 'https://github.com/vercel/turborepo/issues/2562',
            id: 1433372879,
            node_id: 'I_kwDOGKvm485Vb4jP',
            number: 2562,
            title: '[Turbopack] Use `hmr_to_commit` data in HMR benchmark',
            user: {
                login: 'yyx990803',
                id: 499550,
                node_id: 'MDQ6VXNlcjQ5OTU1MA==',
                avatar_url: 'https://avatars.githubusercontent.com/u/499550?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/yyx990803',
                html_url: 'https://github.com/yyx990803',
                followers_url: 'https://api.github.com/users/yyx990803/followers',
                following_url: 'https://api.github.com/users/yyx990803/following{/other_user}',
                gists_url: 'https://api.github.com/users/yyx990803/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/yyx990803/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/yyx990803/subscriptions',
                organizations_url: 'https://api.github.com/users/yyx990803/orgs',
                repos_url: 'https://api.github.com/users/yyx990803/repos',
                events_url: 'https://api.github.com/users/yyx990803/events{/privacy}',
                received_events_url: 'https://api.github.com/users/yyx990803/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [
                {
                    id: 5489024651,
                    node_id: 'LA_kwDOGKvm488AAAABRyveiw',
                    url: 'https://api.github.com/repos/vercel/turborepo/labels/linear:%20turbopack',
                    name: 'linear: turbopack',
                    color: '48307C',
                    default: false,
                    description: '',
                },
                {
                    id: 5848530919,
                    node_id: 'LA_kwDOGKvm488AAAABXJl_5w',
                    url: 'https://api.github.com/repos/vercel/turborepo/labels/owned-by:%20turbopack',
                    name: 'owned-by: turbopack',
                    color: 'ededed',
                    default: false,
                    description: '',
                },
            ],
            state: 'open',
            locked: false,
            assignee: null,
            assignees: [],
            milestone: null,
            comments: 0,
            created_at: '2022-11-02T15:41:20Z',
            updated_at: '2024-02-22T03:38:49Z',
            closed_at: null,
            author_association: 'NONE',
            active_lock_reason: null,
            body: "### Which project is this feature idea for?\n\nTurbopack\n\n### Describe the feature you'd like to request\n\nWhen running the `next-dev` benchmarks, I noticed that the `hmr_to_eval` and `hmr_to_commit` metrics are reporting the same numbers for Vite (~101ms)*, while for Turbopack it shows significant difference (~15ms vs ~54ms).\r\n\r\nSince the eval-to-commit cost is shown to be significant in the Turbopack case, the `hmr_to_eval` benchmark for Vite seem to be flawed. I am not sure about the exact cause - this could be due to different HMR mechanisms, but there is definitely something wrong: the eval time and commit time should not be the same.\r\n\r\nGiven this, comparisons / claims based on the `hmr_to_eval` metrics should also be considered flawed. If there is no satisfactory solution to fix `hmr_to_eval` for Vite, then my suggestion is to use `hmr_to_commit` for comparisons instead. It is IMO also the more reasonable metrics to focus on since it better reflects HMR performance perceived by the user.\r\n\r\n\\* The stats are gathered on M1 mbp with [this PR to use SWC for Vite](https://github.com/vercel/turbo/pull/2561) applied.\n\n### Describe the solution you'd like\n\n- Use `hmr_to_commit` as the metrics for comparing HMR performance, or at least include it alongside `hmr_to_eval` for reference.\r\n\r\n- Update [public benchmarks](https://github.com/vercel/turbo/blob/main/docs/pages/pack/docs/benchmarks.mdx) accordingly.\n\n### Describe alternatives you've considered\n\nIdentify why `hmr_to_eval` and `hmr_to_commit` are showing identical numbers for Vite.\n\n<sub>[PACK-2501](https://linear.app/vercel/issue/PACK-2501/[turbopack]-use-hmr-to-commit-data-in-hmr-benchmark)</sub>",
            reactions: {
                url: 'https://api.github.com/repos/vercel/turborepo/issues/2562/reactions',
                total_count: 16,
                '+1': 0,
                '-1': 0,
                laugh: 0,
                hooray: 0,
                confused: 0,
                heart: 16,
                rocket: 0,
                eyes: 0,
            },
            timeline_url: 'https://api.github.com/repos/vercel/turborepo/issues/2562/timeline',
            performed_via_github_app: null,
            state_reason: null,
            score: 1.0,
        },
        {
            url: 'https://api.github.com/repos/rollup/rollup/issues/5377',
            repository_url: 'https://api.github.com/repos/rollup/rollup',
            labels_url: 'https://api.github.com/repos/rollup/rollup/issues/5377/labels{/name}',
            comments_url: 'https://api.github.com/repos/rollup/rollup/issues/5377/comments',
            events_url: 'https://api.github.com/repos/rollup/rollup/issues/5377/events',
            html_url: 'https://github.com/rollup/rollup/issues/5377',
            id: 2117668653,
            node_id: 'I_kwDOAh_Tpc5-OQ8t',
            number: 5377,
            title: 'CJS re-export regression with externalLiveBindings: false',
            user: {
                login: 'yyx990803',
                id: 499550,
                node_id: 'MDQ6VXNlcjQ5OTU1MA==',
                avatar_url: 'https://avatars.githubusercontent.com/u/499550?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/yyx990803',
                html_url: 'https://github.com/yyx990803',
                followers_url: 'https://api.github.com/users/yyx990803/followers',
                following_url: 'https://api.github.com/users/yyx990803/following{/other_user}',
                gists_url: 'https://api.github.com/users/yyx990803/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/yyx990803/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/yyx990803/subscriptions',
                organizations_url: 'https://api.github.com/users/yyx990803/orgs',
                repos_url: 'https://api.github.com/users/yyx990803/repos',
                events_url: 'https://api.github.com/users/yyx990803/events{/privacy}',
                received_events_url: 'https://api.github.com/users/yyx990803/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [
                {
                    id: 211689302,
                    node_id: 'MDU6TGFiZWwyMTE2ODkzMDI=',
                    url: 'https://api.github.com/repos/rollup/rollup/labels/t%C2%B9%20%F0%9F%90%9E%20bug',
                    name: 't¹ 🐞 bug',
                    color: 'F44336',
                    default: false,
                    description: '',
                },
            ],
            state: 'closed',
            locked: false,
            assignee: {
                login: 'TrickyPi',
                id: 33021497,
                node_id: 'MDQ6VXNlcjMzMDIxNDk3',
                avatar_url: 'https://avatars.githubusercontent.com/u/33021497?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/TrickyPi',
                html_url: 'https://github.com/TrickyPi',
                followers_url: 'https://api.github.com/users/TrickyPi/followers',
                following_url: 'https://api.github.com/users/TrickyPi/following{/other_user}',
                gists_url: 'https://api.github.com/users/TrickyPi/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/TrickyPi/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/TrickyPi/subscriptions',
                organizations_url: 'https://api.github.com/users/TrickyPi/orgs',
                repos_url: 'https://api.github.com/users/TrickyPi/repos',
                events_url: 'https://api.github.com/users/TrickyPi/events{/privacy}',
                received_events_url: 'https://api.github.com/users/TrickyPi/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            assignees: [
                {
                    login: 'TrickyPi',
                    id: 33021497,
                    node_id: 'MDQ6VXNlcjMzMDIxNDk3',
                    avatar_url: 'https://avatars.githubusercontent.com/u/33021497?v=4',
                    gravatar_id: '',
                    url: 'https://api.github.com/users/TrickyPi',
                    html_url: 'https://github.com/TrickyPi',
                    followers_url: 'https://api.github.com/users/TrickyPi/followers',
                    following_url: 'https://api.github.com/users/TrickyPi/following{/other_user}',
                    gists_url: 'https://api.github.com/users/TrickyPi/gists{/gist_id}',
                    starred_url: 'https://api.github.com/users/TrickyPi/starred{/owner}{/repo}',
                    subscriptions_url: 'https://api.github.com/users/TrickyPi/subscriptions',
                    organizations_url: 'https://api.github.com/users/TrickyPi/orgs',
                    repos_url: 'https://api.github.com/users/TrickyPi/repos',
                    events_url: 'https://api.github.com/users/TrickyPi/events{/privacy}',
                    received_events_url: 'https://api.github.com/users/TrickyPi/received_events',
                    type: 'User',
                    user_view_type: 'public',
                    site_admin: false,
                },
            ],
            milestone: null,
            comments: 1,
            created_at: '2024-02-05T04:46:20Z',
            updated_at: '2024-02-15T06:10:30Z',
            closed_at: '2024-02-15T05:17:01Z',
            author_association: 'CONTRIBUTOR',
            active_lock_reason: null,
            body: "### Rollup Version\n\n^4.9.3\n\n### Operating System (or Browser)\n\nany\n\n### Node Version (if applicable)\n\n_No response_\n\n### Link To Reproduction\n\nhttps://rollupjs.org/repl/?version=4.9.6&shareable=JTdCJTIyZXhhbXBsZSUyMiUzQW51bGwlMkMlMjJtb2R1bGVzJTIyJTNBJTVCJTdCJTIyY29kZSUyMiUzQSUyMmV4cG9ydCUyMColMjBmcm9tJTIwJ3Z1ZSclMjIlMkMlMjJpc0VudHJ5JTIyJTNBdHJ1ZSUyQyUyMm5hbWUlMjIlM0ElMjJtYWluLmpzJTIyJTdEJTVEJTJDJTIyb3B0aW9ucyUyMiUzQSU3QiUyMm91dHB1dCUyMiUzQSU3QiUyMmV4dGVybmFsTGl2ZUJpbmRpbmdzJTIyJTNBdHJ1ZSUyQyUyMmZvcm1hdCUyMiUzQSUyMmNqcyUyMiU3RCUyQyUyMnRyZWVzaGFrZSUyMiUzQXRydWUlN0QlN0Q=\n\n### Expected Behaviour\n\nGenerated code can be used with named imports from es modules in Node.js.\n\n### Actual Behaviour\n\nCode generated before #5313:\r\n\r\n```js\r\n// out.js\r\nconst vue = require('vue');\r\n\r\nObject.keys(vue).forEach(function (k) {\r\n  if (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) exports[k] = vue[k];\r\n});\r\n```\r\n\r\nAfter #5313:\r\n\r\n```js\r\n// out.js\r\nconst vue = require('vue');\r\n\r\nObject.keys(vue).forEach(function (k) {\r\n  if (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) k === '__proto__' ? Object.defineProperty(exports, k, {\r\n    enumerable: true,\r\n    value: vue[k]\r\n  }) : exports[k] = vue[k];\r\n});\r\n```\r\n\r\nWhen imported from an es module, e.g.\r\n\r\n```js\r\n// test.mjs\r\nimport { computed } from 'vue'\r\nconsole.log(computed)\r\n```\r\n\r\nCode generated before #5313 is compatible with Node.js' cjs re-exports detection (via [cjs-module-lexer](https://github.com/nodejs/cjs-module-lexer?tab=readme-ov-file#transpiler-re-exports)), but code after is not, causing the esm usage to fail.",
            reactions: {
                url: 'https://api.github.com/repos/rollup/rollup/issues/5377/reactions',
                total_count: 0,
                '+1': 0,
                '-1': 0,
                laugh: 0,
                hooray: 0,
                confused: 0,
                heart: 0,
                rocket: 0,
                eyes: 0,
            },
            timeline_url: 'https://api.github.com/repos/rollup/rollup/issues/5377/timeline',
            performed_via_github_app: null,
            state_reason: 'completed',
            score: 1.0,
        },
        {
            url: 'https://api.github.com/repos/vitejs/vite/issues/1309',
            repository_url: 'https://api.github.com/repos/vitejs/vite',
            labels_url: 'https://api.github.com/repos/vitejs/vite/issues/1309/labels{/name}',
            comments_url: 'https://api.github.com/repos/vitejs/vite/issues/1309/comments',
            events_url: 'https://api.github.com/repos/vitejs/vite/issues/1309/events',
            html_url: 'https://github.com/vitejs/vite/issues/1309',
            id: 777569758,
            node_id: 'MDU6SXNzdWU3Nzc1Njk3NTg=',
            number: 1309,
            title: 'Persistent Cache',
            user: {
                login: 'yyx990803',
                id: 499550,
                node_id: 'MDQ6VXNlcjQ5OTU1MA==',
                avatar_url: 'https://avatars.githubusercontent.com/u/499550?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/yyx990803',
                html_url: 'https://github.com/yyx990803',
                followers_url: 'https://api.github.com/users/yyx990803/followers',
                following_url: 'https://api.github.com/users/yyx990803/following{/other_user}',
                gists_url: 'https://api.github.com/users/yyx990803/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/yyx990803/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/yyx990803/subscriptions',
                organizations_url: 'https://api.github.com/users/yyx990803/orgs',
                repos_url: 'https://api.github.com/users/yyx990803/repos',
                events_url: 'https://api.github.com/users/yyx990803/events{/privacy}',
                received_events_url: 'https://api.github.com/users/yyx990803/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [
                {
                    id: 2002170924,
                    node_id: 'MDU6TGFiZWwyMDAyMTcwOTI0',
                    url: 'https://api.github.com/repos/vitejs/vite/labels/enhancement',
                    name: 'enhancement',
                    color: 'a2eeef',
                    default: true,
                    description: 'New feature or request',
                },
                {
                    id: 2818076081,
                    node_id: 'MDU6TGFiZWwyODE4MDc2MDgx',
                    url: 'https://api.github.com/repos/vitejs/vite/labels/p4-important',
                    name: 'p4-important',
                    color: 'E81E2E',
                    default: false,
                    description: 'Violate documented behavior or significantly improves performance (priority)',
                },
                {
                    id: 5250028295,
                    node_id: 'LA_kwDOD1jqbs8AAAABOO0TBw',
                    url: 'https://api.github.com/repos/vitejs/vite/labels/performance',
                    name: 'performance',
                    color: '24D9D7',
                    default: false,
                    description: 'Performance related enhancement',
                },
            ],
            state: 'open',
            locked: false,
            assignee: null,
            assignees: [],
            milestone: null,
            comments: 30,
            created_at: '2021-01-03T04:13:45Z',
            updated_at: '2024-02-06T02:17:25Z',
            closed_at: null,
            author_association: 'MEMBER',
            active_lock_reason: null,
            body: 'https://github.com/vitejs/vite/issues/1207#issuecomment-753564633\r\n\r\nVite\'s current biggest performance bottleneck is first page load with large amount of modules. This is mostly caused by congestion at the browser network layer, since every module results in a full HTTP GET request on fresh server start.\r\n\r\nTo improve this, we can dump the in memory transform cache to disk on server close, and "hydrate" the module graph on next server start (the hydration should only fill in the cache for files with still fresh `mtimeMs`). The cache can be dumped in one file so it should be relatively fast to deal with. This allows the server to directly send 304s even on a restart.',
            reactions: {
                url: 'https://api.github.com/repos/vitejs/vite/issues/1309/reactions',
                total_count: 163,
                '+1': 123,
                '-1': 0,
                laugh: 0,
                hooray: 0,
                confused: 0,
                heart: 40,
                rocket: 0,
                eyes: 0,
            },
            timeline_url: 'https://api.github.com/repos/vitejs/vite/issues/1309/timeline',
            performed_via_github_app: null,
            state_reason: null,
            score: 1.0,
        },
        {
            url: 'https://api.github.com/repos/vuejs/devtools-next/issues/118',
            repository_url: 'https://api.github.com/repos/vuejs/devtools-next',
            labels_url: 'https://api.github.com/repos/vuejs/devtools-next/issues/118/labels{/name}',
            comments_url: 'https://api.github.com/repos/vuejs/devtools-next/issues/118/comments',
            events_url: 'https://api.github.com/repos/vuejs/devtools-next/issues/118/events',
            html_url: 'https://github.com/vuejs/devtools-next/issues/118',
            id: 2060692109,
            node_id: 'I_kwDOKOOZ_c5606qN',
            number: 118,
            title: 'Improve Component inspector target selection UX',
            user: {
                login: 'yyx990803',
                id: 499550,
                node_id: 'MDQ6VXNlcjQ5OTU1MA==',
                avatar_url: 'https://avatars.githubusercontent.com/u/499550?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/yyx990803',
                html_url: 'https://github.com/yyx990803',
                followers_url: 'https://api.github.com/users/yyx990803/followers',
                following_url: 'https://api.github.com/users/yyx990803/following{/other_user}',
                gists_url: 'https://api.github.com/users/yyx990803/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/yyx990803/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/yyx990803/subscriptions',
                organizations_url: 'https://api.github.com/users/yyx990803/orgs',
                repos_url: 'https://api.github.com/users/yyx990803/repos',
                events_url: 'https://api.github.com/users/yyx990803/events{/privacy}',
                received_events_url: 'https://api.github.com/users/yyx990803/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [],
            state: 'closed',
            locked: false,
            assignee: {
                login: 'webfansplz',
                id: 22515951,
                node_id: 'MDQ6VXNlcjIyNTE1OTUx',
                avatar_url: 'https://avatars.githubusercontent.com/u/22515951?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/webfansplz',
                html_url: 'https://github.com/webfansplz',
                followers_url: 'https://api.github.com/users/webfansplz/followers',
                following_url: 'https://api.github.com/users/webfansplz/following{/other_user}',
                gists_url: 'https://api.github.com/users/webfansplz/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/webfansplz/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/webfansplz/subscriptions',
                organizations_url: 'https://api.github.com/users/webfansplz/orgs',
                repos_url: 'https://api.github.com/users/webfansplz/repos',
                events_url: 'https://api.github.com/users/webfansplz/events{/privacy}',
                received_events_url: 'https://api.github.com/users/webfansplz/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            assignees: [
                {
                    login: 'webfansplz',
                    id: 22515951,
                    node_id: 'MDQ6VXNlcjIyNTE1OTUx',
                    avatar_url: 'https://avatars.githubusercontent.com/u/22515951?v=4',
                    gravatar_id: '',
                    url: 'https://api.github.com/users/webfansplz',
                    html_url: 'https://github.com/webfansplz',
                    followers_url: 'https://api.github.com/users/webfansplz/followers',
                    following_url: 'https://api.github.com/users/webfansplz/following{/other_user}',
                    gists_url: 'https://api.github.com/users/webfansplz/gists{/gist_id}',
                    starred_url: 'https://api.github.com/users/webfansplz/starred{/owner}{/repo}',
                    subscriptions_url: 'https://api.github.com/users/webfansplz/subscriptions',
                    organizations_url: 'https://api.github.com/users/webfansplz/orgs',
                    repos_url: 'https://api.github.com/users/webfansplz/repos',
                    events_url: 'https://api.github.com/users/webfansplz/events{/privacy}',
                    received_events_url: 'https://api.github.com/users/webfansplz/received_events',
                    type: 'User',
                    user_view_type: 'public',
                    site_admin: false,
                },
            ],
            milestone: null,
            comments: 1,
            created_at: '2023-12-30T09:26:21Z',
            updated_at: '2024-01-07T01:44:52Z',
            closed_at: '2024-01-02T14:55:17Z',
            author_association: 'MEMBER',
            active_lock_reason: null,
            body: 'When clicking the "target" button to select components on the page to inspect:\r\n\r\n<img width="314" alt="Screenshot 2023-12-30 at 5 12 31 PM" src="https://github.com/vuejs/devtools-next/assets/499550/053716e2-6626-4a2f-92a1-3d52a750fb52">\r\n\r\n- The devtools should be minimized after clicking the button. Otherwise it covers components that need to be selected.\r\n- When selecting components, the highlighting seems to be a bit off compared to when hovering over the component tree in the inspector, see video below:\r\n\r\nhttps://github.com/vuejs/devtools-next/assets/499550/56415650-54e9-40d6-9f51-f799f9896ed0\r\n\r\n',
            reactions: {
                url: 'https://api.github.com/repos/vuejs/devtools-next/issues/118/reactions',
                total_count: 1,
                '+1': 0,
                '-1': 0,
                laugh: 0,
                hooray: 0,
                confused: 0,
                heart: 0,
                rocket: 0,
                eyes: 1,
            },
            timeline_url: 'https://api.github.com/repos/vuejs/devtools-next/issues/118/timeline',
            performed_via_github_app: null,
            state_reason: 'completed',
            score: 1.0,
        },
        {
            url: 'https://api.github.com/repos/jsdom/jsdom/issues/3372',
            repository_url: 'https://api.github.com/repos/jsdom/jsdom',
            labels_url: 'https://api.github.com/repos/jsdom/jsdom/issues/3372/labels{/name}',
            comments_url: 'https://api.github.com/repos/jsdom/jsdom/issues/3372/comments',
            events_url: 'https://api.github.com/repos/jsdom/jsdom/issues/3372/events',
            html_url: 'https://github.com/jsdom/jsdom/issues/3372',
            id: 1242491721,
            node_id: 'I_kwDOAAdNeM5KDutJ',
            number: 3372,
            title: 'Cannot set certain element style properties to empty',
            user: {
                login: 'yyx990803',
                id: 499550,
                node_id: 'MDQ6VXNlcjQ5OTU1MA==',
                avatar_url: 'https://avatars.githubusercontent.com/u/499550?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/yyx990803',
                html_url: 'https://github.com/yyx990803',
                followers_url: 'https://api.github.com/users/yyx990803/followers',
                following_url: 'https://api.github.com/users/yyx990803/following{/other_user}',
                gists_url: 'https://api.github.com/users/yyx990803/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/yyx990803/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/yyx990803/subscriptions',
                organizations_url: 'https://api.github.com/users/yyx990803/orgs',
                repos_url: 'https://api.github.com/users/yyx990803/repos',
                events_url: 'https://api.github.com/users/yyx990803/events{/privacy}',
                received_events_url: 'https://api.github.com/users/yyx990803/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [
                {
                    id: 116055,
                    node_id: 'MDU6TGFiZWwxMTYwNTU=',
                    url: 'https://api.github.com/repos/jsdom/jsdom/labels/css',
                    name: 'css',
                    color: '02d7e1',
                    default: false,
                    description: null,
                },
            ],
            state: 'closed',
            locked: false,
            assignee: null,
            assignees: [],
            milestone: null,
            comments: 1,
            created_at: '2022-05-20T01:28:24Z',
            updated_at: '2023-12-28T13:26:46Z',
            closed_at: '2023-12-28T13:26:46Z',
            author_association: 'NONE',
            active_lock_reason: null,
            body: "### Basic info:\r\n\r\n- **Node.js version:** 16.13.2\r\n- **jsdom version:** 19.0.0\r\n\r\n### Minimal reproduction case\r\n\r\nThis works as expected:\r\n\r\n```js\r\nconst el = document.createElement('div')\r\nel.style.margin = '10px'\r\nconsole.log(el.style.margin) // '10px'\r\n\r\nel.style.margin = ''\r\nconsole.log(el.style.margin) // ''\r\n```\r\n\r\nThis does **NOT**:\r\n\r\n```js\r\nconst el = document.createElement('div')\r\nel.style.marginLeft = '10px'\r\nconsole.log(el.style.marginLeft) // '10px'\r\n\r\nel.style.marginLeft = '20px'\r\nconsole.log(el.style.marginLeft) // '20px'\r\n\r\nel.style.marginLeft = ''\r\nconsole.log(el.style.marginLeft) // '20px'\r\n```\r\n\r\nNote after setting `marginLeft` to empty, the value on `style` is still `'20px'`.\r\n\r\n### How does similar code behave in browsers?\r\n\r\nYou can just paste the code in the browser console to witness the expected behavior: `el.style.marginLeft` should return empty string.",
            reactions: {
                url: 'https://api.github.com/repos/jsdom/jsdom/issues/3372/reactions',
                total_count: 9,
                '+1': 9,
                '-1': 0,
                laugh: 0,
                hooray: 0,
                confused: 0,
                heart: 0,
                rocket: 0,
                eyes: 0,
            },
            timeline_url: 'https://api.github.com/repos/jsdom/jsdom/issues/3372/timeline',
            performed_via_github_app: null,
            state_reason: 'completed',
            score: 1.0,
        },
        {
            url: 'https://api.github.com/repos/vuejs/core/issues/4',
            repository_url: 'https://api.github.com/repos/vuejs/core',
            labels_url: 'https://api.github.com/repos/vuejs/core/issues/4/labels{/name}',
            comments_url: 'https://api.github.com/repos/vuejs/core/issues/4/comments',
            events_url: 'https://api.github.com/repos/vuejs/core/issues/4/events',
            html_url: 'https://github.com/vuejs/core/issues/4',
            id: 368298272,
            node_id: 'MDU6SXNzdWUzNjgyOTgyNzI=',
            number: 4,
            title: 'Class API',
            user: {
                login: 'yyx990803',
                id: 499550,
                node_id: 'MDQ6VXNlcjQ5OTU1MA==',
                avatar_url: 'https://avatars.githubusercontent.com/u/499550?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/yyx990803',
                html_url: 'https://github.com/yyx990803',
                followers_url: 'https://api.github.com/users/yyx990803/followers',
                following_url: 'https://api.github.com/users/yyx990803/following{/other_user}',
                gists_url: 'https://api.github.com/users/yyx990803/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/yyx990803/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/yyx990803/subscriptions',
                organizations_url: 'https://api.github.com/users/yyx990803/orgs',
                repos_url: 'https://api.github.com/users/yyx990803/repos',
                events_url: 'https://api.github.com/users/yyx990803/events{/privacy}',
                received_events_url: 'https://api.github.com/users/yyx990803/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [],
            state: 'closed',
            locked: true,
            assignee: null,
            assignees: [],
            milestone: null,
            comments: 42,
            created_at: '2018-10-09T16:36:35Z',
            updated_at: '2023-11-17T00:19:39Z',
            closed_at: '2019-02-25T23:05:07Z',
            author_association: 'MEMBER',
            active_lock_reason: null,
            body: "This is a reference of the current implemented version and open to discussion.\r\n\r\n**Update: don't know since when but latest Chrome Canary now enables class fields by default, so we can already play with the following API without a transpiler.**\r\n\r\nPlain ES usage:\r\n\r\n``` js\r\nimport { h, Component } from '@vue/renderer-dom'\r\n\r\nclass App extends Component {\r\n  static props = {\r\n    msg: String\r\n  }\r\n\r\n  // data\r\n  count = 0\r\n\r\n  // lifecycle\r\n  created() {\r\n    console.log(this.count)\r\n  }\r\n\r\n  // getters are converted to computed properties\r\n  get plusOne() {\r\n    return this.count + 1\r\n  }\r\n  \r\n  // a method\r\n  increment() {\r\n    this.count++\r\n  }\r\n\r\n  render(props) {\r\n    return h('div', [\r\n      h('span', this.count),\r\n      h('span', props.msg,\r\n      h('button', {\r\n        // methods are auto-bound when they are accessed via the render proxy\r\n        onClick: this.increment\r\n      }, 'increment')\r\n    ])\r\n  }\r\n}\r\n```\r\n\r\nTS Usage:\r\n\r\n``` ts\r\nimport { h, Component, ComponentWatchOptions } from '@vue/renderer-dom'\r\n\r\ninterface Props {\r\n  msg: string\r\n}\r\n\r\ninterface Data {\r\n  count: number\r\n}\r\n\r\nclass App extends Component<Props, Data> {\r\n  static props = {\r\n    msg: String\r\n  }\r\n  \r\n  // data fields\r\n  count: number = 0\r\n\r\n  // ComponentWatchOptions type is only needed if `this` inference\r\n  // is needed inside options, e.g. in watch callbacks\r\n  static watch: ComponentWatchOptions<App> {\r\n    count(value) {\r\n      console.log(value)\r\n    }\r\n  }\r\n\r\n  created() {\r\n    console.log(this.count)\r\n  }\r\n\r\n  get plusOne() {\r\n    return this.count + 1\r\n  }\r\n\r\n  increment() {\r\n    this.count++\r\n  }\r\n\r\n  render(props) {\r\n    // ...\r\n  }\r\n}\r\n```",
            reactions: {
                url: 'https://api.github.com/repos/vuejs/core/issues/4/reactions',
                total_count: 0,
                '+1': 0,
                '-1': 0,
                laugh: 0,
                hooray: 0,
                confused: 0,
                heart: 0,
                rocket: 0,
                eyes: 0,
            },
            timeline_url: 'https://api.github.com/repos/vuejs/core/issues/4/timeline',
            performed_via_github_app: null,
            state_reason: 'completed',
            score: 1.0,
        },
        {
            url: 'https://api.github.com/repos/vuejs/core/issues/23',
            repository_url: 'https://api.github.com/repos/vuejs/core',
            labels_url: 'https://api.github.com/repos/vuejs/core/issues/23/labels{/name}',
            comments_url: 'https://api.github.com/repos/vuejs/core/issues/23/comments',
            events_url: 'https://api.github.com/repos/vuejs/core/issues/23/events',
            html_url: 'https://github.com/vuejs/core/issues/23',
            id: 419764094,
            node_id: 'MDU6SXNzdWU0MTk3NjQwOTQ=',
            number: 23,
            title: '[Abandoned] API for React Hooks like logic composition',
            user: {
                login: 'yyx990803',
                id: 499550,
                node_id: 'MDQ6VXNlcjQ5OTU1MA==',
                avatar_url: 'https://avatars.githubusercontent.com/u/499550?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/yyx990803',
                html_url: 'https://github.com/yyx990803',
                followers_url: 'https://api.github.com/users/yyx990803/followers',
                following_url: 'https://api.github.com/users/yyx990803/following{/other_user}',
                gists_url: 'https://api.github.com/users/yyx990803/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/yyx990803/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/yyx990803/subscriptions',
                organizations_url: 'https://api.github.com/users/yyx990803/orgs',
                repos_url: 'https://api.github.com/users/yyx990803/repos',
                events_url: 'https://api.github.com/users/yyx990803/events{/privacy}',
                received_events_url: 'https://api.github.com/users/yyx990803/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [],
            state: 'closed',
            locked: true,
            assignee: null,
            assignees: [],
            milestone: null,
            comments: 15,
            created_at: '2019-03-12T01:56:14Z',
            updated_at: '2023-11-17T00:19:38Z',
            closed_at: '2019-03-20T10:22:14Z',
            author_association: 'MEMBER',
            active_lock_reason: null,
            body: "**Note:** this has been split into two separate RFCs: #24 & #25\r\n\r\n---\r\n\r\n- Start Date: 03-05-2019\r\n- Target Major Version: 2.x & 3.x\r\n- Reference Issues: N/A\r\n- Implementation PR: N/A\r\n\r\n# Summary\r\n\r\nA set of React-hooks-inspired APIs for composing and reusing stateful logic across components.\r\n\r\n# Basic example\r\n\r\n## In Object API\r\n\r\n```js\r\nimport { value, computed, watch, useMounted, useDestroyed } from 'vue'\r\n\r\nexport default {\r\n  created() {\r\n    // value returns a value \"ref\" that has a .value property\r\n    const count = value(0)\r\n\r\n    // computed returns a computed \"ref\" with a read-only .value property\r\n    const plusOne = computed(() => count.value + 1)\r\n\r\n    // refs can be watched directly (or explicitly with `() => count.value`)\r\n    watch(count, (count, oldCount) => {\r\n      console.log(`count changed to: ${count}`)\r\n    })\r\n\r\n    watch(plusOne, countPlusOne => {\r\n      console.log(`count plus one changed to: ${countPlusOne}`)\r\n    })\r\n\r\n    useMounted(() => {\r\n      console.log('mounted')\r\n    })\r\n\r\n    useDestroyed(() => {\r\n      console.log('destroyed')\r\n    })\r\n\r\n    // bind refs as properties to the instance. This exposes\r\n    // this.count as a writable data property and this.plusOne as a read-only\r\n    // computed property\r\n    return {\r\n      count,\r\n      plusOne\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n## In Class API\r\n\r\nUsage in a Class-based API would be exactly the same:\r\n\r\n``` js\r\nimport Vue, { useMounted } from 'vue'\r\n\r\nexport default class MyComponent extends Vue {\r\n  created() {\r\n    useMounted(() => {\r\n      console.log('mounted')\r\n    })\r\n  }\r\n}\r\n```\r\n\r\n# Motivation\r\n\r\n- React hooks like composition, but fits Vue's idiomatic usage\r\n- A more composable replacement for Mixins\r\n\r\n# Detailed design\r\n\r\n## Summary\r\n\r\nThis proposal consists of three parts:\r\n\r\n1. A set of APIs centered around reactivity, e.g. `value`, `computed` and `watch`. These will be part of the `@vue/observer` package, and re-exported in the main `vue` package. These APIs can be used anywhere and isn't particularly bound to the usage outlined in this proposal, however they are quintessential in making this proposal work.\r\n\r\n2. A set of call-site constrained APIs that registers additional lifecycle hooks for the \"current component\", e.g. `useMounted`. These functions can only be called inside the `created()` lifecycle hook of a component.\r\n\r\n3. The ability for the `created()` lifecycle hook to return an object of additional properties to expose on the component instance.\r\n\r\n## Reactivity APIs\r\n\r\nIn Vue 2.x, we already have the `observable` API for creating standalone reactive objects. Assuming we can return an object of additional properties to expose on `this` from `created()`, we can achieve the following:\r\n\r\n``` js\r\nimport { observable } from 'vue'\r\n\r\nconst App = {\r\n  created() {\r\n    const state = observable({\r\n      count: 0\r\n    })\r\n\r\n    const increment = () => {\r\n      state.count++\r\n    }\r\n\r\n    // exposed on `this`\r\n    return {\r\n      state,\r\n      increment\r\n    }\r\n  },\r\n  template: `\r\n    <button @click=\"increment\">{{ state.count }}</button>\r\n  `\r\n}\r\n```\r\n\r\nThe above is a contrived example just to demonstrate how it could work. In practice, this is intended mainly for encapsulating and reusing logic much more complex than a simple counter.\r\n\r\n### Value Container\r\n\r\nNote in the above example we had to expose an object (so that Vue can register the dependency via the property access during render) even though what we are really exposing is just a number. We can use the `value` API to create a container object for a single value, called a \"ref\". A ref is simply a reactive object with a writable `value` property that holds the actual value:\r\n\r\n``` js\r\nimport { value } from 'vue'\r\n\r\nconst countRef = value(0)\r\n\r\n// read the value\r\nconsole.log(countRef.value) // 0\r\n\r\n// mutate the value\r\ncountRef.value++\r\n```\r\n\r\nThe reason for using a container object is so that our code can have a persistent reference to a value that may be mutated over time.\r\n\r\nA value ref is very similar to a plain reactive object with only the `.value` property. It is primarily used for holding primitive values, but the value can also be a deeply nested object, array or anything that Vue can observe. Deep access are tracked just like typical reactive objects. The main difference is that when a ref is returned as part of the return object in `created()`, it is bound as a direct property on the component instance:\r\n\r\n``` js\r\nimport { value } from 'vue'\r\n\r\nconst App = {\r\n  created() {\r\n    return {\r\n      count: value(0)\r\n    }\r\n  },\r\n  template: `\r\n    <button @click=\"count++\">{{ count }}</button>\r\n  `,\r\n}\r\n```\r\n\r\nA ref binding exposes the value directly, so the template can reference it directly as `count`. It is also writable - note that the click handler can directly do `count++`. (In comparison, non-ref bindings returned from `created()` are readonly).\r\n\r\n### Computed State\r\n\r\nIn addition to writable value refs, we can also create standalone computed refs:\r\n\r\n``` js\r\nimport { value, computed } from 'vue'\r\n\r\nconst count = value(0)\r\nconst countPlusOne = computed(() => count.value + 1)\r\n\r\nconsole.log(countPlusOne.value) // 1\r\ncount.value++\r\nconsole.log(countPlusOne.value) // 2\r\n```\r\n\r\nComputed refs are readonly. Assigning to its `value` property will result in an error.\r\n\r\n### Watchers\r\n\r\nAll `.value` access are reactive, and can be tracked with the standalone `watch` API.\r\n\r\n``` js\r\nimport { value, computed, watch } from 'vue'\r\n\r\nconst count = value(0)\r\nconst double = computed(() => count.value * 2)\r\n\r\n// watch and re-run the effect\r\nwatch(() => {\r\n  console.log('count is: ', count.value)\r\n})\r\n// -> count is: 0\r\n\r\n// 1st argument (the getter) can return a value, and the 2nd\r\n// argument (the callback) only fires when returned value changes\r\nwatch(() => count.value + 1, value => {\r\n  console.log('count + 1 is: ', value)\r\n})\r\n// -> count + 1 is: 1\r\n\r\n// can also watch a ref directly\r\nwatch(double, value => {\r\n  console.log('double the count is: ', value)\r\n})\r\n// -> double the count is: 0\r\n\r\ncount.value++\r\n// -> count is: 1\r\n// -> count + 1 is: 2\r\n// -> double the count is: 2\r\n```\r\n\r\nNote that unlike `this.$watch` in 2.x, `watch` are immediate by default (defaults to `{ immediate: true }`) unless a 3rd options argument with `{ lazy: true }` is passed:\r\n\r\n``` js\r\nwatch(\r\n  () => count.value + 1,\r\n  () => {\r\n    console.log(`count changed`)\r\n  },\r\n  { lazy: true }\r\n)\r\n```\r\n\r\nThe callback can also return a cleanup function which gets called every time when the watcher is about to re-run, or when the watcher is stopped:\r\n\r\n``` js\r\nwatch(someRef, value => {\r\n  const token = performAsyncOperation(value)\r\n  return () => {\r\n    token.cancel()\r\n  }\r\n})\r\n```\r\n\r\nA watch returns a stop handle:\r\n\r\n``` js\r\nconst stop = watch(...)\r\n\r\n// stop watching\r\nstop()\r\n```\r\n\r\nWatchers created inside a component's `created()` hook are automatically stopped when the owner component is destroyed.\r\n\r\n## Lifecycle Hooks\r\n\r\nFor each existing lifecycle hook (except `beforeCreate` and `created`), there will be an equivalent `useXXX` API. These APIs can only be called inside the `created()` hook of a component. The prefix `use` is an indication of the call-site constraint.\r\n\r\n``` js\r\nimport { useMounted, useUpdated, useDestroyed } from 'vue'\r\n\r\nexport default {\r\n  created() {\r\n    useMounted(() => {\r\n      console.log('mounted')\r\n    })\r\n\r\n    useUpdated(() => {\r\n      console.log('updated')\r\n    })\r\n\r\n    useDestroyed(() => {\r\n      console.log('destroyed')\r\n    })\r\n  }\r\n}\r\n```\r\n\r\nUnlike React Hooks, `created` is called only once, so these calls are not subject to call order and can be conditional.\r\n\r\n`useXXX` methods automatically detects the current component whose `setup()` is being called. The instance is also passed into the registered lifecycle hook as the argument. This means they can easily be extracted and reused across multiple components:\r\n\r\n``` js\r\nimport { useMounted } from 'vue'\r\n\r\nconst useSharedLogic = () => {\r\n  useMounted(vm => {\r\n    console.log(`hello from component ${vm.$options.name}`)\r\n  })\r\n}\r\n\r\nconst CompA = {\r\n  name: 'CompA',\r\n  created() {\r\n    useSharedLogic()\r\n  }\r\n}\r\n\r\nconst CompB = {\r\n  name: 'CompB',\r\n  created() {\r\n    useSharedLogic()\r\n  }\r\n}\r\n```\r\n\r\n## A More Practical Example\r\n\r\nLet's take the example from [React Hooks Documentation](https://reactjs.org/docs/hooks-custom.html). Here's the equivalent in Vue's idiomatic API:\r\n\r\n``` js\r\nexport default {\r\n  props: ['id'],\r\n  data() {\r\n    return {\r\n      isOnline: null\r\n    }\r\n  },\r\n  created() {\r\n    ChatAPI.subscribeToFriendStatus(this.id, this.handleStatusChange)\r\n  },\r\n  destroyed() {\r\n    ChatAPI.unsubscribeFromFriendStatus(this.id, this.handleStatusChange)\r\n  },\r\n  watch: {\r\n    id: (newId, oldId) => {\r\n      ChatAPI.unsubscribeFromFriendStatus(oldId, this.handleStatusChange)\r\n      ChatAPI.subscribeToFriendStatus(newId, this.handleStatusChange)\r\n    }\r\n  },\r\n  methods: {\r\n    handleStatusChange(status) {\r\n      this.isOnline = status\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nAnd here's the equivalent using the APIs introduced in this proposal:\r\n\r\n``` js\r\nimport { value, computed, watch } from 'vue'\r\n\r\nexport default {\r\n  props: ['id'],\r\n  created() {\r\n    const isOnline = value(null)\r\n\r\n    function handleStatusChange(status) {\r\n      isOnline.value = status\r\n    }\r\n\r\n    watch(() => this.id, id => {\r\n      // this is called immediately and then very time id changes\r\n      ChatAPI.subscribeToFriendStatus(id, handleStatusChange)\r\n      return () => {\r\n        // this is called every time id changes and when the component\r\n        // is unmounted (which causes the watcher to be stopped)\r\n        ChatAPI.unsubscribeFromFriendStatus(id, handleStatusChange)\r\n      }\r\n    })\r\n\r\n    return {\r\n      isOnline\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nNote that because the `watch` function is immediate by default and also auto-stopped on component unmount, it achieves the effect of `watch`, `created` and `destroyed` options in one call (similar to `useEffect` in React Hooks).\r\n\r\nThe logic can also be extracted into a reusable function (like a custom hook):\r\n\r\n``` js\r\nimport { value, computed, watch } from 'vue'\r\n\r\nfunction useFriendStatus(idRef) {\r\n  const isOnline = value(null)\r\n\r\n  function handleStatusChange(status) {\r\n    isOnline.value = status\r\n  }\r\n\r\n  watch(idRef, id => {\r\n    ChatAPI.subscribeToFriendStatus(id, handleStatusChange)\r\n    return () => {\r\n      ChatAPI.unsubscribeFromFriendStatus(id, handleStatusChange)\r\n    }\r\n  })\r\n\r\n  return isOnline\r\n}\r\n\r\nexport default {\r\n  props: ['id'],\r\n  created() {\r\n    return {\r\n      // to pass watch-able state, make sure to pass a value\r\n      // or computed ref\r\n      isOnline: useFriendStatus(computed(() => this.id))\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nNote that even after logic extraction, the component is still responsible for:\r\n\r\n- Declaring all the props it expects\r\n- Declaring all the properties to expose to the template\r\n\r\nEven with multiple extracted custom logic functions, there will be no confusion regarding where a prop or a data property comes from. This is a major advantage over mixins.\r\n\r\n# Drawbacks\r\n\r\n- Type inference of returned values. This actually works better in the object-based API because we can reverse infer `this` based on the return value of `created()`, but it's harder to do so in a class. The user will likely have to explicitly annotate these properties on the class.\r\n\r\n- To pass state around while keeping them \"trackable\" and \"reactive\", values must be passed around in the form of ref containers. This is a new concept and can be a bit more difficult to learn than the base API. However, this isn't intended as a replacement for the base API - it is positioned as a advanced mechanism to encapsulate and reuse logic across components.\r\n\r\n# Alternatives\r\n\r\n## Compared to React hooks:\r\n\r\n- same composition capability\r\n- closer mapping to Vue's existing usage\r\n- no repeated invocation, less wasted memory on repeated render\r\n- `watch` has automatic dependency tracking, no need to worry about exhaustive deps\r\n- reactive state are always referenced via refs so no confusion of stale closures\r\n- does not rely on call order\r\n\r\n# Adoption strategy\r\n\r\nTODO\r\n\r\n# Unresolved questions\r\n\r\n- We can also use `data()` instead of `created()`, since `data()` is already used for exposing properties to the template. But it feels a bit weird to perform side effects like `watch` or `useMounted` in `data()`.\r\n\r\n  - Maybe we can introduce a new option dedicated for this purpose, e.g. `state()`? (replaces `data()` and has special handling for refs in returned value)\r\n\r\n- We probably need to also expose a `isRef` method to check whether an object is a value/computed ref.\r\n\r\n# Appendix: More Usage Examples\r\n\r\n## Data Fetching\r\n\r\nThis is the equivalent of what we can currently achieve via scoped slots with libs like [vue-promised](https://github.com/posva/vue-promised). This is just an example showing that this new set of API is capable of achieving similar results.\r\n\r\n``` js\r\nfunction useFetch(endpointRef) {\r\n  const res = value({\r\n    status: 'pending',\r\n    data: null,\r\n    error: null\r\n  })\r\n\r\n  // watch can directly take a computed ref\r\n  watch(endpointRef, endpoint => {\r\n    let aborted = false\r\n    fetch(endpoint)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if (aborted) {\r\n          return\r\n        }\r\n        res.value = {\r\n          status: 'success',\r\n          data,\r\n          error: null\r\n        }\r\n      }).catch(error => {\r\n        if (aborted) {\r\n          return\r\n        }\r\n        res.value = {\r\n          status: 'error',\r\n          data: null,\r\n          error\r\n        }\r\n      })\r\n    return () => {\r\n      aborted = true\r\n    }\r\n  })\r\n\r\n  return res\r\n}\r\n\r\n// usage\r\nconst App = {\r\n  created(props) {\r\n    return {\r\n      postData: useFetch(computed(() => `/api/posts/${props.id}`))\r\n    }\r\n  },\r\n  template: `\r\n    <div>\r\n      <div v-if=\"postData.status === 'pending'\">\r\n        Loading...\r\n      </div>\r\n      <div v-else-if=\"postData.status === 'success'\">\r\n        {{ postData.data }}\r\n      </div>\r\n      <div v-else>\r\n        {{ postData.error }}\r\n      </div>\r\n    </div>\r\n  `\r\n}\r\n```\r\n\r\n## Use the Platform\r\n\r\nHypothetical examples of exposing state to the component from external sources. This is more explicit than using mixins regarding where the state comes from.\r\n\r\n``` js\r\nexport default {\r\n  created() {\r\n    const { x, y } = useMousePosition()\r\n    const orientation = useDeviceOrientation()\r\n    return {\r\n      x,\r\n      y,\r\n      orientation\r\n    }\r\n  }\r\n}\r\n```\r\n",
            reactions: {
                url: 'https://api.github.com/repos/vuejs/core/issues/23/reactions',
                total_count: 3,
                '+1': 2,
                '-1': 1,
                laugh: 0,
                hooray: 0,
                confused: 0,
                heart: 0,
                rocket: 0,
                eyes: 0,
            },
            timeline_url: 'https://api.github.com/repos/vuejs/core/issues/23/timeline',
            performed_via_github_app: null,
            state_reason: 'completed',
            score: 1.0,
        },
        {
            url: 'https://api.github.com/repos/vuejs/core/issues/5',
            repository_url: 'https://api.github.com/repos/vuejs/core',
            labels_url: 'https://api.github.com/repos/vuejs/core/issues/5/labels{/name}',
            comments_url: 'https://api.github.com/repos/vuejs/core/issues/5/comments',
            events_url: 'https://api.github.com/repos/vuejs/core/issues/5/events',
            html_url: 'https://github.com/vuejs/core/issues/5',
            id: 369190331,
            node_id: 'MDU6SXNzdWUzNjkxOTAzMzE=',
            number: 5,
            title: 'Attribute fallthrough behavior',
            user: {
                login: 'yyx990803',
                id: 499550,
                node_id: 'MDQ6VXNlcjQ5OTU1MA==',
                avatar_url: 'https://avatars.githubusercontent.com/u/499550?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/yyx990803',
                html_url: 'https://github.com/yyx990803',
                followers_url: 'https://api.github.com/users/yyx990803/followers',
                following_url: 'https://api.github.com/users/yyx990803/following{/other_user}',
                gists_url: 'https://api.github.com/users/yyx990803/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/yyx990803/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/yyx990803/subscriptions',
                organizations_url: 'https://api.github.com/users/yyx990803/orgs',
                repos_url: 'https://api.github.com/users/yyx990803/repos',
                events_url: 'https://api.github.com/users/yyx990803/events{/privacy}',
                received_events_url: 'https://api.github.com/users/yyx990803/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [],
            state: 'closed',
            locked: true,
            assignee: null,
            assignees: [],
            milestone: null,
            comments: 14,
            created_at: '2018-10-11T15:56:06Z',
            updated_at: '2023-11-17T00:19:37Z',
            closed_at: '2019-03-21T09:41:18Z',
            author_association: 'MEMBER',
            active_lock_reason: null,
            body: '### Current proposal:\r\n\r\n- Remove `inhertiAttrs` option\r\n- Remove `nativeOn`\r\n- Remove automatic attribute fallthrough in all cases\r\n- The only, consistent way to enable attribute fallthrough is to explicitly spread `$attrs` on desired target element\r\n    - In template: `<div v-bind="$attrs">`\r\n    - In render functions: `return cloneVNode(h(\'div\'), this.$attrs)`\r\n    - note if component has no declared props, ~~`$attrs` will be empty and everything will be in `$props`, and it should just spread / pass on `$props` instead.~~ `$attrs` will just point to `$props` which includes everything passed to the component.\r\n\r\n### Rationale\r\n\r\n- The fallthrough behavior has already been inconsistent between stateful components and functional components in 2.x. With the introduction of fragments, the fallthrough behavior becomes even more unreliable for component consumers. The implicit behavior is convenient in cases where it works, but can be confusing in cases where it doesn\'t. By making this an explicit decision of component authors, whether a component accepts additional attributes becomes part of the component\'s API contract, overall resulting in more consistency.\r\n\r\n- The combination of `inheritAttrs`, `nativeOn`, `$attrs` and `$listeners` makes props passing in higher-order components unnecessarily complex. The new behavior makes it much more straightforward: spreading `$attrs` means "pass everything that I don\'t care about down to this element/component".\r\n\r\n### Drawbacks\r\n\r\n- Fallthrough behavior is now disabled by default and is controlled by the component author. If the component is intentionally "closed" there\'s no way for the consumer to change that. This may cause some inconvenience for users accustomed to the old behavior, but can be easily worked around with by wrapping the component in a wrapper element.\r\n\r\n- For accessibility reasons, it should be a best practice for components that are shipped as libraries to always spread `$attrs`. However this is a straightforward / mechanical code change, and is more of an educational issue. We could make it common knowledge by emphasizing this in all our information channels.\r\n\r\n### Side Benefit\r\n\r\nNot spreading `$attrs` actually improves performance.',
            reactions: {
                url: 'https://api.github.com/repos/vuejs/core/issues/5/reactions',
                total_count: 3,
                '+1': 3,
                '-1': 0,
                laugh: 0,
                hooray: 0,
                confused: 0,
                heart: 0,
                rocket: 0,
                eyes: 0,
            },
            timeline_url: 'https://api.github.com/repos/vuejs/core/issues/5/timeline',
            performed_via_github_app: null,
            state_reason: 'completed',
            score: 1.0,
        },
        {
            url: 'https://api.github.com/repos/vuejs/core/issues/24',
            repository_url: 'https://api.github.com/repos/vuejs/core',
            labels_url: 'https://api.github.com/repos/vuejs/core/issues/24/labels{/name}',
            comments_url: 'https://api.github.com/repos/vuejs/core/issues/24/comments',
            events_url: 'https://api.github.com/repos/vuejs/core/issues/24/events',
            html_url: 'https://github.com/vuejs/core/issues/24',
            id: 423142444,
            node_id: 'MDU6SXNzdWU0MjMxNDI0NDQ=',
            number: 24,
            title: 'Advanced Reactivity API',
            user: {
                login: 'yyx990803',
                id: 499550,
                node_id: 'MDQ6VXNlcjQ5OTU1MA==',
                avatar_url: 'https://avatars.githubusercontent.com/u/499550?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/yyx990803',
                html_url: 'https://github.com/yyx990803',
                followers_url: 'https://api.github.com/users/yyx990803/followers',
                following_url: 'https://api.github.com/users/yyx990803/following{/other_user}',
                gists_url: 'https://api.github.com/users/yyx990803/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/yyx990803/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/yyx990803/subscriptions',
                organizations_url: 'https://api.github.com/users/yyx990803/orgs',
                repos_url: 'https://api.github.com/users/yyx990803/repos',
                events_url: 'https://api.github.com/users/yyx990803/events{/privacy}',
                received_events_url: 'https://api.github.com/users/yyx990803/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [],
            state: 'closed',
            locked: true,
            assignee: null,
            assignees: [],
            milestone: null,
            comments: 23,
            created_at: '2019-03-20T09:14:54Z',
            updated_at: '2023-11-17T00:19:36Z',
            closed_at: '2019-03-26T11:12:01Z',
            author_association: 'MEMBER',
            active_lock_reason: null,
            body: "Review note: I've split this part out of the [React hooks like composition API](https://github.com/vuejs/vue-next/issues/23) because it is not strictly coupled to that proposal.\r\n\r\n---\r\n\r\n- Start Date: 03-05-2019\r\n- Target Major Version: 2.x & 3.x\r\n- Reference Issues: N/A\r\n- Implementation PR: N/A\r\n\r\n# Summary\r\n\r\nProvide standalone APIs for creating and observing reactive state.\r\n\r\n# Basic example\r\n\r\n```js\r\nimport { state, value, computed, watch } from '@vue/observer'\r\n\r\n// reactive object\r\n// equivalent of 2.x Vue.observable()\r\nconst obj = state({ a: 1 })\r\n\r\n// watch with a getter function\r\nwatch(() => obj.a, value => {\r\n  console.log(`obj.a is: ${value}`)\r\n})\r\n\r\n// a \"ref\" object that has a .value property\r\nconst count = value(0)\r\n\r\n// computed \"ref\" with a read-only .value property\r\nconst plusOne = computed(() => count.value + 1)\r\n\r\n// refs can be watched directly\r\nwatch(count, (count, oldCount) => {\r\n  console.log(`count is: ${count}`)\r\n})\r\n\r\nwatch(plusOne, countPlusOne => {\r\n  console.log(`count plus one is: ${countPlusOne}`)\r\n})\r\n```\r\n\r\n# Motivation\r\n\r\n## Decouple the reactivity system from component instances\r\n\r\nVue's reactivity system powers a few aspects of Vue:\r\n\r\n- Tracking dependencies used during a component's render for automatic component re-render\r\n\r\n- Tracking dependencies of computed properties to only re-compute values when necessary\r\n\r\n- Expose `this.$watch` API for users to perform custom side effects in response to state changes\r\n\r\nUntil 2.6, the reactivity system has largely been considered an internal implementation, and there is no dedicated API for creating / watching reactive state without doing it inside a component instance.\r\n\r\nHowever, such coupling isn't technically necessary. In 3.x we've already split the reactivity system into its own package (`@vue/observer`) with dedicated APIs, so it makes sense to also expose these APIs to enable more advanced use cases.\r\n\r\nWith these APIs it becomes possible to encapsulate stateful logic and side effects without components involved. In addition, with proper ability to \"connect\" the created state back into component instances, they also unlock a powerful component logic reuse mechanism.\r\n\r\n# Detailed design\r\n\r\n## Reactive Objects\r\n\r\nIn 2.6 we introduced the `observable` API for creating reactive objects. We've noticed the naming causes confusion for some users who are familiar with RxJS or reactive programming where the term \"observable\" is commonly used to denote event streams. So here we intend to rename it to simply `state`:\r\n\r\n``` js\r\nimport { state } from 'vue'\r\n\r\nconst object = state({\r\n  count: 0\r\n})\r\n```\r\n\r\nThis works exactly like 2.6 `Vue.observable`. The returned object behaves just like a normal object, and when its properties are accessed in **reactive computations** (render functions, computed property getters and watcher getters), they are tracked as dependencies. Mutation to these properties will cause corresponding computations to re-run.\r\n\r\n## Value Refs\r\n\r\nThe `state` API cannot be used for primitive values because:\r\n\r\n- Vue tracks dependencies by intercepting property accesses. Usage of primitive values in reactive computations cannot be tracked.\r\n\r\n- JavaScript values are not passed by reference. Passing a value directly means the receiving function will not be able to read the latest value when the original is mutated.\r\n\r\nThe simple solution is wrapping the value in an object wrapper that can be passed around by reference. This is exactly what the `value` API does:\r\n\r\n``` js\r\nimport { value } from 'vue'\r\n\r\nconst countRef = value(0)\r\n```\r\n\r\nThe `value` API creates a wrapper object for a value, called a **ref**. A ref is a reactive object with a single property: `.value`. The property points to the actual value being held and is writable:\r\n\r\n``` js\r\n// read the value\r\nconsole.log(countRef.value) // 0\r\n\r\n// mutate the value\r\ncountRef.value++\r\n```\r\n\r\nRefs are primarily used for holding primitive values, but it can also hold any other values including deeply nested objects and arrays. Non-primitive values held inside a ref behave like normal reactive objects created via `state`.\r\n\r\n## Computed Refs\r\n\r\nIn addition to plain value refs, we can also create computed refs:\r\n\r\n``` js\r\nimport { value, computed } from 'vue'\r\n\r\nconst count = value(0)\r\nconst countPlusOne = computed(() => count.value + 1)\r\n\r\nconsole.log(countPlusOne.value) // 1\r\ncount.value++\r\nconsole.log(countPlusOne.value) // 2\r\n```\r\n\r\nComputed refs are readonly by default - assigning to its `value` property will result in an error.\r\n\r\nComputed refs can be made writable by passing a write callback as the 2nd argument:\r\n\r\n``` js\r\nconst writableRef = computed(\r\n  // read\r\n  () => count.value + 1,\r\n  // write\r\n  val => {\r\n    count.value = val - 1\r\n  }\r\n)\r\n```\r\n\r\nComputed refs behaves like computed properties in a component: it tracks its dependencies and only re-evaluates when dependencies have changed.\r\n\r\n## Watchers\r\n\r\nAll `.value` access are reactive, and can be tracked with the standalone `watch` API.\r\n\r\n**NOTE: unlike 2.x, the `watch` API is immediate by default.**\r\n\r\n`watch` can be called with a single function. The function will be called immediately, and will be called again whenever dependencies change:\r\n\r\n``` js\r\nimport { value, watch } from 'vue'\r\n\r\nconst count = value(0)\r\n\r\n// watch and re-run the effect\r\nwatch(() => {\r\n  console.log('count is: ', count.value)\r\n})\r\n// -> count is: 0\r\n\r\ncount.value++\r\n// -> count is: 1\r\n```\r\n\r\n### Watch with a Getter\r\n\r\nWhen using a single function, any reactive properties accessed during its execution are tracked as dependencies. The **computation** and the **side effect** are performed together. To separate the two, we can pass two functions instead:\r\n\r\n``` js\r\nwatch(\r\n  // 1st argument (the \"computation\", or getter) should return a value\r\n  () => count.value + 1,\r\n  // 2nd argument (the \"effect\", or callback) only fires when value returned\r\n  // from the getter changes\r\n  value => {\r\n    console.log('count + 1 is: ', value)\r\n  }\r\n)\r\n// -> count + 1 is: 1\r\n\r\ncount.value++\r\n// -> count + 1 is: 2\r\n```\r\n\r\n### Watching Refs\r\n\r\nThe 1st argument can also be a ref:\r\n\r\n``` js\r\n// double is a computed ref\r\nconst double = computed(() => count.value * 2)\r\n\r\n// watch a ref directly\r\nwatch(double, value => {\r\n  console.log('double the count is: ', value)\r\n})\r\n// -> double the count is: 0\r\n\r\ncount.value++\r\n// -> double the count is: 2\r\n```\r\n\r\n### Stopping a Watcher\r\n\r\nA `watch` call returns a stop handle:\r\n\r\n``` js\r\nconst stop = watch(...)\r\n\r\n// stop watching\r\nstop()\r\n```\r\n\r\nIf `watch` is called inside lifecycle hooks or `data()` of a component instance, it will automatically be stopped when the associated component instance is unmounted:\r\n\r\n``` js\r\nexport default {\r\n  created() {\r\n    // stopped automatically when the component unmounts\r\n    watch(() => this.id, id => {\r\n      // ...\r\n    })\r\n  }\r\n}\r\n```\r\n\r\n### Effect Cleanup\r\n\r\nThe **effect** callback can also return a cleanup function which gets called every time when:\r\n\r\n- the watcher is about to re-run\r\n- the watcher is stopped\r\n\r\n``` js\r\nwatch(idRef, id => {\r\n  const token = performAsyncOperation(id)\r\n\r\n  return () => {\r\n    // id has changed or watcher is stopped.\r\n    // invalidate previously pending async operation\r\n    token.cancel()\r\n  }\r\n})\r\n```\r\n\r\n### Non-Immediate Watchers\r\n\r\nTo make watchers non-immediate like 2.x, pass additional options via the 3rd argument:\r\n\r\n``` js\r\nwatch(\r\n  () => count.value + 1,\r\n  () => {\r\n    console.log(`count changed`)\r\n  },\r\n  { immediate: false }\r\n)\r\n```\r\n\r\n## Exposing Refs to Components\r\n\r\nWhile this proposal is focused on working with reactive state outside of components, such state should also be usable inside components as well.\r\n\r\nRefs can be returned in a component's `data()` function:\r\n\r\n``` js\r\nimport { value } from 'vue'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      count: value(0)\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n**When a `ref` is returned as a root-level property in `data()`, it is bound to the component instance as a direct property.** This means there's no need to access the value via `.value` - the value can be accessed and mutated directly as `this.count`, and directly as `count` inside templates:\r\n\r\n``` html\r\n<div @click=\"count++\">\r\n  {{ count }}\r\n</div>\r\n```\r\n\r\n## Beyond the API\r\n\r\nThe APIs proposed here are just low-level building blocks. Technically, they provide everything we need for global state management, so Vuex can be rewritten as a very thin layer on top of these APIs. In addition, when combined with [the ability to programmatically hook into the component lifecycle](TODO), we can offer a logic reuse mechanism with capabilities similar to React hooks.\r\n\r\n# Drawbacks\r\n\r\n- To pass state around while keeping them \"trackable\" and \"reactive\", values must be passed around in the form of ref containers. This is a new concept and can be a bit more difficult to learn than the base API. However, these APIs are intended for advanced use cases so the learning cost should be acceptable.\r\n\r\n# Alternatives\r\n\r\nN/A\r\n\r\n# Adoption strategy\r\n\r\nThis is mostly new APIs that expose existing internal capabilities. Users familiar with Vue's existing reactivity system should be able to grasp the concept fairly quickly. It should have a dedicated chapter in the official guide, and we also need to revise the [Reactivity in Depth](https://vuejs.org/v2/guide/reactivity.html) section of the current docs.\r\n\r\n# Unresolved questions\r\n\r\n- `watch` API overlaps with existing `this.$watch` API and `watch` component option. In fact, the standalone `watch` API provides a superset of existing APIs. This makes the existence of all three redundant and inconsistent.\r\n\r\n  **Should we deprecate `this.$watch` and `watch` component option?**\r\n\r\n  Sidenote: removing `this.$watch` and the `watch` option also makes the entire `watch` API completely tree-shakable.\r\n\r\n- We probably need to also expose a `isRef` method to check whether an object is a value/computed ref.\r\n",
            reactions: {
                url: 'https://api.github.com/repos/vuejs/core/issues/24/reactions',
                total_count: 0,
                '+1': 0,
                '-1': 0,
                laugh: 0,
                hooray: 0,
                confused: 0,
                heart: 0,
                rocket: 0,
                eyes: 0,
            },
            timeline_url: 'https://api.github.com/repos/vuejs/core/issues/24/timeline',
            performed_via_github_app: null,
            state_reason: 'completed',
            score: 1.0,
        },
        {
            url: 'https://api.github.com/repos/vuejs/core/issues/27',
            repository_url: 'https://api.github.com/repos/vuejs/core',
            labels_url: 'https://api.github.com/repos/vuejs/core/issues/27/labels{/name}',
            comments_url: 'https://api.github.com/repos/vuejs/core/issues/27/comments',
            events_url: 'https://api.github.com/repos/vuejs/core/issues/27/events',
            html_url: 'https://github.com/vuejs/core/issues/27',
            id: 423640381,
            node_id: 'MDU6SXNzdWU0MjM2NDAzODE=',
            number: 27,
            title: 'Attribute Fallthrough Behavior',
            user: {
                login: 'yyx990803',
                id: 499550,
                node_id: 'MDQ6VXNlcjQ5OTU1MA==',
                avatar_url: 'https://avatars.githubusercontent.com/u/499550?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/yyx990803',
                html_url: 'https://github.com/yyx990803',
                followers_url: 'https://api.github.com/users/yyx990803/followers',
                following_url: 'https://api.github.com/users/yyx990803/following{/other_user}',
                gists_url: 'https://api.github.com/users/yyx990803/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/yyx990803/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/yyx990803/subscriptions',
                organizations_url: 'https://api.github.com/users/yyx990803/orgs',
                repos_url: 'https://api.github.com/users/yyx990803/repos',
                events_url: 'https://api.github.com/users/yyx990803/events{/privacy}',
                received_events_url: 'https://api.github.com/users/yyx990803/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [],
            state: 'closed',
            locked: true,
            assignee: null,
            assignees: [],
            milestone: null,
            comments: 13,
            created_at: '2019-03-21T09:40:57Z',
            updated_at: '2023-11-17T00:19:35Z',
            closed_at: '2019-04-08T08:42:12Z',
            author_association: 'MEMBER',
            active_lock_reason: null,
            body: 'Draft based on #5\r\n\r\n---\r\n\r\n- Start Date: 2019-03-15\r\n- Target Major Version: 3.x\r\n- Reference Issues: N/A\r\n- Implementation PR: N/A\r\n\r\n# Summary\r\n\r\n- Disable implicit attribute fall-through to child component root element\r\n\r\n- Remove `inheritAttrs` option\r\n\r\n# Basic example\r\n\r\nTo replicate 2.x behavior in templates:\r\n\r\n``` html\r\n<div v-bind="$attrs">hi</div>\r\n```\r\n\r\nIn render function:\r\n\r\n``` js\r\nimport { h } from \'vue\'\r\n\r\nexport default {\r\n  render() {\r\n    return h(\'div\', this.$attrs, \'hi\')\r\n  }\r\n}\r\n```\r\n\r\n# Motivation\r\n\r\nIn 2.x, the current attribute fallthrough behavior is quite implicit:\r\n\r\n- `class` and `style` used on a child component are implicitly applied to the component\'s root element. It is also automatically merged with `class` and `style` bindings on that element in the child component template.\r\n\r\n  - However, this behavior is not consistent in functional components because functional components may return multiple root nodes.\r\n\r\n  - With 3.0 supporting fragments and therefore multiple root nodes for all components, this becomes even more problematic. The implicit behavior can suddenly fail when the child component changes from single-root to multi-root.\r\n\r\n- attributes passed to a component that are not declared by the component as props are also implicitly applied to the component root element.\r\n\r\n  - Again, in functional components this needs explicit application, and would be inconsistent for 3.0 components with multiple root nodes.\r\n\r\n  - `this.$attrs` only contains attributes, but excludes `class` and `style`; `v-on` listeners are contained in a separate `this.$listeners` object. There is also the `.native` modifier. The combination of `inheritAttrs`, `.native`, `$attrs` and `$listeners` makes props passing in higher-order components unnecessarily complex. The new behavior makes it much more straightforward: spreading $attrs means "pass everything that I don\'t care about down to this element/component".\r\n\r\n  - `class` and `style` are always automatically merged, and are not affected by `inheritAttrs`.\r\n\r\nThe fallthrough behavior has already been inconsistent between stateful components and functional components in 2.x. With the introduction of fragments (the ability for a component to have multiple root nodes) in 3.0, the fallthrough behavior becomes even more unreliable for component consumers. The implicit behavior is convenient in cases where it works, but can be confusing in cases where it doesn\'t.\r\n\r\nIn 3.0, we are planning to make attribute fallthrough an explicit decision of component authors. Whether a component accepts additional attributes becomes part of the component\'s API contract. We believe overall this should result in a simpler, more explicit and more consistent API.\r\n\r\n# Detailed design\r\n\r\n- `inheritAttrs` option will be removed.\r\n\r\n- `.native` modifier will be removed.\r\n\r\n- Non-prop attributes no longer automatically fallthrough to the root element of the child component (including `class` and `style`). This is the same for both stateful and functional components.\r\n\r\n  This means that with the following usage:\r\n\r\n  ``` js\r\n  const Child = {\r\n    props: [\'foo\'],\r\n    template: `<div>{{ foo }}</div>`\r\n  }\r\n\r\n  const Parent = {\r\n    components: { Child },\r\n    template: `<child foo="1" bar="2" class="bar"/>`\r\n  }\r\n  ```\r\n\r\n  Both `bar="2"` AND `class="bar"` on `<child>` will be ignored.\r\n\r\n- `this.$attrs` now contains **everything** passed to the component except those that are declared as props or custom events. **This includes `class`, `style`, `v-on` listeners (as `onXXX` properties)**. The object will be flat (no nesting) - this is possible thanks to the new flat VNode data structure (discussed in [Render Function API Change](https://github.com/vuejs/vue-next/issues/29)).\r\n\r\n  To explicitly inherit additional attributes passed by the parent, the child component should apply it with `v-bind`:\r\n\r\n  ``` js\r\n  const Child = {\r\n    props: [\'foo\'],\r\n    template: `<div v-bind="$attrs">{{ foo }}</div>`\r\n  }\r\n  ```\r\n\r\n  This also applies when the child component needs to apply `$attrs` to a non-root element, or has multiple root nodes:\r\n\r\n  ``` js\r\n  const ChildWithNestedRoot = {\r\n    props: [\'foo\'],\r\n    template: `\r\n      <label>\r\n        {{ foo }}\r\n        <input v-bind="$attrs">\r\n      </label>\r\n    `\r\n  }\r\n\r\n  const ChildWithMultipleRoot = {\r\n    props: [\'foo\'],\r\n    template: `\r\n      <label :for="$attrs.id">{{ foo }}</label>\r\n      <input v-bind="$attrs">\r\n    `\r\n  }\r\n  ```\r\n\r\n  In render functions, if simple overwrite is acceptable, `$attrs` can be merged using object spread. But in most cases, special handling is required (e.g. for `class`, `style` and `onXXX` listeners). Therefore a `cloneVNode` helper will be provided. It handles the proper merging of VNode data:\r\n\r\n  ``` js\r\n  import { h, cloneVNode } from \'vue\'\r\n\r\n  const Child = {\r\n    render() {\r\n      const inner = h(InnerComponent, {\r\n        foo: \'bar\'\r\n      })\r\n      return cloneVNode(inner, this.$attrs)\r\n    }\r\n  }\r\n  ```\r\n\r\n  The 2nd argument to `cloneVNode` is optional. It means "clone the vnode and add these additional props". The `cloneVNode` helper serves two purposes:\r\n\r\n  - Avoids mutating the original VNode\r\n  - Handles special merging logic for `class`, `style` and event listeners\r\n\r\n  Inside render functions, the user also has the full flexibility to pluck / omit any props from `$attrs` using 3rd party helpers, e.g. lodash.\r\n\r\n## Removing Unwanted Listeners\r\n\r\nWith flat VNode data and the removal of `.native` modifier, all listeners are passed down to the child component as `onXXX` functions:\r\n\r\n``` html\r\n<foo @click="foo" @custom="bar" />\r\n```\r\n\r\ncompiles to:\r\n\r\n``` js\r\nh(foo, {\r\n  onClick: foo,\r\n  onCustom: bar\r\n})\r\n```\r\n\r\nWhen spreading `$attrs` with `v-bind`, all parent listeners are applied to the target element as native DOM listeners. The problem is that these same listeners can also be triggered by custom events - in the above example, both a native click event and a custom one emitted by `this.$emit(\'click\')` in the child will trigger the parent\'s `foo` handler. This may lead to unwanted behavior.\r\n\r\nProps do not suffer from this problem because declared props are removed from `$attrs`. Therefore we should have a similar way to "declare" emitted events from a component. There is currently [an open RFC for it](https://github.com/vuejs/rfcs/pull/16) by @niko278.\r\n\r\nEvent listeners for explicitly declared events will be removed from `$attrs` and can only be triggered by custom events emitted by the component via `this.$emit`.\r\n\r\n# Drawbacks\r\n\r\n- Fallthrough behavior is now disabled by default and is controlled by the component author. If the component is intentionally "closed" there\'s no way for the consumer to change that. This may cause some inconvenience for users accustomed to the old behavior, especially when using `class` and `style` for styling purposes, but it is the more "correct" behavior when it comes to component responsibilities and boundaries. Styling use cases can be easily worked around with by wrapping the component in a wrapper element. In fact, this should be the best practice in 3.0 because the child component may or may not have multiple root nodes.\r\n\r\n- For accessibility reasons, it should be a best practice for components that are shipped as libraries to always spread `$attrs` so that any `aria-x` attributes can fallthrough. However this is a straightforward / mechanical code change, and is more of an educational issue. We could make it common knowledge by emphasizing this in all our information channels.\r\n\r\n# Alternatives\r\n\r\nN/A\r\n\r\n# Adoption strategy\r\n\r\n## Documentation\r\n\r\nThis RFC discusses the problem by starting with the 2.x implementation details with a lot of history baggage so it can seem a bit complex. However if we were to document the behavior for a new user, the concept is much simpler in comparison:\r\n\r\n- For a component without explicit props and events declarations, everything passed to it from the parent ends up in `$attrs`.\r\n\r\n- If a component declares explicit props, they are removed from `$attrs`.\r\n\r\n- If a component declares explicit events, corresponding `onXXX` listeners are removed from `$attrs`.\r\n\r\n- `$attrs` essentially means **extraneous attributes,**, or "any attributes passed to the component that hasn\'t been explicitly handled by the component".\r\n\r\n## Migration\r\n\r\nThis will be one of the changes that will have a bigger impact on existing code and would likely require manual migration.\r\n\r\n- We will provide a warning when a component has unused extraneous attributes (i.e. non-empty `$attrs` that is never used during render).\r\n\r\n- For application code that adds `class` / `style` to child components for styling purposes: the child component should be wrapped with a wrapper element.\r\n\r\n- For higher-order components or reusable components that allow the consumer to apply arbitrary attributes / listeners to an inner element (e.g. custom form components that wrap `<input>`):\r\n\r\n  - Declare props and events that are consumed by the HOC itself (thus removing them from `$attrs`)\r\n\r\n  - Refactor the component and explicitly add `v-bind="$attrs"` to the target inner component or element. For render functions, apply `$attrs` with the `cloneVNode` helper.\r\n\r\n  - If a component is already using `inheritAttrs: false`, the migration should be relatively straightforward.\r\n\r\nWe will need more dogfooding (migrating actual apps to 3.0) to provide more detailed migration guidance for this one, since the migration cost heavily depends on usage.\r\n',
            reactions: {
                url: 'https://api.github.com/repos/vuejs/core/issues/27/reactions',
                total_count: 0,
                '+1': 0,
                '-1': 0,
                laugh: 0,
                hooray: 0,
                confused: 0,
                heart: 0,
                rocket: 0,
                eyes: 0,
            },
            timeline_url: 'https://api.github.com/repos/vuejs/core/issues/27/timeline',
            performed_via_github_app: null,
            state_reason: 'completed',
            score: 1.0,
        },
        {
            url: 'https://api.github.com/repos/vuejs/core/issues/26',
            repository_url: 'https://api.github.com/repos/vuejs/core',
            labels_url: 'https://api.github.com/repos/vuejs/core/issues/26/labels{/name}',
            comments_url: 'https://api.github.com/repos/vuejs/core/issues/26/comments',
            events_url: 'https://api.github.com/repos/vuejs/core/issues/26/events',
            html_url: 'https://github.com/vuejs/core/issues/26',
            id: 423624488,
            node_id: 'MDU6SXNzdWU0MjM2MjQ0ODg=',
            number: 26,
            title: 'Optional Props Declaration',
            user: {
                login: 'yyx990803',
                id: 499550,
                node_id: 'MDQ6VXNlcjQ5OTU1MA==',
                avatar_url: 'https://avatars.githubusercontent.com/u/499550?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/yyx990803',
                html_url: 'https://github.com/yyx990803',
                followers_url: 'https://api.github.com/users/yyx990803/followers',
                following_url: 'https://api.github.com/users/yyx990803/following{/other_user}',
                gists_url: 'https://api.github.com/users/yyx990803/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/yyx990803/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/yyx990803/subscriptions',
                organizations_url: 'https://api.github.com/users/yyx990803/orgs',
                repos_url: 'https://api.github.com/users/yyx990803/repos',
                events_url: 'https://api.github.com/users/yyx990803/events{/privacy}',
                received_events_url: 'https://api.github.com/users/yyx990803/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [],
            state: 'closed',
            locked: true,
            assignee: null,
            assignees: [],
            milestone: null,
            comments: 3,
            created_at: '2019-03-21T08:57:15Z',
            updated_at: '2023-11-17T00:19:34Z',
            closed_at: '2019-04-08T08:42:41Z',
            author_association: 'MEMBER',
            active_lock_reason: null,
            body: "- Start Date: 2019-03-21\r\n- Target Major Version: 2.x & 3.x\r\n- Reference Issues: N/A\r\n- Implementation PR: N/A\r\n\r\n# Summary\r\n\r\nMake component `props` declaration optional.\r\n\r\n# Basic example\r\n\r\n``` html\r\n<!-- valid SFC -->\r\n<template>\r\n  <div>{{ $props.foo }}</div>\r\n</template>\r\n```\r\n\r\n# Motivation\r\n\r\nIn simple use cases where there is no need for runtime props type checking (especially in functional components), making props optional could result in simpler code.\r\n\r\n# Detailed design\r\n\r\n## Stateful Components\r\n\r\nWhen a component has no `props` declarations, all attributes passed by the parent are exposed in `this.$props`. Unlike declared props, they will NOT be exposed directly on `this`. In addition, in this case `this.$attrs` and `this.$props` will be pointing to the same object.\r\n\r\nNice thing about this is you can omit the `<script>` block altogether in a simple SFC:\r\n\r\n``` html\r\n<template>\r\n  <div>{{ $props.foo }}</div>\r\n</template>\r\n```\r\n\r\n## Functional Components\r\n\r\nThis is based on plain-function functional components proposed in [Functional and Async Component API Change](https://github.com/vuejs/vue-next/issues/28).\r\n\r\n``` js\r\nconst FunctionalComp = props => {\r\n  return h('div', props.foo)\r\n}\r\n```\r\n\r\nTo declare props for plain-function functional components, attach it to the function itself:\r\n\r\n``` js\r\nFunctionalComp.props = {\r\n  foo: Number\r\n}\r\n```\r\n\r\nSimilar to stateful components, when props are declared, the `props` arguments will only contain the declared props - attributes received but not declared as props will be in the 3rd argument (`attrs`):\r\n\r\n``` js\r\nconst FunctionalComp = (props, slots, attrs) => {\r\n  // `attrs` contains all received attributes except declared `foo`\r\n}\r\n\r\nFunctionalComp.props = {\r\n  foo: Number\r\n}\r\n```\r\n\r\nFor mode details on the new functional component signature, see [Render Function API Change](https://github.com/vuejs/vue-next/issues/29).\r\n\r\n# Drawbacks\r\n\r\nN/A\r\n\r\n# Alternatives\r\n\r\nN/A\r\n\r\n# Adoption strategy\r\n\r\nThe behavior is fully backwards compatible.\r\n",
            reactions: {
                url: 'https://api.github.com/repos/vuejs/core/issues/26/reactions',
                total_count: 3,
                '+1': 3,
                '-1': 0,
                laugh: 0,
                hooray: 0,
                confused: 0,
                heart: 0,
                rocket: 0,
                eyes: 0,
            },
            timeline_url: 'https://api.github.com/repos/vuejs/core/issues/26/timeline',
            performed_via_github_app: null,
            state_reason: 'completed',
            score: 1.0,
        },
        {
            url: 'https://api.github.com/repos/vuejs/core/issues/28',
            repository_url: 'https://api.github.com/repos/vuejs/core',
            labels_url: 'https://api.github.com/repos/vuejs/core/issues/28/labels{/name}',
            comments_url: 'https://api.github.com/repos/vuejs/core/issues/28/comments',
            events_url: 'https://api.github.com/repos/vuejs/core/issues/28/events',
            html_url: 'https://github.com/vuejs/core/issues/28',
            id: 423641223,
            node_id: 'MDU6SXNzdWU0MjM2NDEyMjM=',
            number: 28,
            title: 'Functional and Async Component API Change',
            user: {
                login: 'yyx990803',
                id: 499550,
                node_id: 'MDQ6VXNlcjQ5OTU1MA==',
                avatar_url: 'https://avatars.githubusercontent.com/u/499550?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/yyx990803',
                html_url: 'https://github.com/yyx990803',
                followers_url: 'https://api.github.com/users/yyx990803/followers',
                following_url: 'https://api.github.com/users/yyx990803/following{/other_user}',
                gists_url: 'https://api.github.com/users/yyx990803/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/yyx990803/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/yyx990803/subscriptions',
                organizations_url: 'https://api.github.com/users/yyx990803/orgs',
                repos_url: 'https://api.github.com/users/yyx990803/repos',
                events_url: 'https://api.github.com/users/yyx990803/events{/privacy}',
                received_events_url: 'https://api.github.com/users/yyx990803/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [],
            state: 'closed',
            locked: true,
            assignee: null,
            assignees: [],
            milestone: null,
            comments: 5,
            created_at: '2019-03-21T09:43:15Z',
            updated_at: '2023-11-17T00:19:33Z',
            closed_at: '2019-04-08T08:46:28Z',
            author_association: 'MEMBER',
            active_lock_reason: null,
            body: "- Start Date: 2019-03-12\r\n- Target Major Version: 3.x\r\n- Reference Issues: N/A\r\n- Implementation PR: N/A\r\n\r\n# Summary\r\n\r\n- Functional components must be written as plain functions\r\n  - `{ functional: true }` option removed\r\n  - `<template functional>` no longer supported\r\n- Async component must be created via the `createAsyncComponent` API method\r\n\r\n# Basic example\r\n\r\n``` js\r\nimport { h } from 'vue'\r\n\r\nconst FunctionalComp = props => {\r\n  return h('div', `Hello! ${props.name}`)\r\n}\r\n```\r\n\r\n``` js\r\nimport { createAsyncComponent } from 'vue'\r\n\r\nconst AsyncComp = createAsyncComponent(() => import('./Foo.vue'))\r\n```\r\n\r\n# Motivation\r\n\r\n## Simplify Functional Components\r\n\r\nIn 2.x, functional components must be created using the following format:\r\n\r\n``` js\r\nconst FunctionalComp = {\r\n  functional: true,\r\n  render(h) {\r\n    return h('div', `Hello! ${props.name}`)\r\n  }\r\n}\r\n```\r\n\r\nThis has the following issues:\r\n\r\n- Even when the component needs nothing but the render function, it still needs to use the object with `functional: true`.\r\n\r\n- Some options are supported (e.g. `props` and `inject`) but others are not (e.g. `components`). However, users often expect all options to be supported because it looks so similar to a normal stateful component (especially when they use SFC with `<template functional>`).\r\n\r\nAnother aspect of the problem is that we've noticed some users are using functional components solely for performance reasons, e.g. in SFCs with `<template functional>`, and are requesting us to support more stateful component options in functional components. However, I don't think this is something we should invest more time in.\r\n\r\nIn v3, the performance difference between stateful and functional components has been drastically reduced and will be insignificant in most use cases. As a result there is no longer a strong incentive to use functional components just for performance, which also no longer justifies the maintenance cost of supporting `<template functional>`. Functional components in v3 should be used primarily for simplicity, not performance.\r\n\r\n# Detailed Design\r\n\r\nIn 3.x, we intend to support functional components **only** as plain functions:\r\n\r\n``` js\r\nimport { h } from 'vue'\r\n\r\nconst FunctionalComp = (props, slots) => {\r\n  return h('div', `Hello! ${props.name}`)\r\n}\r\n```\r\n\r\n- The `functional` option is removed, and object format with `{ functional: true }` is no longer supported.\r\n\r\n- SFCs will no longer support `<template functional>` - if you need anything more than a function, just use a normal component.\r\n\r\n- The function signature has also changed - `h` is now imported globally. Instead of a render context, props and slots and other values are passed in. For more details on how the new arguments can replace 2.x functional render context, see the [Render Function API Change RFC](https://github.com/vuejs/vue-next/issues/29).\r\n\r\n## Runtime Props Validation\r\n\r\nProps declaration is now optional (only necessary when runtime validation is needed). To add runtime validation or default values, attach `props` to the function itself:\r\n\r\n``` js\r\nconst FunctionalComp = props => {\r\n  return h('div', `Hello! ${props.name}`)\r\n}\r\n\r\nFunctionalComp.props = {\r\n  name: String\r\n}\r\n```\r\n\r\n## Async Component Creation\r\n\r\nWith the functional component change, Vue's runtime won't be able to tell whether a function is being provided as a functional component or an async component factory. So in v3 async components must now be created via a new API method:\r\n\r\n``` js\r\nimport { createAsyncComponent } from 'vue'\r\n\r\nconst AsyncComp = createAsyncComponent(() => import('./Foo.vue'))\r\n```\r\n\r\nThe method also supports advanced options:\r\n\r\n``` js\r\nconst AsyncComp = createAsyncComponent({\r\n  factory: () => import('./Foo.vue'),\r\n  delay: 200,\r\n  timeout: 3000,\r\n  error: ErrorComponent,\r\n  loading: LoadingComponent\r\n})\r\n```\r\n\r\nThis will make async component creation a little more verbose, but async component creation is typically a low-frequency use case, and are often grouped in the same file (the routing configuration).\r\n\r\n# Drawbacks\r\n\r\n- Migration cost\r\n\r\n# Alternatives\r\n\r\nN/A\r\n\r\n# Adoption strategy\r\n\r\n- For functional components, a compatibility mode can be provided for one-at-a-time migration.\r\n\r\n- For async components, the migration is straightforward and we can emit warnings when function components return Promise instead of VNodes.\r\n\r\n- SFCs using `<template functional>` should be converted to normal SFCs.\r\n",
            reactions: {
                url: 'https://api.github.com/repos/vuejs/core/issues/28/reactions',
                total_count: 0,
                '+1': 0,
                '-1': 0,
                laugh: 0,
                hooray: 0,
                confused: 0,
                heart: 0,
                rocket: 0,
                eyes: 0,
            },
            timeline_url: 'https://api.github.com/repos/vuejs/core/issues/28/timeline',
            performed_via_github_app: null,
            state_reason: 'completed',
            score: 1.0,
        },
        {
            url: 'https://api.github.com/repos/vuejs/core/issues/29',
            repository_url: 'https://api.github.com/repos/vuejs/core',
            labels_url: 'https://api.github.com/repos/vuejs/core/issues/29/labels{/name}',
            comments_url: 'https://api.github.com/repos/vuejs/core/issues/29/comments',
            events_url: 'https://api.github.com/repos/vuejs/core/issues/29/events',
            html_url: 'https://github.com/vuejs/core/issues/29',
            id: 423641556,
            node_id: 'MDU6SXNzdWU0MjM2NDE1NTY=',
            number: 29,
            title: 'Render Function API Change',
            user: {
                login: 'yyx990803',
                id: 499550,
                node_id: 'MDQ6VXNlcjQ5OTU1MA==',
                avatar_url: 'https://avatars.githubusercontent.com/u/499550?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/yyx990803',
                html_url: 'https://github.com/yyx990803',
                followers_url: 'https://api.github.com/users/yyx990803/followers',
                following_url: 'https://api.github.com/users/yyx990803/following{/other_user}',
                gists_url: 'https://api.github.com/users/yyx990803/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/yyx990803/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/yyx990803/subscriptions',
                organizations_url: 'https://api.github.com/users/yyx990803/orgs',
                repos_url: 'https://api.github.com/users/yyx990803/repos',
                events_url: 'https://api.github.com/users/yyx990803/events{/privacy}',
                received_events_url: 'https://api.github.com/users/yyx990803/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [],
            state: 'closed',
            locked: true,
            assignee: null,
            assignees: [],
            milestone: null,
            comments: 6,
            created_at: '2019-03-21T09:44:07Z',
            updated_at: '2023-11-17T00:19:32Z',
            closed_at: '2019-04-08T08:57:26Z',
            author_association: 'MEMBER',
            active_lock_reason: null,
            body: "- Start Date: 2019-03-12\r\n- Target Major Version: 3.x\r\n- Reference Issues: N/A\r\n- Implementation PR: N/A\r\n\r\n# Summary\r\n\r\n- `h` is now globally imported instead of passed to render functions as argument\r\n- render function arguments changed and made consistent between stateful and functional components\r\n- VNodes now have a flat data structure\r\n\r\n# Basic example\r\n\r\n``` js\r\n// globally imported `h`\r\nimport { h } from 'vue'\r\n\r\nexport default {\r\n  // adjusted render function arguments\r\n  render(props, slots) {\r\n    return h(\r\n      'div',\r\n      // flat data structure\r\n      { id: props.id },\r\n      slots.default()\r\n    )\r\n  }\r\n}\r\n```\r\n\r\n# Motivation\r\n\r\nIn 2.x, VNodes are context-specific - which means every VNode created is bound to the component instance that created it (the \"context\"). This is because we need to support the following use cases:\r\n\r\n``` js\r\n// looking up a component based on a string ID\r\nh('some-component')\r\n\r\nh('div', {\r\n  directives: [\r\n    {\r\n      name: 'foo', // looking up a directive by string ID\r\n      // ...\r\n    }\r\n  ]\r\n})\r\n```\r\n\r\nIn order to look up locally/globally registered components and directives, we need to know the context component instance that \"owns\" the VNode. This is why in 2.x `h` is passed in as an argument, because the `h` passed into each render function is a curried version that is pre-bound to the context instance.\r\n\r\nThis has created a number of inconveniences, for example when trying to extract part of the render logic into a separate function, `h` needs to be passed along:\r\n\r\n``` js\r\nfunction renderSomething(h) {\r\n  return h('div')\r\n}\r\n\r\nexport default {\r\n  render(h) {\r\n    return renderSomething(h)\r\n  }\r\n}\r\n```\r\n\r\nWhen using JSX, this is especially cumbersome since `h` is used implicitly and isn't needed in user code. Our JSX plugin has to perform automatic `h` injection in order to alleviate this, but the logic is complex and fragile.\r\n\r\nIn 3.0 we have found ways to make VNodes context-free. They can now be created anywhere using the globally imported `h` function, so it only needs to be imported once in any file.\r\n\r\n---\r\n\r\nAnother issue with 2.x's render function API is the nested VNode data structure:\r\n\r\n``` js\r\nh('div', {\r\n  class: ['foo', 'bar'],\r\n  style: { }\r\n  attrs: { id: 'foo' },\r\n  domProps: { innerHTML: '' },\r\n  on: { click: foo }\r\n})\r\n```\r\n\r\nThis structure was inherited from Snabbdom, the original virtual dom implementation Vue 2.x was based on. The reason for this design was so that the diffing logic can be modular: an individual module (e.g. the `class` module) would only need to work on the `class` property. It is also more explicit what each binding will be processed as.\r\n\r\nHowever, over time we have noticed there are a number of drawbacks of the nested structure compared to a flat structure:\r\n\r\n- More verbose to write\r\n- `class` and `style` special cases are somewhat inconsistent\r\n- More memory usage (more objects allocated)\r\n- Slower to diff (each nested object needs its own iteration loop)\r\n- More complex / expensive to clone / merge / spread\r\n- Needs more special rules / implicit conversions when working with JSX\r\n\r\nIn 3.x, we are moving towards a flat VNode data structure to address these problems.\r\n\r\n# Detailed design\r\n\r\n## Globally imported `h` function\r\n\r\n`h` is now globally imported:\r\n\r\n``` js\r\nimport { h } from 'vue'\r\n\r\nexport default {\r\n  render() {\r\n    return h('div')\r\n  }\r\n}\r\n```\r\n\r\n## Render Function Arguments Change\r\n\r\nWith `h` no longer needed as an argument, the `render` function now receives a new set of arguments:\r\n\r\n``` js\r\n// MyComponent.js\r\nexport default {\r\n  render(\r\n    // declared props\r\n    props,\r\n    // resolved slots\r\n    slots,\r\n    // fallthrough attributes\r\n    attrs,\r\n    // the raw vnode in parent scope representing this component\r\n    vnode\r\n  ) {\r\n\r\n  }\r\n}\r\n```\r\n\r\n- `props` and `attrs` will be equivalent to `this.$props` and `this.$attrs` - also see [Optional Props Declaration](https://github.com/vuejs/vue-next/issues/26) and [Attribute Fallthrough](https://github.com/vuejs/vue-next/issues/27)\r\n\r\n- `slots` will be equivalent to `this.$slots` - also see [Slots Unification](https://github.com/vuejs/rfcs/blob/slots-unification/active-rfcs/0000-slots-unification.md)\r\n\r\n- `vnode` will be equivalent to `this.$vnode`, which is the raw vnode that represents this component in parent scope, i.e. the return value of `h(MyComponent, { ... })`.\r\n\r\nNote that the render function for a functional component will now also have the same signature, which makes it consistent in both stateful and functional components:\r\n\r\n``` js\r\nconst FunctionalComp = (props, slots, attrs, vnode) => {\r\n  // ...\r\n}\r\n```\r\n\r\nThe new list of arguments should provide the ability to fully replace the current functional render context:\r\n\r\n- `props` and `slots` have equivalent values\r\n- `data` and `children` can be accessed directly on `vnode`\r\n- `listeners` will be included in `attrs`\r\n- `injections` will have a dedicated new API:\r\n\r\n  ``` js\r\n  import { resolveInjection } from 'vue'\r\n  import { themeSymbol } from './ThemeProvider'\r\n\r\n  const FunctionalComp = props => {\r\n    const theme = resolveInjection(themeSymbol)\r\n    return h('div', `Using theme ${theme}`)\r\n  }\r\n  ```\r\n\r\n- `parent` access will be removed. This was an escape hatch for some internal use cases - in userland code, props and injections should be preferred.\r\n\r\n## Flat VNode Data Format\r\n\r\n``` js\r\n// before\r\n{\r\n  class: ['foo', 'bar'],\r\n  style: { color: 'red' },\r\n  attrs: { id: 'foo' },\r\n  domProps: { innerHTML: '' },\r\n  on: { click: foo },\r\n  key: 'foo'\r\n}\r\n\r\n// after\r\n{\r\n  class: ['foo', 'bar'],\r\n  style: { color: 'red' },\r\n  id: 'foo',\r\n  innerHTML: '',\r\n  onClick: foo,\r\n  key: 'foo'\r\n}\r\n```\r\n\r\nWith the flat structure, the VNode data props are handled using the following rules:\r\n\r\n- `key`, `ref` and `slots` are reserved special properties\r\n- `class` and `style` have the same API as 2.x\r\n- props that start with `on` are handled as `v-on` bindings\r\n- for anything else:\r\n  - If the key exists as a property on the DOM node, it is set as a DOM property;\r\n  - Otherwise it is set as an attribute.\r\n\r\nDue to the flat structure, `this.$attrs` inside a component now also contains any raw props that are not explicitly declared by the component, including `onXXX` listeners. This makes it much easier to write wrapper components - simply pass `this.$attrs` down with `v-bind=\"$attrs\"` (as a result, `this.$listeners` will also be removed).\r\n\r\n## Context-free VNodes\r\n\r\nWith VNodes being context-free, we can no longer use a string ID (e.g. `h('some-component')`) to implicitly lookup globally registered components. Same for looking up directives. Instead, we need to use an imported API:\r\n\r\n``` js\r\nimport { h, resolveComponent, resolveDirective, applyDirectives } from 'vue'\r\n\r\nexport default {\r\n  render() {\r\n    const comp = resolveComponent('some-global-comp')\r\n    const fooDir = resolveDirective('foo')\r\n    const barDir = resolveDirective('bar')\r\n\r\n    // <some-global-comp v-foo=\"x\" v-bar=\"y\" />\r\n    return applyDirectives(\r\n      h(comp),\r\n      this,\r\n      [fooDir, this.x],\r\n      [barDir, this.y]\r\n    )\r\n  }\r\n}\r\n```\r\n\r\nThis will mostly be used in compiler-generated output, since manually written render function code typically directly import the components and use them by value, and use rarely have to use directives.\r\n\r\n# Drawbacks\r\n\r\n## Reliance on Vue Core\r\n\r\n`h` being globally imported means any library that contains Vue components will include `import { h } from 'vue'` somewhere (this is implicitly included in render functions compiled from templates as well). This creates a bit of overhead since it requires library authors to properly configure the externalization of Vue in their build setup:\r\n\r\n- Vue should not be bundled into the library;\r\n- For module builds, the import should be left alone and be handled by the end user bundler;\r\n- For UMD / browser builds, it should try the global `Vue.h` first and fallback to `require` calls.\r\n\r\nThis is common practice for React libs and possible with both webpack and Rollup. A decent number of Vue libs also already does this. We just need to provide proper documentation and tooling support.\r\n\r\n# Alternatives\r\n\r\nN/A\r\n\r\n# Adoption strategy\r\n\r\n- For template users this will not affect them at all.\r\n\r\n- For JSX users the impact will also be minimal, but we do need to rewrite our JSX plugin.\r\n\r\n- Users who manually write render functions using `h` will be subject to major migration cost. This should be a very small percentage of our user base, but we do need to provide a decent migration path.\r\n\r\n  - It's possible to provide a compat plugin that patches render functions and make them expose a 2.x compatible arguments, and can be turned off in each component for a one-at-a-time migration process.\r\n\r\n  - It's also possible to provide a codemod that auto-converts `h` calls to use the new VNode data format, since the mapping is pretty mechanical.\r\n\r\n- Functional components using context will likely have to be manually migrated, but a smilar adaptor can be provided.\r\n",
            reactions: {
                url: 'https://api.github.com/repos/vuejs/core/issues/29/reactions',
                total_count: 0,
                '+1': 0,
                '-1': 0,
                laugh: 0,
                hooray: 0,
                confused: 0,
                heart: 0,
                rocket: 0,
                eyes: 0,
            },
            timeline_url: 'https://api.github.com/repos/vuejs/core/issues/29/timeline',
            performed_via_github_app: null,
            state_reason: 'completed',
            score: 1.0,
        },
        {
            url: 'https://api.github.com/repos/vuejs/core/issues/12',
            repository_url: 'https://api.github.com/repos/vuejs/core',
            labels_url: 'https://api.github.com/repos/vuejs/core/issues/12/labels{/name}',
            comments_url: 'https://api.github.com/repos/vuejs/core/issues/12/comments',
            events_url: 'https://api.github.com/repos/vuejs/core/issues/12/events',
            html_url: 'https://github.com/vuejs/core/issues/12',
            id: 374811455,
            node_id: 'MDU6SXNzdWUzNzQ4MTE0NTU=',
            number: 12,
            title: 'Hooks integration',
            user: {
                login: 'yyx990803',
                id: 499550,
                node_id: 'MDQ6VXNlcjQ5OTU1MA==',
                avatar_url: 'https://avatars.githubusercontent.com/u/499550?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/yyx990803',
                html_url: 'https://github.com/yyx990803',
                followers_url: 'https://api.github.com/users/yyx990803/followers',
                following_url: 'https://api.github.com/users/yyx990803/following{/other_user}',
                gists_url: 'https://api.github.com/users/yyx990803/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/yyx990803/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/yyx990803/subscriptions',
                organizations_url: 'https://api.github.com/users/yyx990803/orgs',
                repos_url: 'https://api.github.com/users/yyx990803/repos',
                events_url: 'https://api.github.com/users/yyx990803/events{/privacy}',
                received_events_url: 'https://api.github.com/users/yyx990803/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [],
            state: 'closed',
            locked: true,
            assignee: null,
            assignees: [],
            milestone: null,
            comments: 14,
            created_at: '2018-10-28T23:22:35Z',
            updated_at: '2023-11-17T00:19:31Z',
            closed_at: '2019-04-09T08:03:31Z',
            author_association: 'MEMBER',
            active_lock_reason: null,
            body: "### Rationale\r\n\r\nhttps://twitter.com/youyuxi/status/1056673771376050176\r\n\r\nHooks provides the ability to:\r\n- encapsulate arbitrarily complex logic in plain functions\r\n- does not pollute component namespace (explicit injection)\r\n- does not result in additional component instances like HOCs / scoped-slot components\r\n- superior composability, e.g. passing the state from one hook to another effect hook. This is possible by referencing fields injected by other mixins in a mixin, but that is super flaky and hooks composition is way cleaner.\r\n- compresses extremely well\r\n\r\nHowever, it is quite different from the intuitions of idiomatic JS, and has a number of issues that can be confusing to beginners. This is why we should integrate it in a way that complements Vue's existing API, and primarily use it as a composition mechanism (replacement of mixins, HOCs and scoped-slot components).\r\n\r\n### Proposed usage\r\n\r\nDirectly usable inside class render functions (can be mixed with normal class usage):\r\n\r\n``` js\r\nclass Counter extends Component {\r\n  foo = 'hello'\r\n  render() {\r\n    const [count, setCount] = useState(0)\r\n    return h(\r\n      'div',\r\n      {\r\n        onClick: () => {\r\n          setCount(count + 1)\r\n        }\r\n      },\r\n      this.foo + ' ' + count\r\n    )\r\n  }\r\n}\r\n```\r\n\r\nFor template usage:\r\n\r\n``` js\r\nclass Counter extends Component {\r\n  static template = `\r\n    <div @click=\"setCount(count + 1)\">\r\n      {{ count }}\r\n    </div>\r\n  `\r\n\r\n  hooks() {\r\n    const [count, setCount] = useState(0)\r\n    // fields returned here will become available in templates\r\n    return {\r\n      count,\r\n      setCount\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nIn SFC w/ object syntax:\r\n\r\n``` vue\r\n<template>\r\n  <div @click=\"setCount(count + 1)\">\r\n    {{ count }}\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { useState } from 'vue'\r\n\r\nexport default {\r\n  hooks() {\r\n    const [count, setCount] = useState(0)\r\n    return {\r\n      count,\r\n      setCount\r\n    }\r\n  }\r\n}\r\n</script>\r\n```\r\n\r\nNote: counter is a super contrived example mainly to illustrate how the API works. A more practical example would be this [`useAPI` custom hook](https://github.com/yyx990803/vue-hooks/blob/master/example.html#L7), which is similar to libs like `vue-promised`.\r\n\r\n### Implementation Notes\r\n\r\n[Proposed usage for `useState` and `useEffect` are already implemented.](https://github.com/vuejs/vue-next/blob/master/packages/runtime-core/__tests__/hooks.spec.ts)\r\n\r\n### Update: Mapping w/ Vue's existing API\r\n\r\nTo ease the learning curve for Vue users, we can implement hooks that mimic Vue's current API:\r\n\r\n``` js\r\nexport default {\r\n  render() {\r\n    const data = useData({\r\n      count: 0\r\n    })\r\n\r\n    useWatch(() => data.count, (val, prevVal) => {\r\n      console.log(`count is: ${val}`)\r\n    })\r\n\r\n    const double = useComputed(() => data.count * 2)\r\n\r\n    useMounted(() => {\r\n      console.log('mounted!')\r\n    })\r\n    useUnmounted(() => {\r\n      console.log('unmounted!')\r\n    })\r\n    useUpdated(() => {\r\n      console.log('updated!')\r\n    })\r\n\r\n    return [\r\n      h('div', `count is ${data.count}`),\r\n      h('div', `double count is ${double}`),\r\n      h('button', { onClick: () => {\r\n        // still got that direct mutation!\r\n        data.count++\r\n      }}, 'count++')\r\n    ]\r\n  }\r\n}\r\n```",
            reactions: {
                url: 'https://api.github.com/repos/vuejs/core/issues/12/reactions',
                total_count: 20,
                '+1': 11,
                '-1': 0,
                laugh: 0,
                hooray: 3,
                confused: 0,
                heart: 6,
                rocket: 0,
                eyes: 0,
            },
            timeline_url: 'https://api.github.com/repos/vuejs/core/issues/12/timeline',
            performed_via_github_app: null,
            state_reason: 'completed',
            score: 1.0,
        },
        {
            url: 'https://api.github.com/repos/vuejs/core/issues/32',
            repository_url: 'https://api.github.com/repos/vuejs/core',
            labels_url: 'https://api.github.com/repos/vuejs/core/issues/32/labels{/name}',
            comments_url: 'https://api.github.com/repos/vuejs/core/issues/32/comments',
            events_url: 'https://api.github.com/repos/vuejs/core/issues/32/events',
            html_url: 'https://github.com/vuejs/core/issues/32',
            id: 430872027,
            node_id: 'MDU6SXNzdWU0MzA4NzIwMjc=',
            number: 32,
            title: 'v-model changes',
            user: {
                login: 'yyx990803',
                id: 499550,
                node_id: 'MDQ6VXNlcjQ5OTU1MA==',
                avatar_url: 'https://avatars.githubusercontent.com/u/499550?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/yyx990803',
                html_url: 'https://github.com/yyx990803',
                followers_url: 'https://api.github.com/users/yyx990803/followers',
                following_url: 'https://api.github.com/users/yyx990803/following{/other_user}',
                gists_url: 'https://api.github.com/users/yyx990803/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/yyx990803/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/yyx990803/subscriptions',
                organizations_url: 'https://api.github.com/users/yyx990803/orgs',
                repos_url: 'https://api.github.com/users/yyx990803/repos',
                events_url: 'https://api.github.com/users/yyx990803/events{/privacy}',
                received_events_url: 'https://api.github.com/users/yyx990803/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [],
            state: 'closed',
            locked: true,
            assignee: null,
            assignees: [],
            milestone: null,
            comments: 3,
            created_at: '2019-04-09T09:47:07Z',
            updated_at: '2023-11-17T00:19:29Z',
            closed_at: '2019-04-10T01:30:33Z',
            author_association: 'MEMBER',
            active_lock_reason: null,
            body: '- Start Date: 2019-04-09\r\n- Target Major Version: 3.x\r\n- Reference Issues: vuejs/rfcs#8\r\n- Implementation PR: N/A\r\n\r\n# Summary\r\n\r\nAdjust `v-model` API when used on custom components for more flexible usage, and adjust compilation output on native elements for more succinct compiler output.\r\n\r\nThis builds on top of vuejs/rfcs#8 (Replace `v-bind`\'s `.sync` with a `v-model` argument).\r\n\r\n# Basic example\r\n\r\n# Motivation\r\n\r\nPreviously, `v-model="foo"` on components roughly compiles to the following:\r\n\r\n``` js\r\nh(Comp, {\r\n  value: foo,\r\n  onInput: value => {\r\n    foo = value\r\n  }\r\n})\r\n```\r\n\r\nHowever, this requires the component to always use the `value` prop for binding with `v-model` when the component may want to expose the `value` prop for a different purpose.\r\n\r\nIn 2.2 we introduced the `model` component option that allows the component to customize the prop and event to use for `v-model`. However, this still only allows one `v-model` to be used on the component. In practice we are seeing some components that need to sync multiple values, and the other values have to use `v-bind.sync`. We noticed that `v-model` and `v-bind.sync` are fundamentally doing the same thing and can be combined into a single construct by allowing `v-model` to accept arguments (as proposed in vuejs/rfcs#8).\r\n\r\n# Detailed design\r\n\r\nIn 3.0, the `model` option will be removed. `v-model="foo"` (without argument) on a component compiles to the following instead:\r\n\r\n``` js\r\nh(Comp, {\r\n  modelValue: foo,\r\n  \'onUpdate:modelValue\': value => {\r\n    foo = value\r\n  }\r\n})\r\n```\r\n\r\nIf the component wants to support `v-model` without an argument, it should expect a prop named `modelValue`. To sync its value back to the parent, the child should emit an event named `"update:modelValue"` (see [Render Function API change](https://github.com/vuejs/rfcs/blob/render-fn-api-change/active-rfcs/0000-render-function-api-change.md) for details on the new VNode data structure).\r\n\r\nThe default compilation output uses the prop name `modelValue` so that it is clear this prop is compiled from `v-model`. This will be useful to differentiate it from the original `value` prop which could\'ve been created manually by the user (especially in the native element case detailed in a later section).\r\n\r\nRFC #8 proposes the ability for `v-model` to accept arguments. The argument can be used to denote the prop `v-model` should bind to. `v-model:value="foo"` compiles to:\r\n\r\n``` js\r\nh(Comp, {\r\n  value: foo,\r\n  \'onUpdate:value\': value => {\r\n    foo = value\r\n  }\r\n})\r\n```\r\n\r\nIn this case, the child component expects a `value` prop and emits `"update:value"` to sync.\r\n\r\nNote that this enables multiple `v-model` bindings on the same component, each syncing a different prop, without the need for extra options in the component:\r\n\r\n``` html\r\n<InviteeForm\r\n  v-model:name="inviteeName"\r\n  v-model:email="inviteeEmail"\r\n/>\r\n```\r\n\r\n## Usage on Native Elements\r\n\r\nAnother aspect of the `v-model` usage is on native elements. In 2.x, the compiler produces different code based on the element type `v-model` is used on. For example, it outputs different prop/event combinations for `<input type="text">` and `<input type="checkbox">`. However, this strategy does not handle dynamic element or input types very well:\r\n\r\n``` html\r\n<input :type="dynamicType" v-model="foo">\r\n```\r\n\r\nThe compiler has no way to guess the correct prop/event combination at compile time, so it has to produce [very verbose code](https://template-explorer.vuejs.org/#%3Cinput%20%3Atype%3D%22foo%22%20v-model%3D%22bar%22%3E) to cover possible cases.\r\n\r\nIn 3.0, `v-model` on native elements produces the exact same output as when used on components. For example, `<input v-model="foo">` compiles to:\r\n\r\n``` js\r\nh(\'input\', {\r\n  modelValue: foo,\r\n  \'onUpdate:modelValue\': value => {\r\n    foo = value\r\n  }\r\n})\r\n```\r\n\r\nThe idea is to move element/input type specific handling to the runtime. For this reason, the `v-model` output must be something special (`modelValue`) for the runtime to pick up and transform. If we use the default value and input, the runtime won\'t know if it\'s created by `v-model` or manually by the user.\r\n\r\nThe module responsible for patching element props for the web platform will dynamically determine what actual prop/event to bind. For example, on `<input type="checkbox">`, `modelValue` will be mapped to `checked` and `"update:modelValue"` will be mapped to `"change"`. Moving the logic to runtime allows the framework to handle dynamic cases better, and enables the compiler to output less verbose code.\r\n\r\n# Drawbacks\r\n\r\nTODO\r\n\r\n# Alternatives\r\n\r\nN/A\r\n\r\n# Adoption strategy\r\n\r\nTODO\r\n\r\n# Unresolved questions\r\n\r\n## Usage on Custom Elements\r\n\r\nIt is still difficult to use `v-model` on native custom elements, since 3rd party custom elements have unknown prop/event combinations and do not necessarily follow Vue\'s sync event naming conventions. For example:\r\n\r\n``` html\r\n<custom-input v-model="foo"></custom-input>\r\n```\r\n\r\nVue has no information on the property to bind to or the event to listen to. One possible way to deal with this is to use the `type` attribute as a hint:\r\n\r\n``` html\r\n<custom-input v-model="foo" type="checkbox"></custom-input>\r\n```\r\n\r\nThis would tell Vue to bind `v-model` using the same logic for `<input type="checkbox">`, using `checked` as the prop and `change` as the event.\r\n\r\nIf the custom element doesn\'t behave like any existing input type, then it\'s probably better off to use explicit `v-bind` and `v-on` bindings.\r\n',
            reactions: {
                url: 'https://api.github.com/repos/vuejs/core/issues/32/reactions',
                total_count: 1,
                '+1': 1,
                '-1': 0,
                laugh: 0,
                hooray: 0,
                confused: 0,
                heart: 0,
                rocket: 0,
                eyes: 0,
            },
            timeline_url: 'https://api.github.com/repos/vuejs/core/issues/32/timeline',
            performed_via_github_app: null,
            state_reason: 'completed',
            score: 1.0,
        },
        {
            url: 'https://api.github.com/repos/vuejs/core/issues/33',
            repository_url: 'https://api.github.com/repos/vuejs/core',
            labels_url: 'https://api.github.com/repos/vuejs/core/issues/33/labels{/name}',
            comments_url: 'https://api.github.com/repos/vuejs/core/issues/33/comments',
            events_url: 'https://api.github.com/repos/vuejs/core/issues/33/events',
            html_url: 'https://github.com/vuejs/core/issues/33',
            id: 431355366,
            node_id: 'MDU6SXNzdWU0MzEzNTUzNjY=',
            number: 33,
            title: 'Custom Directive API Change',
            user: {
                login: 'yyx990803',
                id: 499550,
                node_id: 'MDQ6VXNlcjQ5OTU1MA==',
                avatar_url: 'https://avatars.githubusercontent.com/u/499550?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/yyx990803',
                html_url: 'https://github.com/yyx990803',
                followers_url: 'https://api.github.com/users/yyx990803/followers',
                following_url: 'https://api.github.com/users/yyx990803/following{/other_user}',
                gists_url: 'https://api.github.com/users/yyx990803/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/yyx990803/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/yyx990803/subscriptions',
                organizations_url: 'https://api.github.com/users/yyx990803/orgs',
                repos_url: 'https://api.github.com/users/yyx990803/repos',
                events_url: 'https://api.github.com/users/yyx990803/events{/privacy}',
                received_events_url: 'https://api.github.com/users/yyx990803/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [],
            state: 'closed',
            locked: true,
            assignee: null,
            assignees: [],
            milestone: null,
            comments: 6,
            created_at: '2019-04-10T07:52:22Z',
            updated_at: '2023-11-17T00:19:26Z',
            closed_at: '2019-04-12T01:55:37Z',
            author_association: 'MEMBER',
            active_lock_reason: null,
            body: '- Start Date: 2019-04-09\r\n- Target Major Version: 3.x\r\n- Reference Issues: N/A\r\n- Implementation PR: N/A\r\n\r\n# Summary\r\n\r\n- Re-design custom directive API so that it better aligns with component lifecycle\r\n\r\n- Custom directives usage on components will follow the same rules as discussed in the [Attribute Fallthrough Behavior RFC](https://github.com/vuejs/rfcs/pull/26). It will be controlled by the child component via `v-bind="$attrs"`.\r\n\r\n# Basic example\r\n\r\n## Before\r\n\r\n``` js\r\nconst MyDirective = {\r\n  bind(el, binding, vnode, prevVnode) {},\r\n  inserted() {},\r\n  update() {},\r\n  componentUpdated() {},\r\n  unbind() {}\r\n}\r\n```\r\n\r\n## After\r\n\r\n``` js\r\nconst MyDirective = {\r\n  beforeMount(el, binding, vnode, prevVnode) {},\r\n  mounted() {},\r\n  beforeUpdate() {},\r\n  updated() {},\r\n  beforeUnmount() {}, // new\r\n  unmounted() {}\r\n}\r\n```\r\n\r\n# Motivation\r\n\r\nMake custom directive hook names more consistent with the component lifecycle.\r\n\r\n# Detailed design\r\n\r\n## Hooks Renaming\r\n\r\nExisting hooks are renamed to map better to the component lifecycle, with some timing adjustments. Arguments passed to the hooks remain unchanged.\r\n\r\n- `bind` -> `beforeMount`\r\n- `inserted` -> `mounted`\r\n- `beforeUpdate` *new, called before the element itself is updated*\r\n- ~~`update`~~ *removed, use `updated` instead*\r\n- `componentUpdated` -> `updated`\r\n- `beforeUnmount` *new*\r\n- `unbind` -> `unmounted`\r\n\r\n## Usage on Components\r\n\r\nIn 3.0, with fragments support, components can potentially have more than one root nodes. This creates an issue when a custom directive is used on a component with multiple root nodes.\r\n\r\nTo explain the details of how custom directives will work on components in 3.0, we need to first understand how custom directives are compiled in 3.0. For a directive like this:\r\n\r\n``` html\r\n<div v-foo="bar"></div>\r\n```\r\n\r\nWill roughly compile into this:\r\n\r\n``` js\r\nconst vFoo = resolveDirective(\'foo\')\r\n\r\nreturn applyDirectives(h(\'div\'), this, [\r\n  [vFoo, bar]\r\n])\r\n```\r\n\r\nWhere `vFoo` will be the directive object written by the user, which contains hooks like `mounted` and `updated`.\r\n\r\n`applyDirective` returns a cloned VNode with the user hooks wrapped and injected as vnode lifecycle hooks (see [Render Function API Changes](https://github.com/vuejs/rfcs/blob/render-fn-api-change/active-rfcs/0000-render-function-api-change.md#special-reserved-props) for more details):\r\n\r\n``` js\r\n{\r\n  vnodeMounted(vnode, prevVNode) {\r\n    // call vFoo.mounted(...)\r\n  }\r\n}\r\n```\r\n\r\n**As a result, custom directives are fully included as part of a VNode\'s data. When a custom directive is used on a component, these `vnodeXXX` hooks are passed down to the component as extraneous props and end up in `this.$attrs`.**\r\n\r\nThis is consistent with the attribute fallthrough behavior discussed in [vuejs/rfcs#26](https://github.com/vuejs/rfcs/pull/26). So, the rule for custom directives on a component will be the same as other extraneous attributes: it is up to the child component to decide where and whether to apply it. When the child component uses `v-bind="$attrs"` on an inner element, it will apply any custom directives used on it as well.\r\n\r\n# Drawbacks\r\n\r\nN/A\r\n\r\n# Alternatives\r\n\r\nN/A\r\n\r\n# Adoption strategy\r\n\r\n- The renaming should be easy to support in the compat build\r\n- Codemod should also be straightforward\r\n- For directives used on components, the warning on unused `$attrs` as discussed in [Attribute Fallthrough Behavior](https://github.com/vuejs/rfcs/pull/26) should apply as well.\r\n\r\n# Unresolved questions\r\n\r\nN/A\r\n',
            reactions: {
                url: 'https://api.github.com/repos/vuejs/core/issues/33/reactions',
                total_count: 0,
                '+1': 0,
                '-1': 0,
                laugh: 0,
                hooray: 0,
                confused: 0,
                heart: 0,
                rocket: 0,
                eyes: 0,
            },
            timeline_url: 'https://api.github.com/repos/vuejs/core/issues/33/timeline',
            performed_via_github_app: null,
            state_reason: 'completed',
            score: 1.0,
        },
        {
            url: 'https://api.github.com/repos/vuejs/core/issues/35',
            repository_url: 'https://api.github.com/repos/vuejs/core',
            labels_url: 'https://api.github.com/repos/vuejs/core/issues/35/labels{/name}',
            comments_url: 'https://api.github.com/repos/vuejs/core/issues/35/comments',
            events_url: 'https://api.github.com/repos/vuejs/core/issues/35/events',
            html_url: 'https://github.com/vuejs/core/issues/35',
            id: 452885105,
            node_id: 'MDU6SXNzdWU0NTI4ODUxMDU=',
            number: 35,
            title: 'RFC Draft: Function-based Component API',
            user: {
                login: 'yyx990803',
                id: 499550,
                node_id: 'MDQ6VXNlcjQ5OTU1MA==',
                avatar_url: 'https://avatars.githubusercontent.com/u/499550?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/yyx990803',
                html_url: 'https://github.com/yyx990803',
                followers_url: 'https://api.github.com/users/yyx990803/followers',
                following_url: 'https://api.github.com/users/yyx990803/following{/other_user}',
                gists_url: 'https://api.github.com/users/yyx990803/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/yyx990803/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/yyx990803/subscriptions',
                organizations_url: 'https://api.github.com/users/yyx990803/orgs',
                repos_url: 'https://api.github.com/users/yyx990803/repos',
                events_url: 'https://api.github.com/users/yyx990803/events{/privacy}',
                received_events_url: 'https://api.github.com/users/yyx990803/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [],
            state: 'closed',
            locked: true,
            assignee: null,
            assignees: [],
            milestone: null,
            comments: 16,
            created_at: '2019-06-06T07:59:50Z',
            updated_at: '2023-11-17T00:19:22Z',
            closed_at: '2019-06-25T09:33:24Z',
            author_association: 'MEMBER',
            active_lock_reason: null,
            body: "- Start Date: 2019-05-30\r\n- Target Major Version: 2.x / 3.x\r\n- Reference Issues: https://github.com/vuejs/rfcs/pull/22 https://github.com/vuejs/rfcs/pull/23\r\n- Implementation PR: (leave this empty)\r\n\r\n# Summary\r\n\r\nExpose logic-related component options via function-based APIs instead.\r\n\r\n# Basic example\r\n\r\n``` js\r\nimport { value, computed, watch, onMounted } from 'vue'\r\n\r\nconst App = {\r\n  template: `\r\n    <div>\r\n      <span>count is {{ count }}</span>\r\n      <span>plusOne is {{ plusOne }}</span>\r\n      <button @click=\"increment\">count++</button>\r\n    </div>\r\n  `,\r\n  setup() {\r\n    // reactive state\r\n    const count = value(0)\r\n    // computed state\r\n    const plusOne = computed(() => count.value + 1)\r\n    // method\r\n    const increment = () => { count.value++ }\r\n    // watch\r\n    watch(() => count.value * 2, val => {\r\n      console.log(`count * 2 is ${val}`)\r\n    })\r\n    // lifecycle\r\n    onMounted(() => {\r\n      console.log(`mounted`)\r\n    })\r\n    // expose bindings on render context\r\n    return {\r\n      count,\r\n      plusOne,\r\n      increment\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n# Motivation\r\n\r\n## Logic Composition\r\n\r\nOne of the key aspects of the component API is how to encapsulate and reuse logic across multiple components. With Vue 2.x's current API, there are a number of common patterns we've seen in the past, each with its own drawbacks. These include:\r\n\r\n- Mixins (via the `mixins` option)\r\n- Higher-order components (HOCs)\r\n- Renderless components (via scoped slots)\r\n\r\nThese patterns are discussed in more details in the [appendix](#prior-art-composition-patterns) - but in general, they all suffer from one or more of the drawbacks below:\r\n\r\n- Unclear sources for properties exposed on the render context. For example, when reading the template of a component using multiple mixins, it can be difficult to tell from which mixin a specific property was injected from.\r\n\r\n- Namespace clashing. Mixins can potentially clash on property and method names, while HOCs can clash on expected prop names.\r\n\r\n- Performance. HOCs and renderless components require extra stateful component instances that come at a performance cost.\r\n\r\nThe function based API, inspired by [React Hooks](https://reactjs.org/docs/hooks-intro.html), presents a clean and flexible way to compose logic inside and between components without any of these drawbacks. This can be achieved by extracting code related to a piece of logic into what we call a \"composition function\" and returning reactive state. Here is an example of using a composition function to extract the logic of listening to the mouse position:\r\n\r\n``` js\r\nfunction useMouse() {\r\n  const x = value(0)\r\n  const y = value(0)\r\n  const update = e => {\r\n    x.value = e.pageX\r\n    y.value = e.pageY\r\n  }\r\n  onMounted(() => {\r\n    window.addEventListener('mousemove', update)\r\n  })\r\n  onUnmounted(() => {\r\n    window.removeEventListener('mousemove', update)\r\n  })\r\n  return { x, y }\r\n}\r\n\r\n// in consuming component\r\nconst Component = {\r\n  setup() {\r\n    const { x, y } = useMouse()\r\n    const { z } = useOtherLogic()\r\n    return { x, y, z }\r\n  },\r\n  template: `<div>{{ x }} {{ y }} {{ z }}</div>`\r\n}\r\n```\r\n\r\nNote in the example above:\r\n\r\n- Properties exposed to the template have clear sources since they are values returned from composition functions;\r\n- Returned values from composition functions can be arbitrarily named so there is no namespace collision;\r\n- There are no unnecessary component instances created just for logic reuse purposes.\r\n\r\nSee also:\r\n\r\n- [Appendix: Comparison with React Hooks](#comparison-with-react-hooks)\r\n\r\n## Type Inference\r\n\r\nOne of the major goals of 3.0 is to provide better built-in TypeScript type inference support. Originally we tried to address this problem with the now-abandoned [Class API RFC](https://github.com/vuejs/rfcs/pull/17), but after discussion and prototyping we discovered that using Classes [doesn't fully address the typing issue](#type-issues-with-class-api).\r\n\r\nThe function-based APIs, on the other hand, are naturally type-friendly. In the prototype we have already achieved full typing support for the proposed APIs.\r\n\r\nSee also:\r\n\r\n- [Appendix: Type Issues with Class API](#type-issues-with-class-api)\r\n\r\n## Bundle Size\r\n\r\nFunction-based APIs are exposed as named ES exports and imported on demand. This makes them tree-shakable, and leaves more room for future API additions. Code written with function-based APIs also compresses better than object-or-class-based code, since (with standard minification) function and variable names can be shortened while object/class methods and properties cannot.\r\n\r\n# Detailed design\r\n\r\n## The `setup` function\r\n\r\nA new component option, `setup()` is introduced. As the name suggests, this is the place where we use the function-based APIs to setup the logic of our component. `setup()` is called when an instance of the component is created, after props resolution. The function receives the resolved props as its argument:\r\n\r\n``` js\r\nconst MyComponent = {\r\n  props: {\r\n    name: String\r\n  },\r\n  setup(props) {\r\n    console.log(props.name)\r\n  }\r\n}\r\n```\r\n\r\nNote this `props` object is reactive - i.e. it is updated when new props are passed in, and can be observed and reacted upon using the `watch` function introduced later in this RFC. However, for userland code, it is immutable during development (will emit warning if user code attempts to mutate it).\r\n\r\n## State\r\n\r\nSimilar to `data()`, `setup()` can return an object containing properties to be exposed to the template's render context:\r\n\r\n``` js\r\nconst MyComponent = {\r\n  props: {\r\n    name: String\r\n  },\r\n  setup(props) {\r\n    return {\r\n      msg: `hello ${props.name}!`\r\n    }\r\n  },\r\n  template: `<div>{{ msg }}</div>`\r\n}\r\n```\r\n\r\nThis works exactly like `data()` - `msg` becomes a reactive and mutable property, but **only on the render context.** In order to expose a reactive value that can be mutated by a function declared inside `setup()`, we can use the `value` API:\r\n\r\n``` js\r\nimport { value } from 'vue'\r\n\r\nconst MyComponent = {\r\n  setup(props) {\r\n    const msg = value('hello')\r\n    const appendName = () => {\r\n      msg.value = `hello ${props.name}`\r\n    }\r\n    return {\r\n      msg,\r\n      appendName\r\n    }\r\n  },\r\n  template: `<div @click=\"appendName\">{{ msg }}</div>`\r\n}\r\n```\r\n\r\nCalling `value()` returns a **value wrapper** object that contains a single reactive property: `.value`. This property points to the actual value the wrapper is holding - in the example above, a string. The value can be mutated:\r\n\r\n ``` js\r\n// read the value\r\nconsole.log(msg.value) // 'hello'\r\n // mutate the value\r\nmsg.value = 'bye'\r\n```\r\n\r\n### Why do we need value wrappers?\r\n\r\nPrimitive values in JavaScript like numbers and strings are not passed by reference. Returning a primitive value from a function means the receiving function will not be able to read the latest value when the original is mutated or replaced.\r\n\r\nValue wrappers are important because they provide a way to pass around mutable and reactive references for arbitrary value types. This is what enables composition functions to encapsulate the logic that manages the state while passing the state back to the components as a trackable reference:\r\n\r\n``` js\r\nsetup() {\r\n  const valueA = useLogicA() // logic inside useLogicA may mutate valueA\r\n  const valueB = useLogicB()\r\n  return {\r\n    valueA,\r\n    valueB\r\n  }\r\n}\r\n```\r\n\r\nValue wrappers can also hold non-primitive values and will make all nested properties reactive. Holding non-primitive values like objects and arrays inside a value wrapper provides the ability to entirely replace the value with a fresh one:\r\n\r\n``` js\r\nconst numbers = value([1, 2, 3])\r\n// replace the array with a filtered copy\r\nnumbers.value = numbers.value.filter(n => n > 1)\r\n```\r\n\r\nIf you want to create a non-wrapped reactive object, use `observable` (which is an exact equivalent of 2.x `Vue.observable` API):\r\n\r\n``` js\r\nimport { observable } from 'vue'\r\n\r\nconst object = observable({\r\n  count: 0\r\n})\r\n\r\nobject.count++\r\n```\r\n\r\n### Value Unwrapping\r\n\r\nNote in the last example we are using `{{ msg }}` in the template without the `.value` property access. This is because **value wrappers get \"unwrapped\" when they are accessed on the render context or as a nested property inside a reactive object.**\r\n\r\nYou can mutate an unwrapped value binding in inline handlers:\r\n\r\n``` js\r\nconst MyComponent = {\r\n  setup() {\r\n    return {\r\n      count: value(0)\r\n    }\r\n  },\r\n  template: `<button @click=\"count++\">{{ count }}</button>`\r\n}\r\n```\r\n\r\nValue wrappers are also automatically unwrapped when accessed as a nested property inside a reactive object:\r\n\r\n``` js\r\nconst count = value(0)\r\nconst obj = observable({\r\n  count\r\n})\r\n\r\nconsole.log(obj.count) // 0\r\n\r\nobj.count++\r\nconsole.log(obj.count) // 1\r\nconsole.log(count.value) // 1\r\n\r\ncount.value++\r\nconsole.log(obj.count) // 2\r\nconsole.log(count.value) // 2\r\n```\r\n\r\nAs a rule of thumb, the only occasions where you need to use `.value` is when directly accessing value wrappers as variables.\r\n\r\n### Computed Values\r\n\r\nIn addition to plain value wrappers, we can also create computed values:\r\n\r\n ``` js\r\nimport { value, computed } from 'vue'\r\n\r\nconst count = value(0)\r\nconst countPlusOne = computed(() => count.value + 1)\r\n\r\nconsole.log(countPlusOne.value) // 1\r\n\r\ncount.value++\r\nconsole.log(countPlusOne.value) // 2\r\n```\r\n\r\nA computed value behaves just like a 2.x computed property: it tracks its dependencies and only re-evaluates when dependencies have changed.\r\n\r\nComputed values can also be returned from `setup()` and will get unwrapped just like normal value wrappers. The main difference is that they are read-only by default - assigning to a computed value's `.value` property or attempting to mutate a computed value binding on the render context will be a no-op and result in a warning.\r\n\r\nTo create a writable computed value, provide a setter via the second argument:\r\n\r\n``` js\r\nconst count = value(0)\r\nconst writableComputed = computed(\r\n  // read\r\n  () => count.value + 1,\r\n  // write\r\n  val => {\r\n    count.value = val - 1\r\n  }\r\n)\r\n```\r\n\r\n## Watchers\r\n\r\nAll `.value` access are reactive, and can be tracked with the standalone `watch` API, which behaves like the 2.x `vm.$watch` API but with important differences.\r\n\r\nThe first argument passed to `watch` can be either a getter function or a value wrapper. The second argument is a callback that will only get called when the value returned from the getter or the value wrapper has changed:\r\n\r\n``` js\r\nwatch(\r\n  // getter\r\n  () => count.value + 1,\r\n  // callback\r\n  (value, oldValue) => {\r\n    console.log('count + 1 is: ', value)\r\n  }\r\n)\r\n// -> count + 1 is: 1\r\n\r\ncount.value++\r\n// -> count + 1 is: 2\r\n```\r\n\r\nUnlike 2.x `$watch`, the callback will be called once when the watcher is first created. This is similar to 2.x watchers with `immediate: true`, but with a slight difference. **By default, the callback is called after current renderer flush.** In other words, the callback is always called when the DOM has already been updated. [This behavior can be configured](#watcher-callback-timing).\r\n\r\nIn 2.x we often notice code that performs the same logic in `mounted` and in a watcher callback - e.g. fetching data based on a prop. The new `watch` behavior makes it achievable with a single statement.\r\n\r\n### Watching Props\r\n\r\nAs mentioned previously, the `props` object passed to the `setup()` function is reactive and can be used to watch for props changes:\r\n\r\n``` js\r\nconst MyComponent = {\r\n  props: {\r\n    id: number\r\n  },\r\n  setup(props) {\r\n    const data = value(null)\r\n    watch(() => props.id, async (id) => {\r\n      data.value = await fetchData(id)\r\n    })\r\n  }\r\n}\r\n```\r\n\r\n### Watching Value Wrappers\r\n\r\n``` js\r\n// double is a computed value\r\nconst double = computed(() => count.value * 2)\r\n\r\n// watch a value directly\r\nwatch(double, value => {\r\n  console.log('double the count is: ', value)\r\n}) // -> double the count is: 0\r\n\r\ncount.value++ // -> double the count is: 2\r\n```\r\n\r\n### Stopping a Watcher\r\n\r\nA `watch` call returns a stop handle:\r\n\r\n``` js\r\nconst stop = watch(...)\r\n// stop watching\r\nstop()\r\n```\r\n\r\nIf `watch` is called inside `setup()` or lifecycle hooks of a component instance, it will automatically be stopped when the associated component instance is unmounted:\r\n\r\n``` js\r\nexport default {\r\n  setup() {\r\n    // stopped automatically when the component unmounts\r\n    watch(/* ... */)\r\n  }\r\n}\r\n```\r\n\r\n### Effect Cleanup\r\n\r\nSometimes the watcher callback will perform async side effects that need to be invalidated when the watched value changes. The watcher callback receives a 3rd argument that can be used to register a cleanup function. The cleanup function is called when:\r\n\r\n- the watcher is about to re-run\r\n- the watcher is stopped (i.e. when the component is unmounted if `watch` is used inside `setup()`)\r\n\r\n``` js\r\nwatch(idValue, (id, oldId, onCleanup) => {\r\n  const token = performAsyncOperation(id)\r\n  onCleanup(() => {\r\n    // id has changed or watcher is stopped.\r\n    // invalidate previously pending async operation\r\n    token.cancel()\r\n  })\r\n})\r\n```\r\n\r\nWe are registering cleanup via a passed-in function instead of returning it from the callback (like React `useEffect`) because the return value is important for async error handling. It is very common for the watcher callback to be an async function when performing data fetching:\r\n\r\n``` js\r\nconst data = value(null)\r\nwatch(getId, async (id) => {\r\n  data.value = await fetchData(id)\r\n})\r\n```\r\n\r\nAn async function implicitly returns a Promise, but the cleanup function needs to be registered immediately before the Promise resolves. In addition, Vue relies on the returned Promise to automatically handle potential errors in the Promise chain.\r\n\r\n### Watcher Callback Timing\r\n\r\nBy default, all watcher callbacks are fired **after current renderer flush.** This ensures that when callbacks are fired, the DOM will be in already-updated state. If you want a watcher callback to fire before flush or synchronously, you can use the `flush` option:\r\n\r\n``` js\r\nwatch(\r\n  () => count.value + 1,\r\n  () => console.log(`count changed`),\r\n  {\r\n    flush: 'post', // default, fire after renderer flush\r\n    flush: 'pre', // fire right before renderer flush\r\n    flush: 'sync' // fire synchronously\r\n  }\r\n)\r\n```\r\n\r\n### Full `watch` Options\r\n\r\n``` ts\r\ninterface WatchOptions {\r\n  lazy?: boolean\r\n  deep?: boolean\r\n  flush?: 'pre' | 'post' | 'sync'\r\n  onTrack?: (e: DebuggerEvent) => void\r\n  onTrigger?: (e: DebuggerEvent) => void\r\n}\r\n```\r\n\r\n## Lifecycle Hooks\r\n\r\nAll current lifecycle hooks will have an equivalent `onXXX` function that can be used inside `setup()`:\r\n\r\n``` js\r\nimport { onMounted, onUpdated, onUnmounted } from 'vue'\r\n\r\nconst MyComponent = {\r\n  setup() {\r\n    onMounted(() => {\r\n      console.log('mounted!')\r\n    })\r\n    onUpdated(() => {\r\n      console.log('updated!')\r\n    })\r\n    onUnmounted(() => {\r\n      console.log('unmounted!')\r\n    })\r\n  }\r\n}\r\n```\r\n\r\n## Dependency Injection\r\n\r\n``` js\r\nimport { provide, inject } from 'vue'\r\n\r\nconst CountSymbol = Symbol()\r\n\r\nconst Ancestor = {\r\n  setup() {\r\n    // providing a value can make it reactive\r\n    const count = value(0)\r\n    provide({\r\n      [CountSymbol]: count\r\n    })\r\n  }\r\n}\r\n\r\nconst Descendent = {\r\n  setup() {\r\n    const count = inject(CountSymbol)\r\n    return {\r\n      count\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nIf provided key contains a value wrapper, `inject` will also return a value wrapper and the binding will be reactive (i.e. the child will update if ancestor mutates the provided value).\r\n\r\n# Drawbacks\r\n\r\nMakes it more difficult to reflect and manipulate component definitions. (Maybe that's a good thing?)\r\n\r\n# Alternatives\r\n\r\n- [Class API](https://github.com/vuejs/rfcs/pull/17) (dropped)\r\n\r\n# Adoption strategy\r\n\r\nThe proposed APIs are all new additions and can theoretically be introduced in a completely backwards compatible way. However, the new APIs can replace many of the existing options and makes them unnecessary in the long run. Being able to drop some of these old options will result in considerably smaller bundle size and better performance.\r\n\r\nTherefore we are planning to provide two builds for 3.0:\r\n\r\n- **Compatibility build**: supports both the new function-based APIs AND all the 2.x options.\r\n\r\n- **Standard build**: supports the new function-based APIs and only a subset of 2.x options.\r\n\r\nCurrent 2.x users can start with the compatibility build and progressively migrate away from deprecated options, until eventually switching to the standard build.\r\n\r\n### Preserved Options\r\n\r\n> Preserved options work the same as 2.x and are available in both the compatibility and standard builds of 3.0. Options marked with * may receive further adjustments before 3.0 official release.\r\n\r\n- `name`\r\n- `props`\r\n- `template`\r\n- `render`\r\n- `components`\r\n- `directives`\r\n- `filters` *\r\n- `delimiters` *\r\n- `comments` *\r\n\r\n### Options deprecated by this RFC\r\n\r\n> These options will only be available in the compatibility build of 3.0.\r\n\r\n- `data` (replaced by `value` and `value.raw` returned from `setup()`)\r\n- `computed` (replaced by `computed` returned from `setup()`)\r\n- `methods` (replaced by plain functions returned from `setup()`)\r\n- `watch` (replaced by `watch`)\r\n- `provide/inject` (replaced by `provide` and `inject`)\r\n- `mixins` (replaced by function composition)\r\n- `extends` (replaced by function composition)\r\n- All lifecycle hooks (replaced by `onXXX` functions)\r\n\r\n### Options deprecated by other RFCs\r\n\r\n> These options will only be available in the compatibility build of 3.0.\r\n\r\n- `el`\r\n\r\n  Components are no longer mounted by instantiating a constructor with `new`, Instead, a root app instance is created and explicitly mounted. See [RFC#29](https://github.com/vuejs/rfcs/blob/global-api-change/active-rfcs/0000-global-api-change.md#mounting-app-instance).\r\n\r\n- `propsData`\r\n\r\n  Props for root component can be passed via app instance's `mount` method. See [RFC#29](https://github.com/vuejs/rfcs/blob/global-api-change/active-rfcs/0000-global-api-change.md#mounting-app-instance).\r\n\r\n- `functional`\r\n\r\n  Functional components are now declared as plain functions. See [RFC#27](https://github.com/vuejs/rfcs/pull/27).\r\n\r\n- `model`\r\n\r\n  No longer necessary with `v-model` arguments. See [RFC#31](https://github.com/vuejs/rfcs/pull/31).\r\n\r\n- `inheritAttrs`\r\n\r\n  Deperecated by [RFC#26](https://github.com/vuejs/rfcs/pull/26).\r\n\r\n# Appendix\r\n\r\n## Comparison with React Hooks\r\n\r\nThe function based API provides the same level of logic composition capabilities as React Hooks, but with some important differences. Unlike React hooks, the `setup()` function is called only once. This means code using Vue's function APIs are:\r\n\r\n- In general more aligned with the intuitions of idiomatic JavaScript code;\r\n- Not sensitive to call order and can be conditional;\r\n- Not called repeatedly on each render and produce less GC pressure;\r\n- Not subject to the issue where `useEffect` callback may capture stale variables if the user forgets to pass the correct dependency array;\r\n- Not subject to the issue where `useMemo` is almost always needed in order to prevent inline handlers causing over-re-rendering of child components;\r\n\r\n## Type Issues with Class API\r\n\r\nThe primary goal of introducing the Class API was to provide an alternative API that comes with better TypeScript inference support. However, the fact that Vue components need to merge properties declared from multiple sources onto a single `this` context creates a bit of a challenge even with a Class-based API.\r\n\r\nOne example is the typing of props. In order to merge props onto `this`, we have to either use a generic argument to the component class, or use a decorator.\r\n\r\nHere's an example using generic arguments:\r\n\r\n``` ts\r\ninterface Props {\r\n  message: string\r\n}\r\n\r\nclass App extends Component<Props> {\r\n  static props = {\r\n    message: String\r\n  }\r\n}\r\n```\r\n\r\nSince the interface passed to the generic argument is in type-land only, the user still needs to provide a runtime props declaration for the props proxying behavior on `this`. This double-declaration is redundant and awkward.\r\n\r\nWe've considered using decorators as an alternative:\r\n\r\n``` ts\r\nclass App extends Component<Props> {\r\n  @prop message: string\r\n}\r\n```\r\n\r\nUsing decorators creates a reliance on a stage-2 spec with a lot of uncertainties, especially when TypeScript's current implementation is completely out of sync with the TC39 proposal. In addition, there is no way to expose the types of props declared with decorators on `this.$props`, which breaks TSX support. Users may also assume they can declare a default value for the prop with `@prop message: string = 'foo'` when technically it just can't be made to work as expected.\r\n\r\nIn addition, currently there is no way to leverage contextual typing for the arguments of class methods - which means the arguments passed to a Class' `render` function cannot have inferred types based on the Class' other properties.\r\n",
            reactions: {
                url: 'https://api.github.com/repos/vuejs/core/issues/35/reactions',
                total_count: 1,
                '+1': 0,
                '-1': 0,
                laugh: 0,
                hooray: 0,
                confused: 0,
                heart: 0,
                rocket: 1,
                eyes: 0,
            },
            timeline_url: 'https://api.github.com/repos/vuejs/core/issues/35/timeline',
            performed_via_github_app: null,
            state_reason: 'completed',
            score: 1.0,
        },
        {
            url: 'https://api.github.com/repos/vuejs/core/issues/20',
            repository_url: 'https://api.github.com/repos/vuejs/core',
            labels_url: 'https://api.github.com/repos/vuejs/core/issues/20/labels{/name}',
            comments_url: 'https://api.github.com/repos/vuejs/core/issues/20/comments',
            events_url: 'https://api.github.com/repos/vuejs/core/issues/20/events',
            html_url: 'https://github.com/vuejs/core/issues/20',
            id: 414349971,
            node_id: 'MDU6SXNzdWU0MTQzNDk5NzE=',
            number: 20,
            title: 'Class API RFC Draft (for internal feedback)',
            user: {
                login: 'yyx990803',
                id: 499550,
                node_id: 'MDQ6VXNlcjQ5OTU1MA==',
                avatar_url: 'https://avatars.githubusercontent.com/u/499550?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/yyx990803',
                html_url: 'https://github.com/yyx990803',
                followers_url: 'https://api.github.com/users/yyx990803/followers',
                following_url: 'https://api.github.com/users/yyx990803/following{/other_user}',
                gists_url: 'https://api.github.com/users/yyx990803/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/yyx990803/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/yyx990803/subscriptions',
                organizations_url: 'https://api.github.com/users/yyx990803/orgs',
                repos_url: 'https://api.github.com/users/yyx990803/repos',
                events_url: 'https://api.github.com/users/yyx990803/events{/privacy}',
                received_events_url: 'https://api.github.com/users/yyx990803/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [],
            state: 'closed',
            locked: true,
            assignee: null,
            assignees: [],
            milestone: null,
            comments: 22,
            created_at: '2019-02-25T23:04:40Z',
            updated_at: '2023-11-17T00:19:21Z',
            closed_at: '2019-06-25T09:33:34Z',
            author_association: 'MEMBER',
            active_lock_reason: null,
            body: "- Start Date: 2019-01-21\r\n- Target Major Version: 3.x\r\n- Reference Issues:\r\n- Implementation PR:\r\n\r\n# Summary\r\n\r\nIntroduce built-in support for authoring components as native ES2015 classes.\r\n\r\n# Basic example\r\n\r\n``` js\r\nimport Vue from 'vue'\r\n\r\nexport default class App extends Vue {\r\n  // options declared via static properties (stage 3)\r\n  // more details below\r\n  static template = `\r\n    <div>{{ count }}</div>\r\n  `\r\n\r\n  // reactive data declared via class fields (stage 3)\r\n  // more details below\r\n  count = 0\r\n\r\n  // lifecycle\r\n  created() {\r\n    console.log(this.count)\r\n  }\r\n\r\n  // getters are converted to computed properties\r\n  get plusOne() {\r\n    return this.count + 1\r\n  }\r\n\r\n  // a method\r\n  increment() {\r\n    this.count++\r\n  }\r\n}\r\n```\r\n\r\n# Motivation\r\n\r\nVue's current object-based component API has created some challenges when it comes to type inference. As a result, most users opting into using Vue with TypeScript end up using [vue-class-component](https://github.com/vuejs/vue-class-component). This approach works, but with some drawbacks:\r\n\r\n- Internally, Vue 2.x already represents each component instance with an underlying \"class\". We are using quotes here because it's not using the native ES2015 syntax but the ES5-style constructor/prototype function. Nevertheless, conceptually components are already handled as classes internally.\r\n\r\n- `vue-class-component` had to implement some inefficient workarounds in order to provide the desired API without altering Vue internals.\r\n\r\n- `vue-class-component` has to maintain typing compatibility with Vue core, and the maintenance overhead can be eliminated by exposing the class directly from Vue core.\r\n\r\nThe primary motivation of native class support is to provide a built-in and more efficient replacement for `vue-class-component`. The affected target audience are most likely also TypeScript users.\r\n\r\nThe API is also designed to not rely on anything TypeScript specific: it should work equally well in plain ES, for users who prefer using native ES classes.\r\n\r\n**Note we are not pushing this as a replacement for the existing object-based API - the object-based API will continue to work in 3.0.**\r\n\r\n# Detailed design\r\n\r\n## Basics\r\n\r\nA component can be declared by extending the base `Vue` class provided by Vue core:\r\n\r\n``` js\r\nimport Vue from 'vue'\r\n\r\nclass MyComponent extends Vue {}\r\n```\r\n\r\n### Data\r\n\r\nReactive instance data properties can be declared using [class fields syntax (stage 3)](https://github.com/tc39/proposal-class-fields):\r\n\r\n``` js\r\nclass MyComponent extends Vue {\r\n  count = 0\r\n}\r\n```\r\n\r\nThis is currently supported in Chrome stable 72+ and TypeScript. It can also be transpiled using Babel. If using native ES classes without any transpilation, it's also possible to manually set `this.count = 0` in `constructor`, which would in turn require a `super()` call:\r\n\r\n``` js\r\n// NOT recommended.\r\nclass MyComponent extends Vue {\r\n  constructor() {\r\n    super()\r\n    this.count = 0\r\n  }\r\n}\r\n```\r\n\r\nThis is verbose and also has incorrect semantics (see below). A less verbose alternative is using the special `data()` method, which works the same as in the object-based syntax:\r\n\r\n``` js\r\nclass MyComponent extends Vue {\r\n  data() {\r\n    return {\r\n      count: 0\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n#### A Note on `[[Set]]` vs `[[Define]]`\r\n\r\nThe class field syntax uses `[[Define]]` semantics in both native and transpiled implementations (Babel already conforms to the latest spec and TS will have to follow suite). This means `count = 0` in the class body is executed with the semantics of `Object.defineProperty` and will always overwrite a property of the same name inherited from a parent class, regardless of whether it has a setter or not.\r\n\r\nIn comparison, `this.count = 0` in constructor is using `[[Set]]` semantics - if the parent class has a defined setter named `count`, the operation will trigger the setter instead of overwriting the definition.\r\n\r\nFor Vue's API, `[[Define]]` is the correct semantics, since an extended class declaring a data property should overwrite a property with the same name on the parent class.\r\n\r\nThis should be a very rare edge case since most users will likely be using the class field syntax either natively or via a transpiler with correct semantics, or using the `data()` alternative.\r\n\r\n### Lifecycle Hooks\r\n\r\nBuilt-in lifecycle hooks should be declared directly as methods, and works largely the same with their object-based counterparts:\r\n\r\n``` js\r\nclass MyComponent extends Vue {\r\n  created() {\r\n    console.log('created')\r\n  }\r\n}\r\n```\r\n\r\n### Props\r\n\r\nIn v3, props declarations can be optional. The behavior will be different based on whether props are declared.\r\n\r\n#### Props with Explicit Declaration\r\n\r\nProps can be declared using the `props` static property (static properties are used for all component options that do not have implicit mapping). When props are declared, they can be accessed directly on `this`:\r\n\r\n``` js\r\nclass MyComponent extends Vue {\r\n  // props declarations are fully compatible with v2 options\r\n  static props = {\r\n    msg: String\r\n  }\r\n\r\n  created() {\r\n    // available on `this`\r\n    console.log(this.msg)\r\n\r\n    // also available on `this.$props`\r\n    console.log(this.$props.msg)\r\n  }\r\n}\r\n```\r\n\r\nSimilar to v2, any attributes passed to the component but is not declared as a prop will be exposed as `this.$attrs`. Note that the non-props attribute fallthrough behavior will also be adjusted - [it is discussed in more details in a separate RFC](TODO).\r\n\r\n#### Props without Explicit Declaration\r\n\r\nIt is possible to omit props declarations in v3. When there is no explicit props declaration, props will **NOT** be exposed on `this` - they will only be available on `this.$props`:\r\n\r\n``` js\r\nclass MyComponent extends Vue {\r\n  created() {\r\n    console.log(this.$props.msg)\r\n  }\r\n}\r\n```\r\n\r\nInside templates, the prop also must be accessed with the `$props` prefix, .e.g. `{{ $props.msg }}`.\r\n\r\nAny attribute passed to this component will be exposed in `this.$props`. In addition, `this.$attrs` will be simply pointing to `this.$props` since they are equivalent in this case.\r\n\r\n### Computed Properties\r\n\r\nComputed properties are declared as getter methods:\r\n\r\n``` js\r\nclass MyComponent extends Vue {\r\n  count = 0\r\n\r\n  get doubleCount() {\r\n    return this.count * 2\r\n  }\r\n}\r\n```\r\n\r\nNote although we are using the getter syntax, these functions are not used a literal getters - they are converted into Vue computed properties internally with dependency-tracking-based caching.\r\n\r\n> Do we need a way to opt-out? It can probably be done via decorators.\r\n\r\n### Methods\r\n\r\nAny method that is not a reserved lifecycle hook is considered a normal instance method:\r\n\r\n``` js\r\nclass MyComponent extends Vue {\r\n  count = 0\r\n\r\n  created() {\r\n    this.logCount()\r\n  }\r\n\r\n  logCount() {\r\n    console.log(this.count)\r\n  }\r\n}\r\n```\r\n\r\nWhen methods are accessed from `this`, they are **automatically bound to the instance.** This means there is no need to worry about calling `this.foo = this.foo.bind(this)`.\r\n\r\n### Other Options\r\n\r\nOther options that do not have implicit mapping in the class syntax should be declared as static class properties:\r\n\r\n``` js\r\nclass MyComponent extends Vue {\r\n  static template = `\r\n    <div>hello</div>\r\n  `\r\n}\r\n```\r\n\r\nThe above syntax requires [static class fields (stage 3)](https://github.com/tc39/proposal-static-class-features). In non-supporting environment, manual attaching is required:\r\n\r\n``` js\r\nclass MyComponent extends Vue {}\r\n\r\nMyComponent.template = `\r\n  <div>hello</div>\r\n`\r\n```\r\n\r\nOr:\r\n\r\n``` js\r\nclass MyComponent extends Vue {}\r\n\r\nObject.assign(MyComponent, {\r\n  template: `\r\n    <div>hello</div>\r\n  `\r\n})\r\n```\r\n\r\n## TypeScript Usage\r\n\r\nIn TypeScript, since `data` properties are declared using class fields, the type inference just works:\r\n\r\n``` ts\r\nclass MyComponent extends Vue {\r\n  count: number = 1\r\n\r\n  created() {\r\n    this.count // number\r\n  }\r\n}\r\n```\r\n\r\nFor props, we intend to provide a decorator that internally transforms decorated fields in to corresponding runtime options (similar to [the `@Prop` decorator in `vue-property-decorators`](https://github.com/kaorun343/vue-property-decorator#Prop)):\r\n\r\n``` ts\r\nimport { prop } from '@vue/decorators'\r\n\r\nclass MyComponent extends Vue {\r\n  @prop count: number\r\n\r\n  created() {\r\n    this.count // number\r\n  }\r\n}\r\n```\r\n\r\nThis is equivalent to the following in terms of runtime behavior (only static type checking, no runtime checks):\r\n\r\n``` ts\r\nclass MyComponent extends Vue {\r\n  static props = ['count']\r\n\r\n  created() {\r\n    this.count\r\n  }\r\n}\r\n```\r\n\r\nThe decorator can also be called with additional options for more specific runtime behavior:\r\n\r\n``` ts\r\nimport { prop } from '@vue/decorators'\r\n\r\nclass MyComponent extends Vue {\r\n  @prop({\r\n    validator: val => {\r\n      // custom runtime validation logic\r\n    }\r\n  })\r\n  msg: string = 'hello'\r\n\r\n  created() {\r\n    this.count // number\r\n  }\r\n}\r\n```\r\n\r\n### Note on Prop Default Value\r\n\r\nNote that due to the limitations of the TypeScript decorator implementation, we cannot use the following to declare default value for a prop:\r\n\r\n``` ts\r\nclass MyComponent extends Vue {\r\n  @prop count: number = 1\r\n}\r\n```\r\n\r\nThe culprit is the following case:\r\n\r\n``` ts\r\nclass MyComponent extends Vue {\r\n  @prop foo: number = 1\r\n  bar = this.foo + 1\r\n}\r\n```\r\n\r\nIf the parent component passes in the `foo` prop, the default value of `1` should be overwritten. However, the way TypeScript transpiles the code places the two lines together in the constructor of the class, giving Vue no chance to overwrite the default value properly. Vue will throw a warning when such usage is detected.\r\n\r\nInstead, use the decorator option to declare default values:\r\n\r\n``` ts\r\nclass MyComponent extends Vue {\r\n  @prop({ default: 1 }) foo: number\r\n  bar = this.foo + 1\r\n}\r\n```\r\n\r\nThis restriction can be lifted in the future when the ES decorators proposal has been finalized and TS has been updated to match the spec, assuming the final spec does not deviate too much from how it works now.\r\n\r\n### `$props` and `$data`\r\n\r\nTo access `this.$props` or `this.$data` in TypeScript, the base `Vue` class accepts generic arguments:\r\n\r\n``` ts\r\ninterface MyProps {\r\n  msg: string\r\n}\r\n\r\ninterface MyData {\r\n  count: number\r\n}\r\n\r\nclass MyComponent extends Vue<MyProps, MyData> {\r\n  count: number = 1\r\n\r\n  created() {\r\n    this.$props.msg\r\n    this.$data.count\r\n  }\r\n}\r\n```\r\n\r\n## Mixins\r\n\r\nMixins work a bit differently with classes, primarily to ensure proper type inference:\r\n\r\n1. If type inference is needed, mixins must be declared as classes extending the base `Vue` class (otherwise, the object format also works).\r\n\r\n2. To use mixins, the final component should extend a class created from the `mixins` method instead of the base `Vue` class.\r\n\r\n``` ts\r\nimport Vue, { mixins } from 'vue'\r\n\r\nclass MixinA extends Vue {\r\n  // class-style mixin\r\n}\r\n\r\nconst MixinB = {\r\n  // object-style mixin\r\n}\r\n\r\nclass MyComponent extends mixins(MixinA, MixinB) {\r\n  // ...\r\n}\r\n```\r\n\r\nThe class returned from `mixins` also accepts the same generics arguments as the base `Vue` class.\r\n\r\n## Difference from 2.x Constructors\r\n\r\nOne major difference between 3.0 classes and the 2.x constructors is that they are not meant to be instantiated directly. i.e. you will no longer be able to do `new MyComponent({ el: '#app' })` to mount it - instead, the instantiation/mounting process will be handled by separate, dedicated APIs. In cases where a component needs to be instantiated for testing purposes, corresponding APIs will also be provided. This is largely due to the internal changes where we are moving the mounting logic out of the component class itself for better decoupling, and also has to do our plan to redesign the global API for bootstrapping an app.\r\n\r\n# Drawbacks\r\n\r\n## Reliance on Stage 2/3 Language Features\r\n\r\n### Class Fields\r\n\r\nThe proposed syntax relies on two currently stage-3 proposals related to class fields:\r\n\r\n- [Class fields](https://github.com/tc39/proposal-class-fields)\r\n- [Static class features](https://github.com/tc39/proposal-static-class-features)\r\n\r\nThese are required to achieve the ideal usage. Although there are workarounds in cases where they are not available, the workarounds result in sub-optimal authoring experience.\r\n\r\nIf the user uses Babel or TypeScript, these can be covered. Luckily these two combined should cover a pretty decent percentage of all users. For learning / prototyping usage without compile steps, browsers with native support (e.g. Chrome Canary) can also be used.\r\n\r\nThere is a small risk since these proposals are just stage 3, and are still being actively debated on - technically, there are still chances that they get further revised or even dropped. The good news is that the parts that are relevant here doesn't seem likely to change. There was a somewhat related debate regarding the semantics of class fields being `[[Set]]` vs `[[Define]]`, and it has been settled as `[[Define]]` which in my opinion is the preferred semantics for this API.\r\n\r\n### Decorators\r\n\r\nThe TypeScript usage relies on decorators. The [decorators proposal](https://github.com/tc39/proposal-decorators) for JavaScript is still stage 2 and undergoing major revisions - it's also completely different from how it is implemented in TS today (although TS is expected to match the proposal once it is finalized). Its latest form just got rejected from advancing to stage 3 at TC39 due to concerns from JavaScript engine implementors. It is thus still quite risky to design the API around decorators at this point.\r\n\r\n**Before ES decorators are finalized, we only recommend using decorators in TypeScript.**\r\n\r\nThe decision to go with decorators for props in TypeScript is due to the following:\r\n\r\n1. Decorators is the only option that allows us to express both static and runtime behavior in the same syntax, without the need for double declaration. This is discussed in more details in the [Alternatives](#declaring-prop-types-via-generic-arguments) section.\r\n\r\n2. Both the current TS implementation and the current stage 2 proposal can support the desired usage.\r\n\r\n3. It's also highly likely that the finalized proposal is going to support the usage as well. So even after the proposal finalizes and TS' implementation has been updated to match the proposal, the API can continue to work without syntax changes.\r\n\r\n4. The decorator-based usage is opt-in and built on top of the `static props` based usage. So even if the proposal changes drastically or gets abandoned we still have something to fallback to.\r\n\r\n5. If users are using TypeScript, they already have decorators available to them via TypeScript's tool chain so unlike vanilla JavaScript there's no need for additional tooling.\r\n\r\n## `this` Identity in `constructor`\r\n\r\nIn Vue 3 component classes, the `this` context in all lifecycle hooks and methods are in fact a Proxy to the actual underlying instance. This Proxy is responsible for returning proper values for the data, props and computed properties defined on the current component, and provides runtime warning checks. It is important for performance reasons as it avoids many expensive `Object.defineProperty` calls when instantiating components.\r\n\r\nIn practice, your code will work exactly the same - the only cases where you need to pay attention is if you are using `this` inside the native `constructor` - this is the only place where Vue cannot swap the identity of `this` so it will not be equal to the `this` exposed everywhere else:\r\n\r\n``` js\r\nlet instance\r\n\r\nclass MyComponent extends Vue {\r\n  constructor() {\r\n    super()\r\n    instance = this // actual instance\r\n  }\r\n\r\n  created() {\r\n    console.log(this === instance) // false, `this` here is the Proxy\r\n  }\r\n}\r\n```\r\n\r\nIn practice, there shouldn't be cases where you must use the `constructor`, so the best practice is to simply avoid it and always use component lifecycle hooks.\r\n\r\n<!-- ## Accessing Props in Data Initializers\r\n\r\nYou *can* access props in class field initializers - however, initializers are called as part of the `constructor` - and as explained above, inside the `constructor`, `this` will point to the actual instance. This means props are not proxied on `this` directly, and must be accessed via `this.$props`:\r\n\r\n``` js\r\nclass MyComponent extends Vue {\r\n  count = this.$props.value + 1\r\n}\r\n``` -->\r\n\r\n## Two Ways of Doing the Same Thing\r\n\r\nThis may cause beginners to face a choice early on: to go with the object syntax, or the class syntax?\r\n\r\nFor users who already have a preference, it is not really an issue. The real issue is that for beginners who are not familiar with classes, the syntax raises the learning barrier. In the long run, as ES classes stabilize and get more widely used, it may eventually become a basic pre-requisite for all JavaScript users, but now is probably not the time yet.\r\n\r\nOne way to deal with it is providing examples for both syntaxes in the new docs and allow switching between them. This allows users to pick a preferred syntax during the learning process.\r\n\r\n# Alternatives\r\n\r\n## Options via Decorator\r\n\r\n``` js\r\n@Component({\r\n  template: `...`\r\n})\r\nclass MyComponent extends Vue {}\r\n```\r\n\r\nThis is similar to `vue-class-component` but it requires decorators - and as mentioned, it is only stage 2 and risky to rely on. We are using decorators for props, but it's primarily for better type-inference and only recommended in TypeScript. For now we should avoid decorators in plain ES as much as possible.\r\n\r\n## Declaring Prop Types via Generic Arguments\r\n\r\nFor declaring prop types in TypeScript, we considered avoiding decorators by merging the props interface passed to the class as a generic argument on to the class instance:\r\n\r\n``` ts\r\ninterface MyProps {\r\n  msg: string\r\n}\r\n\r\nclass MyComponent extends Vue<MyProps> {\r\n  created() {\r\n    this.msg // this becomes available\r\n  }\r\n}\r\n```\r\n\r\nHowever, this creates a mismatch between the typing and the runtime behavior. Because there is no runtime declaration for the `msg` prop, it will **not** be exposed on `this`. To make the types and runtime consistent, we end up with a double-declaration:\r\n\r\n``` ts\r\ninterface MyProps {\r\n  msg: string\r\n}\r\n\r\nclass MyComponent extends Vue<MyProps> {\r\n  static props = ['msg']\r\n\r\n  created() {\r\n    this.msg\r\n  }\r\n}\r\n```\r\n\r\nWe also considered eliminating the need for double-declaration via tooling - e.g. [Vetur](https://github.com/vuejs/vetur) can pre-transform the interface into equivalent runtime declaration, or vice-versa, so that only the interface or the `static props` declaration is needed. However, both have drawbacks:\r\n\r\n- The interface cannot enforce runtime type checking or custom validation;\r\n\r\n- The `static props` runtime declaration cannot facilitate type inference for advanced type shapes.\r\n\r\nDecorators is the only option the can unify both in the same syntax:\r\n\r\n``` ts\r\nclass MyComponent extends Vue {\r\n  @prop({\r\n    validator: value => {\r\n      // custom runtime validation logic\r\n    }\r\n  })\r\n  msg: SomeAdvancedType = 'hello'\r\n\r\n  created() {\r\n    this.msg\r\n  }\r\n}\r\n```\r\n\r\n# Adoption strategy\r\n\r\n- This does not break existing usage, but rather introduces an alternative way of authoring components. TypeScript users, especially those already using `vue-class-component` should have no issue grasping it. For beginners, we should probably avoid using it as the default syntax in docs, but we should provide the option to switching to it in code examples.\r\n\r\n- For existing users using TypeScript and `vue-class-component`, a simple migration strategy would be shipping a build of `vue-class-component` that provides a `@Component` decorator that simply spreads the options on to the class. Since the required change is pretty mechanical, a code mod can also be provided.\r\n",
            reactions: {
                url: 'https://api.github.com/repos/vuejs/core/issues/20/reactions',
                total_count: 4,
                '+1': 4,
                '-1': 0,
                laugh: 0,
                hooray: 0,
                confused: 0,
                heart: 0,
                rocket: 0,
                eyes: 0,
            },
            timeline_url: 'https://api.github.com/repos/vuejs/core/issues/20/timeline',
            performed_via_github_app: null,
            state_reason: 'completed',
            score: 1.0,
        },
        {
            url: 'https://api.github.com/repos/vuejs/core/issues/1',
            repository_url: 'https://api.github.com/repos/vuejs/core',
            labels_url: 'https://api.github.com/repos/vuejs/core/issues/1/labels{/name}',
            comments_url: 'https://api.github.com/repos/vuejs/core/issues/1/comments',
            events_url: 'https://api.github.com/repos/vuejs/core/issues/1/events',
            html_url: 'https://github.com/vuejs/core/issues/1',
            id: 362812562,
            node_id: 'MDU6SXNzdWUzNjI4MTI1NjI=',
            number: 1,
            title: 'Progress Tracking',
            user: {
                login: 'yyx990803',
                id: 499550,
                node_id: 'MDQ6VXNlcjQ5OTU1MA==',
                avatar_url: 'https://avatars.githubusercontent.com/u/499550?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/yyx990803',
                html_url: 'https://github.com/yyx990803',
                followers_url: 'https://api.github.com/users/yyx990803/followers',
                following_url: 'https://api.github.com/users/yyx990803/following{/other_user}',
                gists_url: 'https://api.github.com/users/yyx990803/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/yyx990803/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/yyx990803/subscriptions',
                organizations_url: 'https://api.github.com/users/yyx990803/orgs',
                repos_url: 'https://api.github.com/users/yyx990803/repos',
                events_url: 'https://api.github.com/users/yyx990803/events{/privacy}',
                received_events_url: 'https://api.github.com/users/yyx990803/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [],
            state: 'closed',
            locked: true,
            assignee: null,
            assignees: [],
            milestone: null,
            comments: 0,
            created_at: '2018-09-22T00:53:13Z',
            updated_at: '2023-11-17T00:19:16Z',
            closed_at: '2020-01-02T22:41:38Z',
            author_association: 'MEMBER',
            active_lock_reason: null,
            body: '## Observer\r\n\r\n- [x] Object\r\n- [x] Array\r\n- [x] Collections\r\n  - [x] Map\r\n  - [x] WeakMap\r\n  - [x] Set\r\n  - [x] WeakSet\r\n- [x] Immutable\r\n- [x] Computed\r\n- [x] Advanced Reactivity API (https://github.com/vuejs/rfcs/pull/22)\r\n  - [x] value\r\n  - [x] state / `value.raw`?\r\n  - [x] computed\r\n  - [x] watch\r\n  - [x] setup() hook\r\n\r\n## Core\r\n\r\n- [x] Custom Renderer API - `createRenderer`\r\n- [x] Component\r\n- [x] Portal\r\n- [x] Fragments\r\n- [x] ref\r\n- [x] Directives\r\n- Options\r\n  - [x] props\r\n    - [x] immutable when passed down\r\n    - [x] runtime validation\r\n  - [x] render\r\n\r\n- Global API\r\n  - [x] `createApp`\r\n    - `app.config`\r\n      - [ ] performance\r\n      - [ ] devtools\r\n      - [x] errorHandler\r\n      - [x] warnHandler\r\n      - [ ] ignoredElements\r\n      - [ ] keyCodes\r\n      - [ ] optionMergeStrategies\r\n      - [x] ~~productionTip~~ only show in direct browser builds\r\n      - [ ] ~~silent~~ deprecated\r\n    - `app.use`\r\n    - `app.mixin` (only for legacy mode)\r\n    - `app.directive`\r\n    - `app.component`\r\n  - [x] nextTick\r\n  - [ ] compile\r\n  - [ ] version\r\n\r\n- Lifecycle hooks\r\n  - [x] beforeMount\r\n  - [x] mounted\r\n  - [x] beforeUpdate\r\n  - [x] updated\r\n  - [x] beforeUnmount\r\n  - [x] unmounted\r\n  - [x] errorCaptured\r\n  - [x] renderTracked\r\n  - [x] renderTriggered\r\n\r\n- Instance properties\r\n  - [x] $data\r\n  - [x] $props\r\n  - [x] $attrs\r\n  - [x] $slots\r\n  - [x] $refs\r\n  - [x] $root\r\n  - [x] $parent\r\n  - [ ] $children\r\n  - [x] $options\r\n  - [x] $el\r\n\r\n- Instance methods\r\n  - [x] $forceUpdate\r\n\r\n## Compiler\r\n\r\n- [ ] parser\r\n  - [ ] HTML parser\r\n  - [ ] Vue parser\r\n  - [ ] AST types\r\n- [ ] optimizer\r\n- [ ] codegen\r\n  - [ ] tree-shaking mode\r\n  - [ ] source maps\r\n- [ ] Plugin system\r\n- [ ] Slots\r\n- [ ] `<component is="">`\r\n- Directives\r\n  - [ ] v-if / v-else / v-else-if\r\n  - [ ] v-for\r\n  - [ ] v-on\r\n  - [ ] v-bind\r\n  - [ ] v-model\r\n  - [ ] v-show\r\n  - [ ] v-pre\r\n  - [ ] v-cloak\r\n  - [ ] v-once\r\n  - [ ] v-text\r\n  - [ ] v-html\r\n- [ ] string ref -> function ref\r\n\r\n## On demand features\r\n  - [ ] `createAsyncComponent`\r\n  - [ ] `<transition>`\r\n  - [ ] `<transition-group>`\r\n  - [ ] `<keep-alive>`\r\n    - [ ] activated\r\n    - [ ] deactivated\r\n  - [ ] `<await>`\r\n\r\n## SSR\r\n- [ ] SSR optimizing compiler\r\n- [ ] server-renderer\r\n  - [ ] string\r\n  - [ ] stream\r\n     - [ ] embed state associated with component as inline `<script>`\r\n  - [ ] special handling for Async components\r\n- [ ] Client hydration\r\n- [ ] `$isServer` instance property\r\n\r\n## 2.x Compat\r\n\r\n- [ ] Global config\r\n- [ ] Global API\r\n  - [ ] Vue.extend\r\n  - [ ] Vue.nextTick\r\n  - [ ] Vue.use\r\n  - [ ] Vue.compile\r\n  - [ ] Vue.version\r\n  - [ ] Vue.set\r\n  - [ ] Vue.delete\r\n  - [ ] Vue.component\r\n  - [ ] Vue.directive\r\n  - [ ] Vue.filter\r\n- Options\r\n  - [x] data\r\n  - [x] methods\r\n  - [x] computed\r\n    - [x] get\r\n    - [x] set\r\n    - [x] chained\r\n  - [x] watch\r\n    - [x] getter\r\n    - [ ] dot-delimited path\r\n    - [x] deep\r\n    - [ ] sync\r\n    - [x] immediate\r\n  - [ ] template\r\n  - [ ] functional\r\n  - [ ] el\r\n  - [ ] propsData\r\n  - [ ] parent\r\n  - [ ] mixins\r\n  - [ ] extends\r\n  - [ ] model\r\n  - [ ] comments\r\n  - [x] provide/inject\r\n  - [ ] renderError\r\n  - [ ] inheritAttrs\r\n- Legacy Lifecycle Hooks\r\n  - [ ] beforeCreate\r\n  - [x] created\r\n- Instance Properties\r\n  - [ ] $scopedSlots\r\n  - [ ] $listeners\r\n- Instance methods\r\n  - [x] $watch\r\n  - [x] $nextTick\r\n  - [ ] $mount\r\n  - [ ] $destroy\r\n  - [ ] $on\r\n  - [ ] $once\r\n  - [ ] $off\r\n  - [x] $emit',
            reactions: {
                url: 'https://api.github.com/repos/vuejs/core/issues/1/reactions',
                total_count: 13,
                '+1': 0,
                '-1': 0,
                laugh: 0,
                hooray: 13,
                confused: 0,
                heart: 0,
                rocket: 0,
                eyes: 0,
            },
            timeline_url: 'https://api.github.com/repos/vuejs/core/issues/1/timeline',
            performed_via_github_app: null,
            state_reason: 'completed',
            score: 1.0,
        },
        {
            url: 'https://api.github.com/repos/vuejs/core/issues/30',
            repository_url: 'https://api.github.com/repos/vuejs/core',
            labels_url: 'https://api.github.com/repos/vuejs/core/issues/30/labels{/name}',
            comments_url: 'https://api.github.com/repos/vuejs/core/issues/30/comments',
            events_url: 'https://api.github.com/repos/vuejs/core/issues/30/events',
            html_url: 'https://github.com/vuejs/core/issues/30',
            id: 424067579,
            node_id: 'MDU6SXNzdWU0MjQwNjc1Nzk=',
            number: 30,
            title: 'Global API Change',
            user: {
                login: 'yyx990803',
                id: 499550,
                node_id: 'MDQ6VXNlcjQ5OTU1MA==',
                avatar_url: 'https://avatars.githubusercontent.com/u/499550?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/yyx990803',
                html_url: 'https://github.com/yyx990803',
                followers_url: 'https://api.github.com/users/yyx990803/followers',
                following_url: 'https://api.github.com/users/yyx990803/following{/other_user}',
                gists_url: 'https://api.github.com/users/yyx990803/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/yyx990803/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/yyx990803/subscriptions',
                organizations_url: 'https://api.github.com/users/yyx990803/orgs',
                repos_url: 'https://api.github.com/users/yyx990803/repos',
                events_url: 'https://api.github.com/users/yyx990803/events{/privacy}',
                received_events_url: 'https://api.github.com/users/yyx990803/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [],
            state: 'closed',
            locked: true,
            assignee: null,
            assignees: [],
            milestone: null,
            comments: 11,
            created_at: '2019-03-22T06:40:26Z',
            updated_at: '2023-11-16T00:20:00Z',
            closed_at: '2019-04-09T08:02:20Z',
            author_association: 'MEMBER',
            active_lock_reason: null,
            body: "- Start Date: (fill me in with today's date, YYYY-MM-DD)\r\n- Target Major Version: (2.x / 3.x)\r\n- Reference Issues: (fill in existing related issues, if any)\r\n- Implementation PR: (leave this empty)\r\n\r\n# Summary\r\n\r\nRe-design app bootstrapping and global configuration API.\r\n\r\n# Basic example\r\n\r\n## Before\r\n\r\n``` js\r\nimport Vue from 'vue'\r\nimport App from './App.vue'\r\n\r\nVue.config.ignoredElements = [/^app-/]\r\nVue.use(/* ... */)\r\nVue.mixin(/* ... */)\r\nVue.component(/* ... */)\r\nVue.directive(/* ... */)\r\n\r\nnew Vue({\r\n  render: h => h(App)\r\n}).$mount('#app')\r\n```\r\n\r\n## After\r\n\r\n``` js\r\nimport { createApp } from 'vue'\r\nimport App from './App.vue'\r\n\r\nconst app = createApp()\r\n\r\napp.config.ignoredElements = [/^app-/]\r\napp.use(/* ... */)\r\napp.mixin(/* ... */)\r\napp.component(/* ... */)\r\napp.directive(/* ... */)\r\n\r\napp.mount(App, '#app')\r\n```\r\n\r\n# Motivation\r\n\r\nVue's current global API and configurations permanently mutate global state. This leads to a few problems:\r\n\r\n- Global configuration makes it easy to accidentally pollute other test cases during testing. Users need to carefully store original global configuration and restore it after each test (e.g. resetting `Vue.config.errorHandler`). Some APIs (e.g. `Vue.use`, `Vue.mixin`) don't even have a way to revert their effects. This makes tests involving plugins particularly tricky.\r\n\r\n  - `vue-test-utils` has to implement a special API `createLocalVue` to deal with this\r\n\r\n- This also makes it difficult to share the same copy of `Vue` between multiple \"apps\" on the same page, but with different global configurations:\r\n\r\n  ``` js\r\n  // this affects both root instances\r\n  Vue.mixin({ /* ... */ })\r\n\r\n  const app1 = new Vue({ el: '#app-1' })\r\n  const app2 = new Vue({ el: '#app-2' })\r\n  ```\r\n\r\n# Detailed design\r\n\r\nTechnically, Vue 2 doesn't have the concept of an \"app\". What we define as an app is simply a root Vue instance created via `new Vue()`. Every root instance created from the same `Vue` constructor shares the same global configuration.\r\n\r\nIn this proposal we introduce a new global API, `createApp`:\r\n\r\n``` js\r\nimport { createApp } from 'vue'\r\nimport App from './App.vue'\r\n\r\nconst app = createApp(App)\r\n```\r\n\r\nCalling `createApp` with a root component returns an **app instance**. An app instance provides an **app context**. The entire component tree formed by the root instance and its descendent components share the same app context, which provides the configurations that were previously \"global\" in Vue 2.x.\r\n\r\n## Global API Mapping\r\n\r\nAn app instance exposes a subset of the current global APIs. The rule of thumb is any APIs that globally mutate Vue's behavior are now moved to the app instance. These include:\r\n\r\n- Global configuration\r\n  - `Vue.config` -> `app.config`\r\n    - with the exception of `Vue.config.productionTip`\r\n- Asset registration APIs\r\n  - `Vue.component` -> `app.component`\r\n  - `Vue.directive` -> `app.directive`\r\n  - `Vue.filter` -> `app.filter`\r\n- Behavior Extension APIs\r\n  - `Vue.mixin` -> `app.mixin`\r\n  - `Vue.use` -> `app.use`\r\n\r\nGlobal APIs that are idempotent (i.e. do not globally mutate behavior) are now named exports as proposed in [Global API Treeshaking](https://github.com/vuejs/rfcs/pull/19).\r\n\r\n## Mounting App Instance\r\n\r\nThe app instance can be mounted with the `mount` method. It works the same as the existing `vm.$mount()` component instance method and returns the mounted root component instance:\r\n\r\n``` js\r\nconst rootInstance = app.mount('#app')\r\n\r\nrootInstance instanceof Vue // true\r\n```\r\n\r\n## Provide / Inject\r\n\r\nAn app instance can also provide dependencies that can be injected by any component inside the app:\r\n\r\n``` js\r\n// in the entry\r\napp.provide({\r\n  [ThemeSymbol]: theme\r\n})\r\n\r\n// in a child component\r\nexport default {\r\n  inject: {\r\n    theme: {\r\n      from: ThemeSymbol\r\n    }\r\n  },\r\n  template: `<div :style=\"{ color: theme.textColor }\" />`\r\n}\r\n```\r\n\r\nThis is similar to using the `provide` option in a 2.x root instance.\r\n\r\n# Drawbacks\r\n\r\n- Global APIs are now split between app instance methods and global named imports, instead of a single namespace. However the split makes sense because:\r\n\r\n  - App instance methods are configuration APIs that globally mutate an app's behavior. They are also almost always used together only in the entry file of a project.\r\n\r\n  - Global named imports are idempotent helper methods that are typically imported and used across the entire codebase.\r\n\r\n# Alternatives\r\n\r\nN/A\r\n\r\n# Adoption strategy\r\n\r\n- The transformation is straightforward (as seen in the basic example).\r\n- A codemod can also be provided.\r\n\r\n# Unresolved questions\r\n\r\n- `Vue.config.productionTip` is left out because it is indeed \"global\". Maybe it should be moved to a global method?\r\n\r\n  ``` js\r\n  import { suppressProductionTip } from 'vue'\r\n\r\n  suppressProductionTip()\r\n  ```\r\n",
            reactions: {
                url: 'https://api.github.com/repos/vuejs/core/issues/30/reactions',
                total_count: 0,
                '+1': 0,
                '-1': 0,
                laugh: 0,
                hooray: 0,
                confused: 0,
                heart: 0,
                rocket: 0,
                eyes: 0,
            },
            timeline_url: 'https://api.github.com/repos/vuejs/core/issues/30/timeline',
            performed_via_github_app: null,
            state_reason: 'completed',
            score: 1.0,
        },
        {
            url: 'https://api.github.com/repos/vuejs/core/issues/2',
            repository_url: 'https://api.github.com/repos/vuejs/core',
            labels_url: 'https://api.github.com/repos/vuejs/core/issues/2/labels{/name}',
            comments_url: 'https://api.github.com/repos/vuejs/core/issues/2/comments',
            events_url: 'https://api.github.com/repos/vuejs/core/issues/2/events',
            html_url: 'https://github.com/vuejs/core/issues/2',
            id: 362814675,
            node_id: 'MDU6SXNzdWUzNjI4MTQ2NzU=',
            number: 2,
            title: 'Initial proposal of breaking changes in 3.0',
            user: {
                login: 'yyx990803',
                id: 499550,
                node_id: 'MDQ6VXNlcjQ5OTU1MA==',
                avatar_url: 'https://avatars.githubusercontent.com/u/499550?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/yyx990803',
                html_url: 'https://github.com/yyx990803',
                followers_url: 'https://api.github.com/users/yyx990803/followers',
                following_url: 'https://api.github.com/users/yyx990803/following{/other_user}',
                gists_url: 'https://api.github.com/users/yyx990803/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/yyx990803/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/yyx990803/subscriptions',
                organizations_url: 'https://api.github.com/users/yyx990803/orgs',
                repos_url: 'https://api.github.com/users/yyx990803/repos',
                events_url: 'https://api.github.com/users/yyx990803/events{/privacy}',
                received_events_url: 'https://api.github.com/users/yyx990803/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [],
            state: 'closed',
            locked: true,
            assignee: null,
            assignees: [],
            milestone: null,
            comments: 99,
            created_at: '2018-09-22T01:19:52Z',
            updated_at: '2023-11-02T00:18:50Z',
            closed_at: '2019-04-09T08:04:32Z',
            author_association: 'MEMBER',
            active_lock_reason: null,
            body: "## Changes\r\n\r\n### Props\r\n\r\nComponent no longer need to delcare props in order to receive props. Everything passed from parent vnode's `data` (with the exception of internal properties, i,e. `key`, `ref`, `slots` and `nativeOn*`) will be available in `this.$props` and also as the first argument of the render function. This eliminates the need for `this.$attrs` and `this.$listeners`.\r\n\r\nWhen no props are declared on a component, props will **not** be proxied on the component instance and can only be accessed via `this.$props` or the `props` argument in render functions.\r\n\r\nYou still **can** delcare props in order to specify default values and perform runtime type checking, and it works just like before. Declared props will also be proxied on the component instance. However, the behavior of **undeclared props falling through as attrs** will be removed; it's as if `inheritAttr` now defaults to `false`. The component will be responsible for merging the props as attrs onto the desired element.\r\n\r\n### VNodes\r\n\r\n#### Flat Data Format\r\n\r\n``` js\r\n// before\r\n{\r\n  attrs: { id: 'foo' },\r\n  domProps: { innerHTML: '' },\r\n  on: { click: foo },\r\n  key: 'foo',\r\n  ref: 'bar'\r\n}\r\n\r\n// after (consistent with JSX usage)\r\n{\r\n  id: 'foo',\r\n  domPropsInnerHTML: '',\r\n  onClick: foo,\r\n  key: 'foo',\r\n  ref: ref => {\r\n    this.$refs.bar = ref\r\n  }\r\n}\r\n```\r\n\r\n- Less memory allocation & faster diffs\r\n- Makes it consistent with JSX\r\n- Easier spread operations\r\n\r\n#### VNodes are now context-free\r\n\r\n`h` can now be globally imported and is no longer bound to component instacnes. VNodes created are also no longer bound to compomnent instances (this means you can no longer access `vnode.context` to get the component instance that created it)\r\n\r\n### Component in Render Functions\r\n\r\nNo longer resolves component by string names; Any `h` call with a string is considered an element. Components must be resolved before being passed to `h`.\r\n\r\n``` js\r\nimport { resolveComponent } from 'vue'\r\n\r\nrender (h) {\r\n  // only necessary when you are trying to access a registered component instead\r\n  // of an imported one\r\n  const Comp = resolveComponent(this, 'foo')\r\n  return h(Comp)\r\n}\r\n```\r\n\r\nIn templates, components should be uppercase to differentiate from normal elements.\r\n\r\n**NOTE:** how to tell in browser templates? In compiler, use the following intuitions:\r\n\r\n1. If uppercase -> Component\r\n2. If known HTML elements -> element\r\n3. Treat as unknown component - at runtime, try resolving as a component first, if not found, render as element. (`resolveComponent` returns name string if component is not found)\r\n\r\n### Slots\r\n\r\n#### Unifying Normnal Slots and Scoped Slots\r\n\r\n**Scoped slots and normal slots are now unified.** There's no more difference between the two. Inside a component, all slots on `this.$slots` will be functions and all them can be passed arguments.\r\n\r\n#### Usage Syntax Change\r\n\r\n``` js\r\n// before\r\nh(Comp, [\r\n  h('div', { slot: 'foo' }, 'foo')\r\n  h('div', { slot: 'bar' }, 'bar')\r\n])\r\n\r\n// after\r\nh(Comp, () => h('div', 'default slot'))\r\n\r\n// or\r\nimport { childFlags } from 'vue/flags'\r\n\r\nh(Comp, null, {\r\n  slots: {\r\n    foo: () => h('div', 'foo'),\r\n    bar: () => h('div', 'bar')\r\n  }\r\n}, childFlags.COMPILED_SLOTS)\r\n\r\n// also works\r\nh(Comp, null, {\r\n  foo: () => h('div', 'foo'),\r\n  bar: () => h('div', 'bar')\r\n})\r\n```\r\n\r\n### Functional Component\r\n\r\nFunctional components can now really be just functions.\r\n\r\n``` js\r\n// before\r\nconst Func = {\r\n  functional: true,\r\n  render (h, ctx) {\r\n    return h('div')\r\n  }\r\n}\r\n\r\n// Now can also be:\r\nconst Func = (h, props, slots, ctx) => h('div')\r\nFunc.pure = true\r\n```\r\n\r\n### Async Component\r\n\r\nAsync components now must be explicitly created.\r\n\r\n``` js\r\nimport { createAsyncComponent } from 'vue'\r\n\r\nconst AsyncFoo = createAsyncComponent(() => import('./Foo.vue'))\r\n```\r\n\r\n### Directives\r\n\r\n- Now are internally on-vnode hooks with the exact same lifecycle as components.\r\n\r\n- Custom directives are now applied via a helper:\r\n\r\n``` js\r\nimport { applyDirective, resolveDirective } from 'vue'\r\n\r\nrender (h) {\r\n  // equivalent for v-my-dir\r\n  const myDir = resolveDirective(this, 'my-dir')\r\n  return applyDirective(h('div', 'hello'), [[myDir, this.someValue]])\r\n}\r\n```\r\n\r\n### Styles\r\n\r\nNo longer performs auto-prefixing.\r\n\r\n### Attributes\r\n\r\n- No longer auto coerces boolean or enumerated attribute values.\r\n- No longer removes attribute if value is boolean `false`. Instead, it's set as `attr=\"false\"` instead. To remove the attribute, use `null`.\r\n\r\n### Filters\r\n\r\nFilters are gone for good (or can it?)\r\n\r\n### Refs\r\n\r\n- Function refs are now supported.\r\n- String refs are no longer supported in render functions (now only supported in templates and compiled into function refs)\r\n- String refs no longer automatically generates an array when used with `v-for`. Instead, use something like `:ref=\"'foo' + key\"` or function refs.",
            reactions: {
                url: 'https://api.github.com/repos/vuejs/core/issues/2/reactions',
                total_count: 15,
                '+1': 11,
                '-1': 0,
                laugh: 0,
                hooray: 4,
                confused: 0,
                heart: 0,
                rocket: 0,
                eyes: 0,
            },
            timeline_url: 'https://api.github.com/repos/vuejs/core/issues/2/timeline',
            performed_via_github_app: null,
            state_reason: 'completed',
            score: 1.0,
        },
        {
            url: 'https://api.github.com/repos/vuejs/core/issues/25',
            repository_url: 'https://api.github.com/repos/vuejs/core',
            labels_url: 'https://api.github.com/repos/vuejs/core/issues/25/labels{/name}',
            comments_url: 'https://api.github.com/repos/vuejs/core/issues/25/comments',
            events_url: 'https://api.github.com/repos/vuejs/core/issues/25/events',
            html_url: 'https://github.com/vuejs/core/issues/25',
            id: 423171892,
            node_id: 'MDU6SXNzdWU0MjMxNzE4OTI=',
            number: 25,
            title: 'Dynamic Lifecycle Injection',
            user: {
                login: 'yyx990803',
                id: 499550,
                node_id: 'MDQ6VXNlcjQ5OTU1MA==',
                avatar_url: 'https://avatars.githubusercontent.com/u/499550?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/yyx990803',
                html_url: 'https://github.com/yyx990803',
                followers_url: 'https://api.github.com/users/yyx990803/followers',
                following_url: 'https://api.github.com/users/yyx990803/following{/other_user}',
                gists_url: 'https://api.github.com/users/yyx990803/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/yyx990803/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/yyx990803/subscriptions',
                organizations_url: 'https://api.github.com/users/yyx990803/orgs',
                repos_url: 'https://api.github.com/users/yyx990803/repos',
                events_url: 'https://api.github.com/users/yyx990803/events{/privacy}',
                received_events_url: 'https://api.github.com/users/yyx990803/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [],
            state: 'closed',
            locked: true,
            assignee: null,
            assignees: [],
            milestone: null,
            comments: 6,
            created_at: '2019-03-20T10:21:14Z',
            updated_at: '2023-10-29T00:20:19Z',
            closed_at: '2019-03-26T11:16:35Z',
            author_association: 'MEMBER',
            active_lock_reason: null,
            body: "- Start Date: 03-05-2019\r\n- Target Major Version: 2.x & 3.x\r\n- Reference Issues: N/A\r\n- Implementation PR: N/A\r\n\r\n# Summary\r\n\r\nIntroduce APIs for dynamically injecting component lifecycle hooks.\r\n\r\n# Basic example\r\n\r\n```js\r\nimport { onMounted, onUnmounted } from 'vue'\r\n\r\nexport default {\r\n  beforeCreate() {\r\n    onMounted(() => {\r\n      console.log('mounted')\r\n    })\r\n\r\n    onUnmounted(() => {\r\n      console.log('unmounted')\r\n    })\r\n  }\r\n}\r\n```\r\n\r\n# Motivation\r\n\r\nIn advanced use cases, we sometimes need to dynamically hook into a component's lifecycle events after the component instance has been created. In Vue 2.x there is an undocumented API via custom events:\r\n\r\n``` js\r\nexport default {\r\n  created() {\r\n    this.$on('hook:mounted', () => {\r\n      console.log('mounted!')\r\n    })\r\n  }\r\n}\r\n```\r\n\r\nThis API has some drawbacks because it relies on the event emitter API with string event names and a reference of the target component instance:\r\n\r\n1. Event emitter APIs with string event names are prone to typos and is hard to notice when a typo is made because it fails silently.\r\n\r\n2. If we were to extract complex logic into external functions, the target instance has to be passed to it via an argument. This can get cumbersome when there are additional arguments, and when trying to further split the function into smaller functions. When called inside a component's `data()` or lifecycle hooks, the target instance can already be inferred by the framework, so ideally the instance reference should be made optional.\r\n\r\nThis proposal addresses both problems.\r\n\r\n# Detailed design\r\n\r\nFor each existing lifecycle hook (except `beforeCreate`), there will be an equivalent `onXXX` API:\r\n\r\n``` js\r\nimport { onMounted, onUpdated, onDestroyed } from 'vue'\r\n\r\nexport default {\r\n  created() {\r\n    onMounted(() => {\r\n      console.log('mounted')\r\n    })\r\n\r\n    onUpdated(() => {\r\n      console.log('updated')\r\n    })\r\n\r\n    onDestroyed(() => {\r\n      console.log('destroyed')\r\n    })\r\n  }\r\n}\r\n```\r\n\r\nWhen called inside a component's `data()` or lifecycle hooks, the current instance is automatically inferred. The instance is also passed into the callback as the argument:\r\n\r\n``` js\r\nonMounted(instance => {\r\n  console.log(instance.$options.name)\r\n})\r\n```\r\n\r\n### Explicit Target Instance\r\n\r\nWhen used outside lifecycle hooks, the target instance can be explicitly passed in via the second argument:\r\n\r\n``` js\r\nonMounted(() => { /* ... */ }, targetInstance)\r\n```\r\n\r\nIf the target instance cannot be inferred and no explicit target instance is passed, an error will be thrown.\r\n\r\n### Injection Removal\r\n\r\n`onXXX` calls return a removal function that removes the injected hook:\r\n\r\n``` js\r\n// an updated hook that fires only once\r\nconst remove = onUpdated(() => {\r\n  remove()\r\n})\r\n```\r\n\r\n# Appendix: More Examples\r\n\r\nPre-requisite: please read the [Advanced Reactivity API RFC](https://github.com/vuejs/vue-next/issues/24) first.\r\n\r\nWhen combined with the ability to create and observe state via standalone APIs, it's possible to encapsulate arbitrarily complex logic in an external function, (with capabilities similar to React hooks):\r\n\r\n## Data Fetching\r\n\r\nThis is the equivalent of what we can currently achieve via scoped slots with libs like [vue-promised](https://github.com/posva/vue-promised). This is just an example showing that this new set of API is capable of achieving similar results.\r\n\r\n``` js\r\nimport { value, computed, watch } from 'vue'\r\n\r\nfunction useFetch(endpointRef) {\r\n  const res = value({\r\n    status: 'pending',\r\n    data: null,\r\n    error: null\r\n  })\r\n\r\n  // watch can directly take a computed ref\r\n  watch(endpointRef, endpoint => {\r\n    let aborted = false\r\n    fetch(endpoint)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if (aborted) {\r\n          return\r\n        }\r\n        res.value = {\r\n          status: 'success',\r\n          data,\r\n          error: null\r\n        }\r\n      }).catch(error => {\r\n        if (aborted) {\r\n          return\r\n        }\r\n        res.value = {\r\n          status: 'error',\r\n          data: null,\r\n          error\r\n        }\r\n      })\r\n    return () => {\r\n      aborted = true\r\n    }\r\n  })\r\n\r\n  return res\r\n}\r\n\r\n// usage\r\nconst App = {\r\n  props: ['id'],\r\n  data() {\r\n    return {\r\n      postData: useFetch(computed(() => `/api/posts/${this.id}`))\r\n    }\r\n  },\r\n  template: `\r\n    <div>\r\n      <div v-if=\"postData.status === 'pending'\">\r\n        Loading...\r\n      </div>\r\n      <div v-else-if=\"postData.status === 'success'\">\r\n        {{ postData.data }}\r\n      </div>\r\n      <div v-else>\r\n        {{ postData.error }}\r\n      </div>\r\n    </div>\r\n  `\r\n}\r\n```\r\n\r\n## Use the Platform\r\n\r\nHypothetical examples of exposing state to the component from external sources. This is more explicit than using mixins regarding where the state comes from.\r\n\r\n``` js\r\nimport { value, onMounted, onDestroyed } from 'vue'\r\n\r\nfunction useMousePosition() {\r\n  const x = value(0)\r\n  const y = value(0)\r\n\r\n  const onMouseMove = e => {\r\n    x.value = e.pageX\r\n    y.value = e.pageY\r\n  }\r\n\r\n  onMounted(() => {\r\n    window.addEventListener('mousemove', onMouseMove)\r\n  })\r\n\r\n  onDestroyed(() => {\r\n    window.removeEventListener('mousemove', onMouseMove)\r\n  })\r\n\r\n  return { x, y }\r\n}\r\n\r\nexport default {\r\n  data() {\r\n    const { x, y } = useMousePosition()\r\n    return {\r\n      x,\r\n      y,\r\n      // ... other data\r\n    }\r\n  }\r\n}\r\n```\r\n",
            reactions: {
                url: 'https://api.github.com/repos/vuejs/core/issues/25/reactions',
                total_count: 7,
                '+1': 0,
                '-1': 0,
                laugh: 0,
                hooray: 0,
                confused: 0,
                heart: 7,
                rocket: 0,
                eyes: 0,
            },
            timeline_url: 'https://api.github.com/repos/vuejs/core/issues/25/timeline',
            performed_via_github_app: null,
            state_reason: 'completed',
            score: 1.0,
        },
        {
            url: 'https://api.github.com/repos/vitest-dev/vitest/issues/2756',
            repository_url: 'https://api.github.com/repos/vitest-dev/vitest',
            labels_url: 'https://api.github.com/repos/vitest-dev/vitest/issues/2756/labels{/name}',
            comments_url: 'https://api.github.com/repos/vitest-dev/vitest/issues/2756/comments',
            events_url: 'https://api.github.com/repos/vitest-dev/vitest/issues/2756/events',
            html_url: 'https://github.com/vitest-dev/vitest/issues/2756',
            id: 1558206140,
            node_id: 'I_kwDOGekgx85c4Fa8',
            number: 2756,
            title: 'Multiple async `beforeEach` hooks are not called serially',
            user: {
                login: 'yyx990803',
                id: 499550,
                node_id: 'MDQ6VXNlcjQ5OTU1MA==',
                avatar_url: 'https://avatars.githubusercontent.com/u/499550?v=4',
                gravatar_id: '',
                url: 'https://api.github.com/users/yyx990803',
                html_url: 'https://github.com/yyx990803',
                followers_url: 'https://api.github.com/users/yyx990803/followers',
                following_url: 'https://api.github.com/users/yyx990803/following{/other_user}',
                gists_url: 'https://api.github.com/users/yyx990803/gists{/gist_id}',
                starred_url: 'https://api.github.com/users/yyx990803/starred{/owner}{/repo}',
                subscriptions_url: 'https://api.github.com/users/yyx990803/subscriptions',
                organizations_url: 'https://api.github.com/users/yyx990803/orgs',
                repos_url: 'https://api.github.com/users/yyx990803/repos',
                events_url: 'https://api.github.com/users/yyx990803/events{/privacy}',
                received_events_url: 'https://api.github.com/users/yyx990803/received_events',
                type: 'User',
                user_view_type: 'public',
                site_admin: false,
            },
            labels: [
                {
                    id: 3740101657,
                    node_id: 'LA_kwDOGekgx87e7WwZ',
                    url: 'https://api.github.com/repos/vitest-dev/vitest/labels/breaking%20change',
                    name: 'breaking change',
                    color: 'B60205',
                    default: false,
                    description: '',
                },
                {
                    id: 4237555680,
                    node_id: 'LA_kwDOGekgx878k_fg',
                    url: 'https://api.github.com/repos/vitest-dev/vitest/labels/discussion',
                    name: 'discussion',
                    color: 'D0356A',
                    default: false,
                    description: '',
                },
            ],
            state: 'closed',
            locked: true,
            assignee: null,
            assignees: [],
            milestone: null,
            comments: 3,
            created_at: '2023-01-26T14:12:29Z',
            updated_at: '2023-10-21T00:06:39Z',
            closed_at: '2023-10-06T07:08:14Z',
            author_association: 'NONE',
            active_lock_reason: null,
            body: "### Describe the bug\r\n\r\nWhen multiple async `beforeEach` hooks are declared for a suite, they should be called serially - i.e. the next hook should not execute until the previous hook is resolved. Currently, they are all called in parallel.\r\n\r\nJest calls these hooks with expected behavior (I noticed this when migrating Vue 3's test suite from Jest).\r\n\r\n### Reproduction\r\n\r\n```js\r\nbeforeEach(async () => {\r\n  await new Promise(r => setTimeout(r, 100))\r\n  console.log(1)\r\n})\r\n\r\nbeforeEach(async () => {\r\n  console.log(2)\r\n})\r\n```\r\n\r\nExpects: 1, 2\r\nActual: 2, 1\r\n\r\n### System Info\r\n\r\n```shell\r\nSystem:\r\n    OS: macOS 11.4\r\n    CPU: (8) arm64 Apple M1\r\n    Memory: 88.56 MB / 16.00 GB\r\n    Shell: 5.8 - /bin/zsh\r\n  Binaries:\r\n    Node: 18.12.1 - ~/Library/Caches/fnm_multishells/65334_1674742292927/bin/node\r\n    Yarn: 1.22.5 - /opt/yarn-v1.22.5/bin/yarn\r\n    npm: 8.19.2 - ~/Library/Caches/fnm_multishells/65334_1674742292927/bin/npm\r\n  Browsers:\r\n    Chrome: 109.0.5414.119\r\n    Chrome Canary: 111.0.5560.0\r\n    Firefox: 106.0.5\r\n    Safari: 14.1.1\r\n  npmPackages:\r\n    vite: ^4.0.4 => 4.0.4\r\n    vitest: ^0.28.2 => 0.28.2\r\n```\r\n\r\n\r\n### Used Package Manager\r\n\r\npnpm\r\n\r\n### Validations\r\n\r\n- [X] Follow our [Code of Conduct](https://github.com/vitest-dev/vitest/blob/main/CODE_OF_CONDUCT.md)\r\n- [X] Read the [Contributing Guidelines](https://github.com/vitest-dev/vitest/blob/main/CONTRIBUTING.md).\r\n- [X] Read the [docs](https://vitest.dev/guide/).\r\n- [X] Check that there isn't [already an issue](https://github.com/vitest-dev/vitest/issues) that reports the same bug to avoid creating a duplicate.\r\n- [X] Check that this is a concrete bug. For Q&A open a [GitHub Discussion](https://github.com/vitest-dev/vitest/discussions) or join our [Discord Chat Server](https://chat.vitest.dev).\r\n- [X] The provided reproduction is a [minimal reproducible example](https://stackoverflow.com/help/minimal-reproducible-example) of the bug.",
            reactions: {
                url: 'https://api.github.com/repos/vitest-dev/vitest/issues/2756/reactions',
                total_count: 0,
                '+1': 0,
                '-1': 0,
                laugh: 0,
                hooray: 0,
                confused: 0,
                heart: 0,
                rocket: 0,
                eyes: 0,
            },
            timeline_url: 'https://api.github.com/repos/vitest-dev/vitest/issues/2756/timeline',
            performed_via_github_app: null,
            state_reason: 'completed',
            score: 1.0,
        },
    ],
};
